{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport apiRequest from '../../Servicios/HttpService';\nimport MensajeInicial from '../Extras/MensajeInicial';\nimport AyudanteSesion from '../../Servicios/AyudanteSesion';\nexport default {\n  name: 'GestionDescuentos',\n  // Nombre multi-palabra para evitar errores\n  components: {\n    MensajeInicial\n  },\n  data() {\n    const today = new Date();\n    const currentYear = today.getFullYear();\n    const currentMonth = today.getMonth();\n    return {\n      // Añadir filtros para los descuentos\n      filtros: {\n        isActive: null,\n        productId: null,\n        includeExpired: false,\n        date: null\n      },\n      activeTab: 'lista',\n      descuentos: [],\n      productos: [],\n      productosCalculo: [],\n      // Separar los productos para el cálculo\n      categorias: [],\n      nuevoDescuento: {\n        name: '',\n        type: 'PERCENTAGE',\n        value: null,\n        minQuantity: 1,\n        productId: null,\n        categoryId: null,\n        startDate: null,\n        endDate: null,\n        isActive: true\n      },\n      errores: {\n        name: '',\n        type: '',\n        value: '',\n        minQuantity: '',\n        startDate: '',\n        endDate: '',\n        productId: '',\n        verificarNombre: '',\n        verificar: '',\n        calcularProductId: '',\n        calcularCantidad: '',\n        calcularPrecio: '',\n        calcularFecha: '',\n        calcular: ''\n      },\n      cargando: {\n        general: false,\n        lista: false,\n        guardando: false,\n        verificando: false,\n        calculando: false,\n        productos: false,\n        productosCalculo: false\n      },\n      modoEdicion: false,\n      descuentoEditandoId: null,\n      productoSeleccionado: '',\n      calcularProductoSeleccionado: '',\n      // Propiedades para la verificación de validez\n      verificarDescuentoNombre: '',\n      verificarDescuentoSeleccionado: null,\n      resultadoVerificacion: null,\n      // Propiedades para calcular descuentos\n      calcularDatos: {\n        productId: null,\n        cantidad: 1,\n        precioUnitario: null,\n        fecha: null\n      },\n      calcularFechaInput: '',\n      resultadosCalculo: [],\n      // Calendario personalizado\n      fechaInicioInput: '',\n      fechaFinInput: '',\n      showStartCalendar: false,\n      showEndCalendar: false,\n      showCalcFechaCalendar: false,\n      startCalendarMonth: currentMonth,\n      startCalendarYear: currentYear,\n      endCalendarMonth: currentMonth,\n      endCalendarYear: currentYear,\n      calcFechaCalendarMonth: currentMonth,\n      calcFechaCalendarYear: currentYear,\n      startCalendarStyle: {\n        top: '0px',\n        left: '0px'\n      },\n      endCalendarStyle: {\n        top: '0px',\n        left: '0px'\n      },\n      calcFechaCalendarStyle: {\n        top: '0px',\n        left: '0px'\n      },\n      meses: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n      diasSemana: [\"L\", \"M\", \"X\", \"J\", \"V\", \"S\", \"D\"]\n    };\n  },\n  computed: {\n    descuentosFiltrados() {\n      if (!this.verificarDescuentoNombre) {\n        return this.descuentos;\n      }\n      const nombreBusqueda = this.verificarDescuentoNombre.toLowerCase();\n      return this.descuentos.filter(descuento => descuento.name.toLowerCase().includes(nombreBusqueda));\n    },\n    esAdmin() {\n      const datosUsuario = AyudanteSesion.obtenerDatosSesion();\n      return datosUsuario.rol === 'Admin';\n    },\n    nombreMes() {\n      return this.meses[this.startCalendarMonth];\n    },\n    nombreMesFin() {\n      return this.meses[this.endCalendarMonth];\n    },\n    calcFechaNombreMes() {\n      return this.meses[this.calcFechaCalendarMonth];\n    },\n    startCalendarDays() {\n      return this.getCalendarDays(this.startCalendarYear, this.startCalendarMonth);\n    },\n    endCalendarDays() {\n      return this.getCalendarDays(this.endCalendarYear, this.endCalendarMonth);\n    },\n    calcFechaCalendarDays() {\n      return this.getCalendarDays(this.calcFechaCalendarYear, this.calcFechaCalendarMonth);\n    },\n    mejorDescuento() {\n      if (!this.resultadosCalculo.length) return 0;\n\n      // Encontrar el descuento con el monto más alto\n      return Math.max(...this.resultadosCalculo.filter(r => r.valid).map(r => r.discountAmount || 0));\n    },\n    mejorPrecioFinal() {\n      if (!this.resultadosCalculo.length) return 0;\n\n      // Encontrar el precio final más bajo\n      const precios = this.resultadosCalculo.filter(r => r.valid).map(r => r.finalPrice || 0);\n      return precios.length ? Math.min(...precios) : this.calcularDatos.precioUnitario * this.calcularDatos.cantidad;\n    }\n  },\n  mounted() {\n    this.cargarDescuentos();\n    this.cargarCategorias();\n    this.verificarPermisos();\n\n    // Eventos para el calendario\n    document.addEventListener('click', this.handleClickOutside);\n    window.addEventListener('resize', this.updateCalendarPositions);\n    window.addEventListener('scroll', this.updateCalendarPositions);\n  },\n  beforeDestroy() {\n    // Limpiar eventos\n    document.removeEventListener('click', this.handleClickOutside);\n    window.removeEventListener('resize', this.updateCalendarPositions);\n    window.removeEventListener('scroll', this.updateCalendarPositions);\n  },\n  watch: {\n    activeTab() {\n      this.verificarPermisos();\n    }\n  },\n  methods: {\n    // Método para formatear números con 2 decimales y separador de miles\n    formatearNumero(valor) {\n      return parseFloat(valor).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n    // Método para obtener el tipo de tag según el tipo de descuento\n    getTipoTagType(tipo) {\n      switch (tipo) {\n        case 'PERCENTAGE':\n          return 'is-info';\n        case 'FIXED_AMOUNT':\n          return 'is-success';\n        case 'BUY_X_GET_Y':\n          return 'is-warning';\n        case 'BUNDLE':\n          return 'is-primary';\n        case 'SEASONAL':\n          return 'is-link';\n        default:\n          return 'is-dark';\n      }\n    },\n    // Método para obtener el nombre del tipo de descuento\n    getTipoDescuento(tipo) {\n      switch (tipo) {\n        case 'PERCENTAGE':\n          return 'Porcentaje';\n        case 'FIXED_AMOUNT':\n          return 'Monto Fijo';\n        case 'BUY_X_GET_Y':\n          return 'Promoción';\n        case 'BUNDLE':\n          return 'Paquete';\n        case 'SEASONAL':\n          return 'Temporal';\n        default:\n          return 'Otro';\n      }\n    },\n    // Método para formatear el valor del descuento según su tipo\n    formatearValorDescuento(descuento) {\n      if (!descuento) return 'N/A';\n      switch (descuento.type) {\n        case 'PERCENTAGE':\n          return `${descuento.value}%`;\n        case 'FIXED_AMOUNT':\n          return `$${descuento.value}`;\n        case 'BUY_X_GET_Y':\n          return `${descuento.name}`;\n        case 'BUNDLE':\n          return `Paquete ${descuento.value}`;\n        case 'SEASONAL':\n          return `Descuento ${descuento.value}`;\n        default:\n          return 'N/A';\n      }\n    },\n    async buscarProductos(termino) {\n      if (!termino || termino.trim() === '') {\n        this.productos = []; // Limpiar la lista si no hay término\n        return;\n      }\n      this.cargando.productos = true;\n      try {\n        const response = await apiRequest({\n          method: 'GET',\n          path: `products/search/${termino}` // Ajusta la ruta según sea necesario\n        });\n        if (response && response.data) {\n          // Filtrar y mapear los productos\n          this.productos = response.data.filter(producto => !producto.isDeleted).map(producto => ({\n            id: producto.id,\n            name: `${producto.name} (${producto.brand?.brandName || 'Sin Marca'}) - ${producto.category?.categoryName || 'Sin Categoría'}`,\n            code: producto.code,\n            stock: producto.stock,\n            category: producto.category?.id\n          }));\n        } else {\n          this.productos = [];\n        }\n      } catch (error) {\n        console.error('Error al buscar productos:', error);\n      } finally {\n        this.cargando.productos = false;\n      }\n    },\n    async buscarProductosCalculo(termino) {\n      if (!termino || termino.trim() === '') {\n        this.productosCalculo = []; // Limpiar la lista si no hay término\n        return;\n      }\n      this.cargando.productosCalculo = true;\n      try {\n        const response = await apiRequest({\n          method: 'GET',\n          path: `products/search/${termino}` // Ajusta la ruta según sea necesario\n        });\n        if (response && response.data) {\n          // Filtrar y mapear los productos\n          this.productosCalculo = response.data.filter(producto => !producto.isDeleted).map(producto => ({\n            id: producto.id,\n            name: `${producto.name} (${producto.brand?.brandName || 'Sin Marca'}) - ${producto.category?.categoryName || 'Sin Categoría'}`,\n            code: producto.code,\n            stock: producto.stock,\n            price: producto.salePrice\n          }));\n        } else {\n          this.productosCalculo = [];\n        }\n      } catch (error) {\n        console.error('Error al buscar productos para cálculo:', error);\n      } finally {\n        this.cargando.productosCalculo = false;\n      }\n    },\n    productoSeleccionadoHandler(producto) {\n      if (producto) {\n        console.log('Producto seleccionado:', producto);\n        this.nuevoDescuento.productId = producto.id; // Asignar el ID del producto seleccionado\n        this.nuevoDescuento.categoryId = producto.category || null; // Asignar el ID de la categoría del producto\n        this.productoSeleccionado = producto.name; // Guardar el nombre del producto seleccionado\n      } else {\n        this.nuevoDescuento.productId = null; // Limpiar el ID del producto si no hay selección\n        this.nuevoDescuento.categoryId = null; // Limpiar el ID de la categoría si no hay selección\n      }\n    },\n    calcularProductoSeleccionadoHandler(producto) {\n      if (producto) {\n        console.log('Producto seleccionado para cálculo:', producto);\n        this.calcularDatos.productId = producto.id; // Asignar el ID del producto seleccionado\n        this.calcularProductoSeleccionado = producto.name; // Guardar el nombre del producto seleccionado\n\n        // Si el producto tiene precio, asignarlo automáticamente\n        if (producto.price) {\n          this.calcularDatos.precioUnitario = producto.price;\n        }\n      } else {\n        this.calcularDatos.productId = null; // Limpiar el ID del producto si no hay selección\n      }\n    },\n    verificarPermisos() {\n      // Si no es admin y está en una pestaña restringida, redirigir a una pestaña permitida\n      if (!this.esAdmin && (this.activeTab === 'lista' || this.activeTab === 'nuevo')) {\n        this.activeTab = 'verificar';\n      }\n    },\n    // Métodos para el calendario personalizado\n    toggleStartCalendar() {\n      if (this.showEndCalendar) {\n        this.showEndCalendar = false;\n      }\n      if (this.showCalcFechaCalendar) {\n        this.showCalcFechaCalendar = false;\n      }\n      this.showStartCalendar = !this.showStartCalendar;\n      if (this.showStartCalendar) {\n        this.$nextTick(() => {\n          this.positionStartCalendar();\n        });\n      }\n    },\n    toggleEndCalendar() {\n      if (this.showStartCalendar) {\n        this.showStartCalendar = false;\n      }\n      if (this.showCalcFechaCalendar) {\n        this.showCalcFechaCalendar = false;\n      }\n      this.showEndCalendar = !this.showEndCalendar;\n      if (this.showEndCalendar) {\n        this.$nextTick(() => {\n          this.positionEndCalendar();\n        });\n      }\n    },\n    toggleCalcFechaCalendar() {\n      if (this.showStartCalendar) {\n        this.showStartCalendar = false;\n      }\n      if (this.showEndCalendar) {\n        this.showEndCalendar = false;\n      }\n      this.showCalcFechaCalendar = !this.showCalcFechaCalendar;\n      if (this.showCalcFechaCalendar) {\n        this.$nextTick(() => {\n          this.positionCalcFechaCalendar();\n        });\n      }\n    },\n    positionStartCalendar() {\n      const inputEl = this.$refs.startDateContainer;\n      if (inputEl && this.$refs.startCalendarRef) {\n        const rect = inputEl.getBoundingClientRect();\n        const calendarHeight = this.$refs.startCalendarRef.offsetHeight;\n        const windowHeight = window.innerHeight;\n\n        // Verificar si hay suficiente espacio debajo\n        const spaceBelow = windowHeight - rect.bottom;\n        const showBelow = spaceBelow >= calendarHeight;\n        this.startCalendarStyle = {\n          top: showBelow ? `${rect.bottom + window.scrollY}px` : `${rect.top + window.scrollY - calendarHeight}px`,\n          left: `${rect.left + window.scrollX}px`,\n          zIndex: '1000'\n        };\n      }\n    },\n    positionEndCalendar() {\n      const inputEl = this.$refs.endDateContainer;\n      if (inputEl && this.$refs.endCalendarRef) {\n        const rect = inputEl.getBoundingClientRect();\n        const calendarHeight = this.$refs.endCalendarRef.offsetHeight;\n        const windowHeight = window.innerHeight;\n\n        // Verificar si hay suficiente espacio debajo\n        const spaceBelow = windowHeight - rect.bottom;\n        const showBelow = spaceBelow >= calendarHeight;\n        this.endCalendarStyle = {\n          top: showBelow ? `${rect.bottom + window.scrollY}px` : `${rect.top + window.scrollY - calendarHeight}px`,\n          left: `${rect.left + window.scrollX}px`,\n          zIndex: '1000'\n        };\n      }\n    },\n    positionCalcFechaCalendar() {\n      const inputEl = this.$refs.calcularFechaContainer;\n      if (inputEl && this.$refs.calcFechaCalendarRef) {\n        const rect = inputEl.getBoundingClientRect();\n        const calendarHeight = this.$refs.calcFechaCalendarRef.offsetHeight;\n        const windowHeight = window.innerHeight;\n\n        // Verificar si hay suficiente espacio debajo\n        const spaceBelow = windowHeight - rect.bottom;\n        const showBelow = spaceBelow >= calendarHeight;\n        this.calcFechaCalendarStyle = {\n          top: showBelow ? `${rect.bottom + window.scrollY}px` : `${rect.top + window.scrollY - calendarHeight}px`,\n          left: `${rect.left + window.scrollX}px`,\n          zIndex: '1000'\n        };\n      }\n    },\n    updateCalendarPositions() {\n      if (this.showStartCalendar) {\n        this.positionStartCalendar();\n      }\n      if (this.showEndCalendar) {\n        this.positionEndCalendar();\n      }\n      if (this.showCalcFechaCalendar) {\n        this.positionCalcFechaCalendar();\n      }\n    },\n    handleClickOutside(event) {\n      // Cerrar calendario inicial si se hace clic fuera\n      if (this.showStartCalendar && this.$refs.startCalendarRef && !this.$refs.startCalendarRef.contains(event.target) && this.$refs.startDateContainer && !this.$refs.startDateContainer.contains(event.target)) {\n        this.showStartCalendar = false;\n      }\n\n      // Cerrar calendario final si se hace clic fuera\n      if (this.showEndCalendar && this.$refs.endCalendarRef && !this.$refs.endCalendarRef.contains(event.target) && this.$refs.endDateContainer && !this.$refs.endDateContainer.contains(event.target)) {\n        this.showEndCalendar = false;\n      }\n\n      // Cerrar calendario de fecha de cálculo si se hace clic fuera\n      if (this.showCalcFechaCalendar && this.$refs.calcFechaCalendarRef && !this.$refs.calcFechaCalendarRef.contains(event.target) && this.$refs.calcularFechaContainer && !this.$refs.calcularFechaContainer.contains(event.target)) {\n        this.showCalcFechaCalendar = false;\n      }\n    },\n    getCalendarDays(year, month) {\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n\n      // Obtener el día de la semana del primer día (0 = domingo, 1 = lunes, ..., 6 = sábado)\n      let firstDayOfWeek = firstDay.getDay();\n      // Ajustar para que lunes sea 0\n      firstDayOfWeek = firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1;\n      const days = [];\n\n      // Días del mes anterior\n      const prevMonth = month === 0 ? 11 : month - 1;\n      const prevMonthYear = month === 0 ? year - 1 : year;\n      const daysInPrevMonth = new Date(prevMonthYear, prevMonth + 1, 0).getDate();\n      for (let i = 0; i < firstDayOfWeek; i++) {\n        const day = daysInPrevMonth - firstDayOfWeek + i + 1;\n        days.push({\n          day,\n          date: new Date(prevMonthYear, prevMonth, day),\n          otherMonth: true,\n          id: `prev-${day}`\n        });\n      }\n\n      // Días del mes actual\n      for (let i = 1; i <= daysInMonth; i++) {\n        days.push({\n          day: i,\n          date: new Date(year, month, i),\n          otherMonth: false,\n          id: `current-${i}`\n        });\n      }\n\n      // Días del mes siguiente\n      const nextMonth = month === 11 ? 0 : month + 1;\n      const nextMonthYear = month === 11 ? year + 1 : year;\n      const remainingDays = 42 - days.length; // 6 filas x 7 días\n\n      for (let i = 1; i <= remainingDays; i++) {\n        days.push({\n          day: i,\n          date: new Date(nextMonthYear, nextMonth, i),\n          otherMonth: true,\n          id: `next-${i}`\n        });\n      }\n      return days;\n    },\n    isSelectedStartDate(date) {\n      if (!this.nuevoDescuento.startDate) return false;\n      return date.getDate() === this.nuevoDescuento.startDate.getDate() && date.getMonth() === this.nuevoDescuento.startDate.getMonth() && date.getFullYear() === this.nuevoDescuento.startDate.getFullYear();\n    },\n    isSelectedEndDate(date) {\n      if (!this.nuevoDescuento.endDate) return false;\n      return date.getDate() === this.nuevoDescuento.endDate.getDate() && date.getMonth() === this.nuevoDescuento.endDate.getMonth() && date.getFullYear() === this.nuevoDescuento.endDate.getFullYear();\n    },\n    isSelectedCalcFechaDate(date) {\n      if (!this.calcularDatos.fecha) return false;\n      return date.getDate() === this.calcularDatos.fecha.getDate() && date.getMonth() === this.calcularDatos.fecha.getMonth() && date.getFullYear() === this.calcularDatos.fecha.getFullYear();\n    },\n    isToday(date) {\n      const today = new Date();\n      return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n    },\n    selectStartDate(date) {\n      this.nuevoDescuento.startDate = new Date(date);\n      this.fechaInicioInput = this.formatDateForInput(date);\n      this.showStartCalendar = false;\n    },\n    selectEndDate(date) {\n      this.nuevoDescuento.endDate = new Date(date);\n      this.fechaFinInput = this.formatDateForInput(date);\n      this.showEndCalendar = false;\n    },\n    selectCalcFechaDate(date) {\n      this.calcularDatos.fecha = new Date(date);\n      this.calcularFechaInput = this.formatDateForInput(date);\n      this.showCalcFechaCalendar = false;\n    },\n    prevMonth(type) {\n      if (type === 'start') {\n        if (this.startCalendarMonth === 0) {\n          this.startCalendarMonth = 11;\n          this.startCalendarYear--;\n        } else {\n          this.startCalendarMonth--;\n        }\n      } else if (type === 'end') {\n        if (this.endCalendarMonth === 0) {\n          this.endCalendarMonth = 11;\n          this.endCalendarYear--;\n        } else {\n          this.endCalendarMonth--;\n        }\n      } else if (type === 'calcFecha') {\n        if (this.calcFechaCalendarMonth === 0) {\n          this.calcFechaCalendarMonth = 11;\n          this.calcFechaCalendarYear--;\n        } else {\n          this.calcFechaCalendarMonth--;\n        }\n      }\n    },\n    nextMonth(type) {\n      if (type === 'start') {\n        if (this.startCalendarMonth === 11) {\n          this.startCalendarMonth = 0;\n          this.startCalendarYear++;\n        } else {\n          this.startCalendarMonth++;\n        }\n      } else if (type === 'end') {\n        if (this.endCalendarMonth === 11) {\n          this.endCalendarMonth = 0;\n          this.endCalendarYear++;\n        } else {\n          this.endCalendarMonth++;\n        }\n      } else if (type === 'calcFecha') {\n        if (this.calcFechaCalendarMonth === 11) {\n          this.calcFechaCalendarMonth = 0;\n          this.calcFechaCalendarYear++;\n        } else {\n          this.calcFechaCalendarMonth++;\n        }\n      }\n    },\n    clearStartDate() {\n      this.nuevoDescuento.startDate = null;\n      this.fechaInicioInput = \"\";\n      this.showStartCalendar = false;\n    },\n    clearEndDate() {\n      this.nuevoDescuento.endDate = null;\n      this.fechaFinInput = \"\";\n      this.showEndCalendar = false;\n    },\n    clearCalcFechaDate() {\n      this.calcularDatos.fecha = null;\n      this.calcularFechaInput = \"\";\n      this.showCalcFechaCalendar = false;\n    },\n    setTodayAsStart() {\n      const today = new Date();\n      this.nuevoDescuento.startDate = today;\n      this.fechaInicioInput = this.formatDateForInput(today);\n      this.startCalendarMonth = today.getMonth();\n      this.startCalendarYear = today.getFullYear();\n      this.showStartCalendar = false;\n    },\n    setTodayAsEnd() {\n      const today = new Date();\n      this.nuevoDescuento.endDate = today;\n      this.fechaFinInput = this.formatDateForInput(today);\n      this.endCalendarMonth = today.getMonth();\n      this.endCalendarYear = today.getFullYear();\n      this.showEndCalendar = false;\n    },\n    setTodayAsCalcFecha() {\n      const today = new Date();\n      this.calcularDatos.fecha = today;\n      this.calcularFechaInput = this.formatDateForInput(today);\n      this.calcFechaCalendarMonth = today.getMonth();\n      this.calcFechaCalendarYear = today.getFullYear();\n      this.showCalcFechaCalendar = false;\n    },\n    formatDateForInput(date) {\n      if (!date) return '';\n      const day = String(date.getDate()).padStart(2, '0');\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const year = date.getFullYear();\n      return `${day}/${month}/${year}`;\n    },\n    formatDateForApi(date) {\n      if (!date) return '';\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    },\n    // Métodos originales del componente\n    formatDate(dateString) {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('es-MX', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    },\n    async cargarDescuentos() {\n      this.cargando.lista = true;\n      try {\n        // Construir los parámetros de consulta basados en los filtros\n        const params = {};\n        if (this.filtros.isActive !== null) {\n          params.isActive = this.filtros.isActive;\n        }\n        if (this.filtros.productId) {\n          params.productId = this.filtros.productId;\n        }\n        if (this.filtros.includeExpired) {\n          params.includeExpired = this.filtros.includeExpired;\n        }\n        if (this.filtros.date) {\n          // Asegurarse de que la fecha esté en formato YYYY-MM-DD\n          params.date = this.formatDateForApi(this.filtros.date);\n        }\n        const response = await apiRequest({\n          method: 'GET',\n          path: 'discounts',\n          params: params\n        });\n        if (response && response.data) {\n          this.descuentos = Array.isArray(response.data) ? response.data : [];\n\n          // Depuración para ver la estructura de los datos\n          console.log('Descuentos cargados:', this.descuentos);\n        } else {\n          this.descuentos = [];\n        }\n      } catch (error) {\n        console.error('Error al cargar descuentos:', error);\n        this.$buefy.toast.open({\n          message: 'Error al cargar la lista de descuentos',\n          type: 'is-danger',\n          duration: 3000\n        });\n        this.descuentos = [];\n      } finally {\n        this.cargando.lista = false;\n      }\n    },\n    async cargarCategorias() {\n      try {\n        const response = await apiRequest({\n          method: 'GET',\n          path: 'categories'\n        });\n        if (response && response.data) {\n          this.categorias = Array.isArray(response.data) ? response.data : [];\n        } else {\n          this.categorias = [];\n        }\n      } catch (error) {\n        console.error('Error al cargar categorías:', error);\n        this.categorias = [];\n      }\n    },\n    validarFormulario() {\n      let esValido = true;\n      this.errores = {\n        name: '',\n        type: '',\n        value: '',\n        minQuantity: '',\n        startDate: '',\n        endDate: '',\n        productId: '',\n        verificarNombre: '',\n        verificar: '',\n        calcularProductId: '',\n        calcularCantidad: '',\n        calcularPrecio: '',\n        calcularFecha: '',\n        calcular: ''\n      };\n      if (!this.nuevoDescuento.name.trim()) {\n        this.errores.name = 'El nombre del descuento es requerido';\n        esValido = false;\n      }\n      if (!this.nuevoDescuento.type) {\n        this.errores.type = 'El tipo de descuento es requerido';\n        esValido = false;\n      }\n      if (this.nuevoDescuento.value === null || this.nuevoDescuento.value === undefined || this.nuevoDescuento.value <= 0) {\n        this.errores.value = 'El valor del descuento debe ser mayor a 0';\n        esValido = false;\n      } else if (this.nuevoDescuento.type === 'PERCENTAGE' && this.nuevoDescuento.value > 100) {\n        this.errores.value = 'El porcentaje no puede ser mayor a 100%';\n        esValido = false;\n      }\n      if (!this.nuevoDescuento.minQuantity || this.nuevoDescuento.minQuantity < 1) {\n        this.errores.minQuantity = 'La cantidad mínima debe ser al menos 1';\n        esValido = false;\n      }\n      if (!this.nuevoDescuento.productId) {\n        this.errores.productId = 'Debe seleccionar un producto válido';\n        esValido = false;\n      }\n      if (!this.nuevoDescuento.startDate) {\n        this.errores.startDate = 'La fecha de inicio es requerida';\n        esValido = false;\n      }\n      if (!this.nuevoDescuento.endDate) {\n        this.errores.endDate = 'La fecha de fin es requerida';\n        esValido = false;\n      } else if (this.nuevoDescuento.startDate && this.nuevoDescuento.endDate && new Date(this.nuevoDescuento.endDate) <= new Date(this.nuevoDescuento.startDate)) {\n        this.errores.endDate = 'La fecha de fin debe ser posterior a la fecha de inicio';\n        esValido = false;\n      }\n      return esValido;\n    },\n    validarFormularioCalculo() {\n      let esValido = true;\n      this.errores.calcularProductId = '';\n      this.errores.calcularCantidad = '';\n      this.errores.calcularPrecio = '';\n      this.errores.calcularFecha = '';\n      this.errores.calcular = '';\n      if (!this.calcularDatos.productId || this.calcularDatos.productId <= 0) {\n        this.errores.calcularProductId = 'El ID del producto es requerido y debe ser un número positivo';\n        esValido = false;\n      }\n      if (!this.calcularDatos.cantidad || this.calcularDatos.cantidad <= 0) {\n        this.errores.calcularCantidad = 'La cantidad es requerida y debe ser mayor a 0';\n        esValido = false;\n      }\n      if (!this.calcularDatos.precioUnitario || this.calcularDatos.precioUnitario <= 0) {\n        this.errores.calcularPrecio = 'El precio unitario es requerido y debe ser mayor a 0';\n        esValido = false;\n      }\n\n      // La fecha es opcional, pero si se proporciona debe ser válida\n      if (this.calcularDatos.fecha && !(this.calcularDatos.fecha instanceof Date && !isNaN(this.calcularDatos.fecha))) {\n        this.errores.calcularFecha = 'La fecha proporcionada no es válida';\n        esValido = false;\n      }\n      return esValido;\n    },\n    prepararDatosParaEnvio() {\n      // Crear una copia del objeto para no modificar el original\n      const datos = {\n        ...this.nuevoDescuento\n      };\n\n      // Formatear fechas a ISO string\n      if (datos.startDate instanceof Date) {\n        datos.startDate = datos.startDate.toISOString();\n      }\n      if (datos.endDate instanceof Date) {\n        datos.endDate = datos.endDate.toISOString();\n      }\n\n      // Asegurarse de que los valores sean del tipo correcto\n      datos.value = Number(datos.value);\n      datos.minQuantity = Number(datos.minQuantity);\n\n      // Asegurarse de que los IDs sean null cuando corresponda\n      datos.productId = datos.productId || null;\n      datos.categoryId = datos.categoryId || null; // Incluir el categoryId\n\n      // Asegurarse de que isActive sea booleano\n      datos.isActive = Boolean(datos.isActive);\n      console.log('Datos preparados para enviar:', datos);\n      return datos;\n    },\n    async guardarDescuento() {\n      if (!this.validarFormulario()) {\n        return;\n      }\n      this.cargando.guardando = true;\n      try {\n        // Preparar los datos para enviar\n        const datos = this.prepararDatosParaEnvio();\n        console.log('Datos a enviar:', datos); // Para depuración\n\n        let response;\n        if (this.modoEdicion) {\n          response = await apiRequest({\n            method: 'PATCH',\n            path: `discounts/${this.descuentoEditandoId}`,\n            data: datos\n          });\n        } else {\n          response = await apiRequest({\n            method: 'POST',\n            path: 'discounts',\n            data: datos\n          });\n        }\n        if (response) {\n          this.$buefy.toast.open({\n            message: this.modoEdicion ? 'Descuento actualizado exitosamente' : 'Descuento creado exitosamente',\n            type: 'is-success',\n            duration: 3000\n          });\n          this.resetearFormulario();\n          this.cargarDescuentos();\n          this.activeTab = 'lista';\n        }\n      } catch (error) {\n        console.error('Error al guardar descuento:', error);\n        let mensajeError = `Error al ${this.modoEdicion ? 'actualizar' : 'crear'} el descuento`;\n\n        // Verificar si hay errores de validación específicos\n        if (error.response && error.response.data && error.response.data.errors) {\n          const errores = error.response.data.errors;\n\n          // Mapear los errores del backend a los campos del formulario\n          Object.keys(errores).forEach(campo => {\n            if (Object.prototype.hasOwnProperty.call(this.errores, campo)) {\n              this.errores[campo] = Array.isArray(errores[campo]) ? errores[campo][0] : errores[campo];\n            }\n          });\n          mensajeError += ': Por favor, corrija los errores en el formulario';\n        } else if (error.message) {\n          mensajeError += `: ${error.message}`;\n        }\n        this.$buefy.toast.open({\n          message: mensajeError,\n          type: 'is-danger',\n          duration: 5000\n        });\n      } finally {\n        this.cargando.guardando = false;\n      }\n    },\n    editarDescuento(descuento) {\n      this.modoEdicion = true;\n      this.descuentoEditandoId = descuento.id;\n      console.log('Editando descuento:', descuento); // Para depuración\n\n      // Copiar los datos del descuento al formulario\n      this.nuevoDescuento = {\n        name: descuento.name || '',\n        type: descuento.type || 'PERCENTAGE',\n        value: descuento.value !== undefined ? Number(descuento.value) : null,\n        minQuantity: descuento.minQuantity !== undefined ? Number(descuento.minQuantity) : 1,\n        productId: descuento.product ? descuento.product.id : descuento.productId || null,\n        categoryId: descuento.category ? descuento.category.id : descuento.categoryId || null,\n        startDate: descuento.startDate ? new Date(descuento.startDate) : null,\n        endDate: descuento.endDate ? new Date(descuento.endDate) : null,\n        isActive: Boolean(descuento.isActive)\n      };\n\n      // Actualizar los campos de entrada de fecha\n      this.fechaInicioInput = this.formatDateForInput(this.nuevoDescuento.startDate);\n      this.fechaFinInput = this.formatDateForInput(this.nuevoDescuento.endDate);\n\n      // Actualizar el campo de producto seleccionado\n      if (descuento.product) {\n        this.productoSeleccionado = descuento.product.name;\n      }\n      this.activeTab = 'nuevo';\n    },\n    cancelarEdicion() {\n      this.resetearFormulario();\n      this.modoEdicion = false;\n      this.descuentoEditandoId = null;\n    },\n    resetearFormulario() {\n      this.nuevoDescuento = {\n        name: '',\n        type: 'PERCENTAGE',\n        value: null,\n        minQuantity: 1,\n        productId: null,\n        categoryId: null,\n        startDate: null,\n        endDate: null,\n        isActive: true\n      };\n      this.fechaInicioInput = '';\n      this.fechaFinInput = '';\n      this.productoSeleccionado = '';\n      this.errores = {\n        name: '',\n        type: '',\n        value: '',\n        minQuantity: '',\n        startDate: '',\n        endDate: '',\n        productId: '',\n        verificarNombre: '',\n        verificar: '',\n        calcularProductId: '',\n        calcularCantidad: '',\n        calcularPrecio: '',\n        calcularFecha: '',\n        calcular: ''\n      };\n      this.modoEdicion = false;\n      this.descuentoEditandoId = null;\n    },\n    async eliminarDescuento(id) {\n      this.$buefy.dialog.confirm({\n        title: 'Eliminar Descuento',\n        message: '¿Está seguro que desea Desactivar este descuento?   ',\n        confirmText: 'Desactivar',\n        cancelText: 'Cancelar',\n        type: 'is-danger',\n        hasIcon: true,\n        onConfirm: async () => {\n          this.cargando.general = true;\n          try {\n            const response = await apiRequest({\n              method: 'DELETE',\n              path: `discounts/${id}`\n            });\n\n            // Verificar si la respuesta es exitosa (código 200)\n            if (response && response.status === 200) {\n              this.$buefy.toast.open({\n                message: 'Descuento Desactivado exitosamente',\n                type: 'is-success',\n                duration: 3000\n              });\n              this.cargarDescuentos();\n            }\n          } catch (error) {\n            console.error('Error al eliminar descuento:', error);\n\n            // Verificar si el error es porque el descuento no fue encontrado\n            if (error.response && error.response.status === 404) {\n              this.$buefy.toast.open({\n                message: 'El descuento no existe o ya fue Desactivado',\n                type: 'is-warning',\n                duration: 3000\n              });\n              // Recargar la lista para asegurar que esté actualizada\n              this.cargarDescuentos();\n            } else {\n              this.$buefy.toast.open({\n                message: 'Error al eliminar el descuento',\n                type: 'is-danger',\n                duration: 3000\n              });\n            }\n          } finally {\n            this.cargando.general = false;\n          }\n        }\n      });\n    },\n    async toggleEstadoDescuento(descuento) {\n      this.cargando.general = true;\n      try {\n        const nuevoEstado = !descuento.isActive;\n        const response = await apiRequest({\n          method: 'PATCH',\n          path: `discounts/${descuento.id}/toggle-status`,\n          data: {\n            isActive: nuevoEstado\n          }\n        });\n        if (response) {\n          this.$buefy.toast.open({\n            message: `Descuento ${nuevoEstado ? 'activado' : 'desactivado'} exitosamente`,\n            type: 'is-success'\n          });\n          this.cargarDescuentos();\n        }\n      } catch (error) {\n        console.error('Error al cambiar estado del descuento:', error);\n        this.$buefy.toast.open({\n          message: 'Error al cambiar el estado del descuento',\n          type: 'is-danger'\n        });\n      } finally {\n        this.cargando.general = false;\n      }\n    },\n    // Método para aplicar filtros\n    aplicarFiltros() {\n      this.cargarDescuentos();\n    },\n    // Método para resetear filtros\n    resetearFiltros() {\n      this.filtros = {\n        isActive: null,\n        productId: null,\n        includeExpired: false,\n        date: null\n      };\n      this.cargarDescuentos();\n    },\n    opcionSeleccionada(descuento) {\n      if (descuento) {\n        this.verificarDescuentoSeleccionado = descuento;\n        this.verificarDescuentoNombre = descuento.name;\n      }\n    },\n    async verificarValidezDescuentoPorNombre() {\n      // Limpiar errores previos\n      this.errores.verificarNombre = '';\n      this.errores.verificar = '';\n      this.resultadoVerificacion = null;\n\n      // Validar que se haya ingresado un nombre\n      if (!this.verificarDescuentoNombre.trim()) {\n        this.errores.verificarNombre = 'Debe ingresar un nombre de descuento';\n        return;\n      }\n\n      // Si no se seleccionó un descuento del autocompletado, buscar por nombre\n      if (!this.verificarDescuentoSeleccionado) {\n        const descuentoEncontrado = this.descuentos.find(d => d.name.toLowerCase() === this.verificarDescuentoNombre.toLowerCase());\n        if (!descuentoEncontrado) {\n          this.errores.verificar = 'No se encontró ningún descuento con ese nombre exacto';\n          return;\n        }\n        this.verificarDescuentoSeleccionado = descuentoEncontrado;\n      }\n      this.cargando.verificando = true;\n      try {\n        const response = await apiRequest({\n          method: 'GET',\n          path: `discounts/${this.verificarDescuentoSeleccionado.id}/check-validity`\n        });\n        if (response && response.data) {\n          this.resultadoVerificacion = response.data;\n          console.log('Resultado de verificación:', this.resultadoVerificacion);\n        } else {\n          this.errores.verificar = 'No se pudo obtener información sobre la validez del descuento';\n        }\n      } catch (error) {\n        console.error('Error al verificar validez del descuento:', error);\n        if (error.response && error.response.status === 404) {\n          this.errores.verificar = 'El descuento no existe en el sistema';\n        } else if (error.response && error.response.data && error.response.data.message) {\n          this.errores.verificar = error.response.data.message;\n        } else {\n          this.errores.verificar = 'Error al verificar la validez del descuento';\n        }\n      } finally {\n        this.cargando.verificando = false;\n        // Limpiar la selección después de verificar\n        this.verificarDescuentoSeleccionado = null;\n      }\n    },\n    async calcularDescuentosProducto() {\n      // Validar el formulario\n      if (!this.validarFormularioCalculo()) {\n        return;\n      }\n      this.cargando.calculando = true;\n      this.resultadosCalculo = [];\n      this.errores.calcular = '';\n      try {\n        let url = `discounts/product/${this.calcularDatos.productId}/calculate?quantity=${this.calcularDatos.cantidad}&unitPrice=${this.calcularDatos.precioUnitario}`;\n\n        // Añadir fecha si está presente\n        if (this.calcularDatos.fecha) {\n          url += `&date=${this.formatDateForApi(this.calcularDatos.fecha)}`;\n        }\n        console.log('URL completa:', url);\n        const response = await apiRequest({\n          method: 'GET',\n          path: url\n        });\n        console.log('Respuesta completa:', response);\n        if (response && response.data) {\n          let resultados = response.data;\n\n          // Si no es un array, convertirlo en uno\n          if (!Array.isArray(resultados)) {\n            resultados = [resultados];\n          }\n          this.resultadosCalculo = resultados;\n          console.log('Resultados de cálculo:', this.resultadosCalculo);\n          if (this.resultadosCalculo.length === 0) {\n            this.$buefy.toast.open({\n              message: 'No se encontraron descuentos aplicables para este producto',\n              type: 'is-warning',\n              duration: 3000\n            });\n          } else {\n            this.$buefy.toast.open({\n              message: `Se encontraron ${this.resultadosCalculo.length} descuento(s) aplicable(s)`,\n              type: 'is-success',\n              duration: 3000\n            });\n          }\n        } else {\n          this.resultadosCalculo = [];\n          this.errores.calcular = 'No se pudo obtener información sobre los descuentos aplicables';\n        }\n      } catch (error) {\n        console.error('Error al calcular descuentos:', error);\n        if (error.response && error.response.status === 404) {\n          this.errores.calcular = 'El producto especificado no existe';\n        } else if (error.response && error.response.status === 400) {\n          this.errores.calcular = 'Parámetros incorrectos. Verifique los valores ingresados.';\n\n          // Mostrar detalles del error si están disponibles\n          if (error.response.data && error.response.data.message) {\n            this.errores.calcular += ` Detalle: ${error.response.data.message}`;\n          }\n        } else if (error.response && error.response.data && error.response.data.message) {\n          this.errores.calcular = error.response.data.message;\n        } else {\n          this.errores.calcular = 'Error al calcular los descuentos aplicables';\n        }\n      } finally {\n        this.cargando.calculando = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiRequest","MensajeInicial","AyudanteSesion","name","components","data","today","Date","currentYear","getFullYear","currentMonth","getMonth","filtros","isActive","productId","includeExpired","date","activeTab","descuentos","productos","productosCalculo","categorias","nuevoDescuento","type","value","minQuantity","categoryId","startDate","endDate","errores","verificarNombre","verificar","calcularProductId","calcularCantidad","calcularPrecio","calcularFecha","calcular","cargando","general","lista","guardando","verificando","calculando","modoEdicion","descuentoEditandoId","productoSeleccionado","calcularProductoSeleccionado","verificarDescuentoNombre","verificarDescuentoSeleccionado","resultadoVerificacion","calcularDatos","cantidad","precioUnitario","fecha","calcularFechaInput","resultadosCalculo","fechaInicioInput","fechaFinInput","showStartCalendar","showEndCalendar","showCalcFechaCalendar","startCalendarMonth","startCalendarYear","endCalendarMonth","endCalendarYear","calcFechaCalendarMonth","calcFechaCalendarYear","startCalendarStyle","top","left","endCalendarStyle","calcFechaCalendarStyle","meses","diasSemana","computed","descuentosFiltrados","nombreBusqueda","toLowerCase","filter","descuento","includes","esAdmin","datosUsuario","obtenerDatosSesion","rol","nombreMes","nombreMesFin","calcFechaNombreMes","startCalendarDays","getCalendarDays","endCalendarDays","calcFechaCalendarDays","mejorDescuento","length","Math","max","r","valid","map","discountAmount","mejorPrecioFinal","precios","finalPrice","min","mounted","cargarDescuentos","cargarCategorias","verificarPermisos","document","addEventListener","handleClickOutside","window","updateCalendarPositions","beforeDestroy","removeEventListener","watch","methods","formatearNumero","valor","parseFloat","toFixed","replace","getTipoTagType","tipo","getTipoDescuento","formatearValorDescuento","buscarProductos","termino","trim","response","method","path","producto","isDeleted","id","brand","brandName","category","categoryName","code","stock","error","console","buscarProductosCalculo","price","salePrice","productoSeleccionadoHandler","log","calcularProductoSeleccionadoHandler","toggleStartCalendar","$nextTick","positionStartCalendar","toggleEndCalendar","positionEndCalendar","toggleCalcFechaCalendar","positionCalcFechaCalendar","inputEl","$refs","startDateContainer","startCalendarRef","rect","getBoundingClientRect","calendarHeight","offsetHeight","windowHeight","innerHeight","spaceBelow","bottom","showBelow","scrollY","scrollX","zIndex","endDateContainer","endCalendarRef","calcularFechaContainer","calcFechaCalendarRef","event","contains","target","year","month","firstDay","lastDay","daysInMonth","getDate","firstDayOfWeek","getDay","days","prevMonth","prevMonthYear","daysInPrevMonth","i","day","push","otherMonth","nextMonth","nextMonthYear","remainingDays","isSelectedStartDate","isSelectedEndDate","isSelectedCalcFechaDate","isToday","selectStartDate","formatDateForInput","selectEndDate","selectCalcFechaDate","clearStartDate","clearEndDate","clearCalcFechaDate","setTodayAsStart","setTodayAsEnd","setTodayAsCalcFecha","String","padStart","formatDateForApi","formatDate","dateString","toLocaleDateString","params","Array","isArray","$buefy","toast","open","message","duration","validarFormulario","esValido","undefined","validarFormularioCalculo","isNaN","prepararDatosParaEnvio","datos","toISOString","Number","Boolean","guardarDescuento","resetearFormulario","mensajeError","errors","Object","keys","forEach","campo","prototype","hasOwnProperty","call","editarDescuento","product","cancelarEdicion","eliminarDescuento","dialog","confirm","title","confirmText","cancelText","hasIcon","onConfirm","status","toggleEstadoDescuento","nuevoEstado","aplicarFiltros","resetearFiltros","opcionSeleccionada","verificarValidezDescuentoPorNombre","descuentoEncontrado","find","d","calcularDescuentosProducto","url","resultados"],"sources":["src/components/Descuentos/Descuentos.vue"],"sourcesContent":["]<template>\r\n  <section>\r\n    <div class=\"level mb-5\">\r\n      <div class=\"level-left\">\r\n        <div class=\"level-item\">\r\n          <h1 class=\"title is-4\">Gestión de Descuentos</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Tabs de navegación -->\r\n    <div class=\"tabs is-boxed mb-4\">\r\n      <ul>\r\n        <li v-if=\"esAdmin\" :class=\"{ 'is-active': activeTab === 'lista' }\">\r\n          <a @click=\"activeTab = 'lista'\">\r\n            <span class=\"icon is-small\"><i class=\"mdi mdi-tag-multiple\"></i></span>\r\n            <span>Lista de Descuentos</span>\r\n          </a>\r\n        </li>\r\n        <li v-if=\"esAdmin\" :class=\"{ 'is-active': activeTab === 'nuevo' }\">\r\n          <a @click=\"activeTab = 'nuevo'\">\r\n            <span class=\"icon is-small\"><i class=\"mdi mdi-tag-plus\"></i></span>\r\n            <span>Nuevo Descuento</span>\r\n          </a>\r\n        </li>\r\n        <li :class=\"{ 'is-active': activeTab === 'verificar' }\">\r\n          <a @click=\"activeTab = 'verificar'\">\r\n            <span class=\"icon is-small\"><i class=\"mdi mdi-check-circle\"></i></span>\r\n            <span>Verificar Validez</span>\r\n          </a>\r\n        </li>\r\n        <li :class=\"{ 'is-active': activeTab === 'calcular' }\">\r\n          <a @click=\"activeTab = 'calcular'\">\r\n            <span class=\"icon is-small\"><i class=\"mdi mdi-calculator\"></i></span>\r\n            <span>Calcular Descuentos</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Tab: Lista de Descuentos -->\r\n    <div v-if=\"activeTab === 'lista'\" class=\"card\">\r\n      <header class=\"card-header\">\r\n        <p class=\"card-header-title\">\r\n          <span class=\"icon mr-2\"><i class=\"mdi mdi-tag-multiple\"></i></span>\r\n          Lista de Descuentos\r\n        </p>\r\n      </header>\r\n      <div class=\"card-content\">\r\n        <mensaje-inicial v-if=\"!descuentos.length && !cargando.lista\" :titulo=\"'No hay descuentos registrados'\"\r\n          :subtitulo=\"'Crea un nuevo descuento usando la pestaña Nuevo Descuento'\" />\r\n\r\n        <b-table v-else :data=\"descuentos\" :loading=\"cargando.lista\" :striped=\"true\" :hoverable=\"true\" :paginated=\"true\"\r\n          :per-page=\"10\" :pagination-simple=\"false\" :pagination-position=\"'bottom'\" :pagination-rounded=\"true\">\r\n          <b-table-column field=\"name\" label=\"Nombre\" v-slot=\"props\">\r\n            {{ props.row.name }}\r\n          </b-table-column>\r\n\r\n          <b-table-column field=\"type\" label=\"Tipo\" v-slot=\"props\">\r\n            <b-tag\r\n                :type=\"props.row.type === 'PERCENTAGE' ? 'is-info' : props.row.type === 'FIXED_AMOUNT' ? 'is-success' : 'is-warning'\">\r\n                {{ props.row.type === 'PERCENTAGE' ? 'Porcentaje' :\r\n                  props.row.type === 'FIXED_AMOUNT' ? 'Monto Fijo' :\r\n                    props.row.type === 'BUY_X_GET_Y' ? 'Promoción ' :\r\n                      props.row.type === 'BUNDLE' ? 'Paquete' :\r\n                        props.row.type === 'SEASONAL' ? 'Temporal' : 'Otro' }}\r\n              </b-tag>\r\n          </b-table-column>\r\n\r\n          <b-table-column field=\"type\" label=\"Tipo y Valor\" v-slot=\"props\">\r\n            <div>\r\n            \r\n              <span class=\"ml-2\">\r\n                {{ props.row.type === 'PERCENTAGE' ? `${props.row.value}%` :\r\n                  props.row.type === 'FIXED_AMOUNT' ? `$${props.row.value}` :\r\n                    props.row.type === 'BUY_X_GET_Y' ? `${props.row.name} ` :\r\n                      props.row.type === 'BUNDLE' ? `Paquete ${props.row.value}` :\r\n                        props.row.type === 'SEASONAL' ? `Descuento ${props.row.value}` : 'N/A' }}\r\n              </span>\r\n            </div>\r\n          </b-table-column>\r\n\r\n          <b-table-column field=\"minQuantity\" label=\"Cantidad Mínima\" v-slot=\"props\">\r\n            {{ props.row.minQuantity }}\r\n          </b-table-column>\r\n\r\n          <b-table-column field=\"product\" label=\"Producto\" v-slot=\"props\">\r\n            {{ props.row.productId ? props.row.productId: 'Todos' }}\r\n          </b-table-column>\r\n\r\n          <b-table-column field=\"category\" label=\"Categoría\" v-slot=\"props\">\r\n            {{ props.row.categoryId ? props.row.categoryId : 'Todas' }}\r\n          </b-table-column>\r\n\r\n          <b-table-column field=\"startDate\" label=\"Fecha Inicio\" v-slot=\"props\">\r\n            {{ formatDate(props.row.startDate) }}\r\n          </b-table-column>\r\n\r\n          <b-table-column field=\"endDate\" label=\"Fecha Fin\" v-slot=\"props\">\r\n            {{ formatDate(props.row.endDate) }}\r\n          </b-table-column>\r\n\r\n          <b-table-column field=\"isActive\" label=\"Estado\" v-slot=\"props\">\r\n            <b-tag :type=\"props.row.isActive ? 'is-success' : 'is-danger'\">\r\n              {{ props.row.isActive ? 'Activo' : 'Inactivo' }}\r\n            </b-tag>\r\n          </b-table-column>\r\n\r\n          <b-table-column field=\"acciones\" label=\"Acciones\" centered v-slot=\"props\">\r\n            <div class=\"buttons is-centered\">\r\n\r\n              <b-tooltip label=\"Editar\" position=\"is-top\">\r\n                <b-button class=\"is-info\" @click=\"editarDescuento(props.row)\" size=\"is-small\">\r\n                  <b-icon icon=\"pencil\" />\r\n                </b-button>\r\n              </b-tooltip>\r\n              <b-tooltip label=\"Desactivar\" position=\"is-top\">\r\n                <b-button class=\"is-danger\" @click=\"eliminarDescuento(props.row.id)\" size=\"is-small\">\r\n  <b-icon icon=\"power-off\" />\r\n  <span>Desactivar</span>\r\n</b-button>\r\n\r\n              </b-tooltip>\r\n            </div>\r\n          </b-table-column>\r\n        </b-table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Tab: Nuevo Descuento -->\r\n    <div v-if=\"activeTab === 'nuevo'\" class=\"card\">\r\n      <header class=\"card-header\">\r\n        <p class=\"card-header-title\">\r\n          <span class=\"icon mr-2\"><i class=\"mdi mdi-tag-plus\"></i></span>\r\n          {{ modoEdicion ? 'Editar Descuento' : 'Nuevo Descuento' }}\r\n        </p>\r\n      </header>\r\n      <div class=\"card-content\">\r\n        <form @submit.prevent=\"guardarDescuento\">\r\n          <div class=\"columns is-multiline\">\r\n            <!-- Nombre del descuento -->\r\n            <div class=\"column is-6\">\r\n              <b-field label=\"Nombre del descuento\" :type=\"{ 'is-danger': errores.name }\" :message=\"errores.name\">\r\n                <b-input v-model=\"nuevoDescuento.name\" placeholder=\"Ej: Descuento de Verano\" required></b-input>\r\n              </b-field>\r\n            </div>\r\n\r\n            <!-- Tipo de descuento -->\r\n            <div class=\"column is-6\">\r\n              <b-field label=\"Tipo de descuento\" :type=\"{ 'is-danger': errores.type }\" :message=\"errores.type\">\r\n                <b-select v-model=\"nuevoDescuento.type\" placeholder=\"Seleccione tipo\" expanded required>\r\n                  <option value=\"PERCENTAGE\">Descuento porcentual</option>\r\n                  <option value=\"FIXED_AMOUNT\">Descuento por monto fijo</option>\r\n                  <option value=\"BUY_X_GET_Y\">Promoción 2x1, 2x3</option>\r\n                </b-select>\r\n              </b-field>\r\n            </div>\r\n\r\n            <!-- Valor del descuento -->\r\n            <div class=\"column is-6\">\r\n              <b-field :label=\"nuevoDescuento.type === 'PERCENTAGE'\r\n                ? 'Porcentaje de descuento'\r\n                : nuevoDescuento.type === 'FIXED_AMOUNT'\r\n                  ? 'Monto de descuento'\r\n                  : nuevoDescuento.type === 'BUY_X_GET_Y'\r\n                    ? 'Promoción'\r\n                    : 'Otro tipo de descuento'\">\r\n                <b-input v-model.number=\"nuevoDescuento.value\" type=\"number\"\r\n                  :placeholder=\"nuevoDescuento.type === 'PERCENTAGE' ? 'Ej: 15' : 'Ej: 100'\" :min=\"0\"\r\n                  :max=\"nuevoDescuento.type === 'PERCENTAGE' ? 100 : null\" step=\"0.01\" required></b-input>\r\n              </b-field>\r\n            </div>\r\n\r\n            <!-- Cantidad mínima -->\r\n            <div class=\"column is-6\">\r\n              <b-field label=\"Cantidad mínima\" :type=\"{ 'is-danger': errores.minQuantity }\"\r\n                :message=\"errores.minQuantity\">\r\n                <b-input v-model.number=\"nuevoDescuento.minQuantity\" type=\"number\" placeholder=\"Ej: 2\" min=\"1\"\r\n                  required></b-input>\r\n              </b-field>\r\n            </div>\r\n\r\n            <!-- Producto -->\r\n            <div class=\"column is-6\">\r\n              <b-field label=\"Producto\" :type=\"{ 'is-danger': errores.productId }\" :message=\"errores.productId\">\r\n                <b-autocomplete v-model=\"productoSeleccionado\" :data=\"productos\" placeholder=\"Seleccione un producto\"\r\n                  field=\"name\" :loading=\"cargando.productos\" @select=\"productoSeleccionadoHandler\"\r\n                  @input=\"buscarProductos\" :open-on-focus=\"true\" :keep-first=\"true\" icon=\"magnify\" required>\r\n                  <template #empty>No se encontraron productos</template>\r\n                </b-autocomplete>\r\n              </b-field>\r\n            </div>\r\n\r\n            <!-- Fecha de inicio -->\r\n            <div class=\"column is-6\">\r\n              <b-field label=\"Fecha de inicio\" :type=\"{ 'is-danger': errores.startDate }\" :message=\"errores.startDate\">\r\n                <div class=\"date-input-container\" ref=\"startDateContainer\">\r\n                  <input type=\"text\" class=\"input\" placeholder=\"dd/mm/aaaa\" v-model=\"fechaInicioInput\"\r\n                    @click=\"toggleStartCalendar\" readonly>\r\n                  <span class=\"icon is-right\">\r\n                    <i class=\"mdi mdi-calendar\"></i>\r\n                  </span>\r\n                </div>\r\n              </b-field>\r\n            </div>\r\n\r\n            <!-- Fecha de fin -->\r\n            <div class=\"column is-6\">\r\n              <b-field label=\"Fecha de fin\" :type=\"{ 'is-danger': errores.endDate }\" :message=\"errores.endDate\">\r\n                <div class=\"date-input-container\" ref=\"endDateContainer\">\r\n                  <input type=\"text\" class=\"input\" placeholder=\"dd/mm/aaaa\" v-model=\"fechaFinInput\"\r\n                    @click=\"toggleEndCalendar\" readonly>\r\n                  <span class=\"icon is-right\">\r\n                    <i class=\"mdi mdi-calendar\"></i>\r\n                  </span>\r\n                </div>\r\n              </b-field>\r\n            </div>\r\n\r\n            <!-- Estado activo -->\r\n            <div class=\"column is-6\">\r\n              <b-field label=\"Estado del descuento\">\r\n                <b-switch v-model=\"nuevoDescuento.isActive\" type=\"is-info\">\r\n                  {{ nuevoDescuento.isActive ? 'Activo' : 'Inactivo' }}\r\n                </b-switch>\r\n              </b-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"field mt-5\">\r\n            <div class=\"control\">\r\n              <div class=\"buttons\">\r\n                <b-button type=\"is-primary\" native-type=\"submit\" :loading=\"cargando.guardando\" expanded>\r\n                  {{ modoEdicion ? 'Actualizar Descuento' : 'Crear Descuento' }}\r\n                </b-button>\r\n                <b-button v-if=\"modoEdicion\" type=\"is-light\" @click=\"cancelarEdicion\" expanded>\r\n                  Cancelar\r\n                </b-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Tab: Verificar Validez de Descuento -->\r\n    <div v-if=\"activeTab === 'verificar'\" class=\"card\">\r\n      <header class=\"card-header\">\r\n        <p class=\"card-header-title\">\r\n          <span class=\"icon mr-2\"><i class=\"mdi mdi-check-circle\"></i></span>\r\n          Verificar Validez de Descuento\r\n        </p>\r\n      </header>\r\n      <div class=\"card-content\">\r\n        <div class=\"columns\">\r\n          <div class=\"column is-6\">\r\n            <b-field label=\"Nombre del Descuento\" :type=\"{ 'is-danger': errores.verificarNombre }\">\r\n              <b-autocomplete v-model=\"verificarDescuentoNombre\" :data=\"descuentosFiltrados\"\r\n                placeholder=\"Ingrese el nombre del descuento\" field=\"name\" :loading=\"cargando.lista\"\r\n                @select=\"opcionSeleccionada\" :open-on-focus=\"true\" :clear-on-select=\"true\" :keep-first=\"true\"\r\n                icon=\"magnify\" required>\r\n                <template #empty>No se encontraron descuentos con ese nombre</template>\r\n              </b-autocomplete>\r\n            </b-field>\r\n            <div class=\"field mt-4\">\r\n              <div class=\"control\">\r\n                <b-button type=\"is-primary\" @click=\"verificarValidezDescuentoPorNombre\" :loading=\"cargando.verificando\"\r\n                  :disabled=\"!verificarDescuentoNombre\" expanded>\r\n                  Verificar Validez\r\n                </b-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"column is-6\">\r\n            <div v-if=\"resultadoVerificacion\" class=\"box\">\r\n              <div class=\"has-text-centered mb-4\">\r\n                <b-icon :icon=\"resultadoVerificacion.isValid ? 'check-circle' : 'alert-circle'\"\r\n                  :type=\"resultadoVerificacion.isValid ? 'is-success' : 'is-danger'\" size=\"is-large\"></b-icon>\r\n                <p class=\"is-size-5 mt-2\"\r\n                  :class=\"resultadoVerificacion.isValid ? 'has-text-success' : 'has-text-danger'\">\r\n                  {{ resultadoVerificacion.message }}\r\n                </p>\r\n              </div>\r\n\r\n              <div v-if=\"resultadoVerificacion.discount\" class=\"content\">\r\n                <h5 class=\"title is-5 mb-3\">Detalles del Descuento</h5>\r\n                <div class=\"field is-horizontal\">\r\n                  <div class=\"field-label is-normal\">\r\n                    <label class=\"label\">Nombre:</label>\r\n                  </div>\r\n                  <div class=\"field-body\">\r\n                    <div class=\"field\">\r\n                      <p class=\"control\">\r\n                        <span>{{ resultadoVerificacion.discount.name }}</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"field is-horizontal\">\r\n                  <div class=\"field-label is-normal\">\r\n                    <label class=\"label\">Tipo:</label>\r\n                  </div>\r\n                  <div class=\"field-body\">\r\n                    <div class=\"field\">\r\n                      <p class=\"control\">\r\n                        <b-tag :type=\"getTipoTagType(resultadoVerificacion.discount.type)\">\r\n                          {{ getTipoDescuento(resultadoVerificacion.discount.type) }}\r\n                        </b-tag>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"field is-horizontal\">\r\n                  <div class=\"field-label is-normal\">\r\n                    <label class=\"label\">Valor:</label>\r\n                  </div>\r\n                  <div class=\"field-body\">\r\n                    <div class=\"field\">\r\n                      <p class=\"control\">\r\n                        <span>{{ formatearValorDescuento(resultadoVerificacion.discount) }}</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"field is-horizontal\">\r\n                  <div class=\"field-label is-normal\">\r\n                    <label class=\"label\">Cantidad Mínima:</label>\r\n                  </div>\r\n                  <div class=\"field-body\">\r\n                    <div class=\"field\">\r\n                      <p class=\"control\">\r\n                        <span>{{ resultadoVerificacion.discount.minQuantity }}</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"field is-horizontal\">\r\n                  <div class=\"field-label is-normal\">\r\n                    <label class=\"label\">Vigencia:</label>\r\n                  </div>\r\n                  <div class=\"field-body\">\r\n                    <div class=\"field\">\r\n                      <p class=\"control\">\r\n                        <span>{{ formatDate(resultadoVerificacion.discount.startDate) }} - {{\r\n                          formatDate(resultadoVerificacion.discount.endDate) }}</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"field is-horizontal\">\r\n                  <div class=\"field-label is-normal\">\r\n                    <label class=\"label\">Estado:</label>\r\n                  </div>\r\n                  <div class=\"field-body\">\r\n                    <div class=\"field\">\r\n                      <p class=\"control\">\r\n                        <b-tag :type=\"resultadoVerificacion.discount.isActive ? 'is-success' : 'is-danger'\">\r\n                          {{ resultadoVerificacion.discount.isActive ? 'Activo' : 'Inactivo' }}\r\n                        </b-tag>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div v-else-if=\"errores.verificar\" class=\"notification is-danger\">\r\n              {{ errores.verificar }}\r\n            </div>\r\n\r\n            <div v-else-if=\"!cargando.verificando\" class=\"notification is-light\">\r\n              Ingrese el nombre de un descuento y haga clic en \"Verificar Validez\" para comprobar si el descuento está\r\n              vigente.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Tab: Calcular Descuentos para un Producto -->\r\n    <div v-if=\"activeTab === 'calcular'\" class=\"card\">\r\n      <header class=\"card-header\">\r\n        <p class=\"card-header-title\">\r\n          <span class=\"icon mr-2\"><i class=\"mdi mdi-calculator\"></i></span>\r\n          Calcular Descuentos para un Producto\r\n        </p>\r\n      </header>\r\n      <div class=\"card-content\">\r\n        <form @submit.prevent=\"calcularDescuentosProducto\">\r\n          <div class=\"columns is-multiline\">\r\n            <!-- Producto -->\r\n            <div class=\"column is-6\">\r\n              <b-field label=\"Producto\" :type=\"{ 'is-danger': errores.calcularProductId }\"\r\n                :message=\"errores.calcularProductId\">\r\n                <b-autocomplete v-model=\"calcularProductoSeleccionado\" :data=\"productosCalculo\" \r\n                  placeholder=\"Buscar producto\" field=\"name\" :loading=\"cargando.productosCalculo\" \r\n                  @select=\"calcularProductoSeleccionadoHandler\" @input=\"buscarProductosCalculo\" \r\n                  :open-on-focus=\"true\" :keep-first=\"true\" icon=\"magnify\" required>\r\n                  <template #empty>No se encontraron productos</template>\r\n                </b-autocomplete>\r\n              </b-field>\r\n            </div>\r\n\r\n            <!-- Cantidad -->\r\n            <div class=\"column is-6\">\r\n              <b-field label=\"Cantidad\" :type=\"{ 'is-danger': errores.calcularCantidad }\"\r\n                :message=\"errores.calcularCantidad\">\r\n                <b-input v-model.number=\"calcularDatos.cantidad\" type=\"number\" placeholder=\"Ej: 2\" min=\"1\"\r\n                  required></b-input>\r\n              </b-field>\r\n            </div>\r\n\r\n            <!-- Precio Unitario -->\r\n            <div class=\"column is-6\">\r\n              <b-field label=\"Precio Unitario\" :type=\"{ 'is-danger': errores.calcularPrecio }\"\r\n                :message=\"errores.calcularPrecio\">\r\n                <b-input v-model.number=\"calcularDatos.precioUnitario\" type=\"number\" placeholder=\"Ej: 1500\" min=\"0.01\"\r\n                  step=\"0.01\" required></b-input>\r\n              </b-field>\r\n            </div>\r\n\r\n            <!-- Fecha específica  -->\r\n            <div class=\"column is-6\">\r\n              <b-field label=\"Fecha específica\" :type=\"{ 'is-danger': errores.calcularFecha }\"\r\n                :message=\"errores.calcularFecha\">\r\n                <div class=\"date-input-container\" ref=\"calcularFechaContainer\">\r\n                  <input type=\"text\" class=\"input\" placeholder=\"dd/mm/aaaa\" v-model=\"calcularFechaInput\"\r\n                    @click=\"toggleCalcFechaCalendar\" readonly>\r\n                  <span class=\"icon is-right\">\r\n                    <i class=\"mdi mdi-calendar\"></i>\r\n                  </span>\r\n                </div>\r\n              </b-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"field mt-4\">\r\n            <div class=\"control\">\r\n              <b-button type=\"is-primary\" native-type=\"submit\" :loading=\"cargando.calculando\"\r\n                :disabled=\"!calcularDatos.productId || !calcularDatos.cantidad || !calcularDatos.precioUnitario\"\r\n                expanded>\r\n                Calcular Descuentos\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <!-- Resultados del cálculo -->\r\n        <div v-if=\"resultadosCalculo.length > 0\" class=\"mt-5\">\r\n          <h5 class=\"title is-5 mb-3\">Descuentos Aplicables</h5>\r\n\r\n          <div v-if=\"resultadosCalculo.length === 0 && !cargando.calculando\" class=\"notification is-warning\">\r\n            No se encontraron descuentos aplicables para este producto con los parámetros especificados.\r\n          </div>\r\n\r\n          <div v-else class=\"descuentos-aplicables\">\r\n            <div v-for=\"(resultado, index) in resultadosCalculo\" :key=\"index\" class=\"card mb-4\">\r\n              <div class=\"card-content\">\r\n                <div class=\"columns is-multiline\">\r\n                  <div class=\"column is-12\">\r\n                    <div class=\"level\">\r\n                      <div class=\"level-left\">\r\n                        <div class=\"level-item\">\r\n                          <h6 class=\"title is-6\">{{ resultado.discount && resultado.discount.name ?\r\n                            resultado.discount.name\r\n                            : 'Descuento sin nombre' }}</h6>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"level-right\">\r\n                        <div class=\"level-item\">\r\n                          <b-tag :type=\"resultado.valid ? 'is-success' : 'is-danger'\" size=\"is-medium\">\r\n                            {{ resultado.valid ? 'Válido' : 'No Válido' }}\r\n                          </b-tag>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"column is-6\">\r\n                    <div class=\"field\">\r\n                      <label class=\"label\">Tipo de Descuento:</label>\r\n                      <p>\r\n                        <b-tag :type=\"getTipoTagType(resultado.discount?.type)\">\r\n                          {{ getTipoDescuento(resultado.discount?.type) }}\r\n                        </b-tag>\r\n                        <span class=\"ml-2\">{{ formatearValorDescuento(resultado.discount) }}</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"column is-6\">\r\n                    <div class=\"field\">\r\n                      <label class=\"label\">Cantidad Mínima:</label>\r\n                      <p>{{ resultado.discount ? (resultado.discount.minQuantity || 0) : 0 }}</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"column is-6\">\r\n                    <div class=\"field\">\r\n                      <label class=\"label\">Monto del Descuento:</label>\r\n                      <p class=\"has-text-weight-bold has-text-success\">${{ formatearNumero(resultado.discountAmount || 0) }}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"column is-6\">\r\n                    <div class=\"field\">\r\n                      <label class=\"label\">Precio Final:</label>\r\n                      <p class=\"has-text-weight-bold\">${{ formatearNumero(resultado.finalPrice || 0) }}</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"column is-12\">\r\n                    <div class=\"field\">\r\n                      <label class=\"label\">Vigencia:</label>\r\n                      <p>{{ resultado.validFrom || 'N/A' }} - {{ resultado.validTo || 'N/A' }}</p>\r\n                      <p class=\"is-size-7 has-text-grey\">Zona horaria: {{ resultado.timezone || 'UTC' }}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Resumen de precios -->\r\n          <div v-if=\"resultadosCalculo.length > 0\" class=\"card mt-4 has-background-light\">\r\n            <div class=\"card-content\">\r\n              <div class=\"columns\">\r\n                <div class=\"column is-4\">\r\n                  <div class=\"field\">\r\n                    <label class=\"label\">Precio Original:</label>\r\n                    <p class=\"is-size-5\">${{ formatearNumero(calcularDatos.precioUnitario * calcularDatos.cantidad) }}</p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"column is-4\">\r\n                  <div class=\"field\">\r\n                    <label class=\"label\">Mejor Descuento:</label>\r\n                    <p class=\"is-size-5 has-text-success\">${{ formatearNumero(mejorDescuento) }}</p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"column is-4\">\r\n                  <div class=\"field\">\r\n                    <label class=\"label\">Mejor Precio Final:</label>\r\n                    <p class=\"is-size-5 has-text-weight-bold\">${{ formatearNumero(mejorPrecioFinal) }}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else-if=\"errores.calcular\" class=\"notification is-danger mt-4\">\r\n          {{ errores.calcular }}\r\n        </div>\r\n\r\n        <div v-else-if=\"!cargando.calculando && activeTab === 'calcular'\" class=\"notification is-light mt-4\">\r\n          Complete el formulario y haga clic en \"Calcular Descuentos\" para ver los descuentos aplicables al producto.\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Calendarios flotantes -->\r\n    <div v-if=\"showStartCalendar\" class=\"floating-calendar\" :style=\"startCalendarStyle\" ref=\"startCalendarRef\">\r\n      <div class=\"calendar-header\">\r\n        <div class=\"month-year\">\r\n          {{ nombreMes }} de {{ startCalendarYear }}\r\n          <div class=\"nav-buttons\">\r\n            <button @click.stop=\"prevMonth('start')\">\r\n              <span class=\"icon\">←</span>\r\n            </button>\r\n            <button @click.stop=\"nextMonth('start')\">\r\n              <span class=\"icon\">→</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"weekdays\">\r\n        <div v-for=\"day in diasSemana\" :key=\"day\">{{ day }}</div>\r\n      </div>\r\n      <div class=\"days\">\r\n        <div v-for=\"day in startCalendarDays\" :key=\"day.id\" :class=\"[\r\n          'day',\r\n          { 'other-month': day.otherMonth },\r\n          { 'selected': isSelectedStartDate(day.date) },\r\n          { 'today': isToday(day.date) }\r\n        ]\" @click.stop=\"selectStartDate(day.date)\">\r\n          {{ day.day }}\r\n        </div>\r\n      </div>\r\n      <div class=\"calendar-footer\">\r\n        <button class=\"btn-clear\" @click.stop=\"clearStartDate\">Borrar</button>\r\n        <button class=\"btn-today\" @click.stop=\"setTodayAsStart\">Hoy</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"showEndCalendar\" class=\"floating-calendar\" :style=\"endCalendarStyle\" ref=\"endCalendarRef\">\r\n      <div class=\"calendar-header\">\r\n        <div class=\"month-year\">\r\n          {{ nombreMesFin }} de {{ endCalendarYear }}\r\n          <div class=\"nav-buttons\">\r\n            <button @click.stop=\"prevMonth('end')\">\r\n              <span class=\"icon\">←</span>\r\n            </button>\r\n            <button @click.stop=\"nextMonth('end')\">\r\n              <span class=\"icon\">→</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"weekdays\">\r\n        <div v-for=\"day in diasSemana\" :key=\"day\">{{ day }}</div>\r\n      </div>\r\n      <div class=\"days\">\r\n        <div v-for=\"day in endCalendarDays\" :key=\"day.id\" :class=\"[\r\n          'day',\r\n          { 'other-month': day.otherMonth },\r\n          { 'selected': isSelectedEndDate(day.date) },\r\n          { 'today': isToday(day.date) }\r\n        ]\" @click.stop=\"selectEndDate(day.date)\">\r\n          {{ day.day }}\r\n        </div>\r\n      </div>\r\n      <div class=\"calendar-footer\">\r\n        <button class=\"btn-clear\" @click.stop=\"clearEndDate\">Borrar</button>\r\n        <button class=\"btn-today\" @click.stop=\"setTodayAsEnd\">Hoy</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Calendario para fecha de cálculo -->\r\n    <div v-if=\"showCalcFechaCalendar\" class=\"floating-calendar\" :style=\"calcFechaCalendarStyle\"\r\n      ref=\"calcFechaCalendarRef\">\r\n      <div class=\"calendar-header\">\r\n        <div class=\"month-year\">\r\n          {{ calcFechaNombreMes }} de {{ calcFechaCalendarYear }}\r\n          <div class=\"nav-buttons\">\r\n            <button @click.stop=\"prevMonth('calcFecha')\">\r\n              <span class=\"icon\">←</span>\r\n            </button>\r\n            <button @click.stop=\"nextMonth('calcFecha')\">\r\n              <span class=\"icon\">→</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"weekdays\">\r\n        <div v-for=\"day in diasSemana\" :key=\"day\">{{ day }}</div>\r\n      </div>\r\n      <div class=\"days\">\r\n        <div v-for=\"day in calcFechaCalendarDays\" :key=\"day.id\" :class=\"[\r\n          'day',\r\n          { 'other-month': day.otherMonth },\r\n          { 'selected': isSelectedCalcFechaDate(day.date) },\r\n          { 'today': isToday(day.date) }\r\n        ]\" @click.stop=\"selectCalcFechaDate(day.date)\">\r\n          {{ day.day }}\r\n        </div>\r\n      </div>\r\n      <div class=\"calendar-footer\">\r\n        <button class=\"btn-clear\" @click.stop=\"clearCalcFechaDate\">Borrar</button>\r\n        <button class=\"btn-today\" @click.stop=\"setTodayAsCalcFecha\">Hoy</button>\r\n      </div>\r\n    </div>\r\n\r\n    <b-loading :is-full-page=\"false\" v-model=\"cargando.general\" :can-cancel=\"false\"></b-loading>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport apiRequest from '../../Servicios/HttpService';\r\nimport MensajeInicial from '../Extras/MensajeInicial';\r\nimport AyudanteSesion from '../../Servicios/AyudanteSesion';\r\n\r\nexport default {\r\n  name: 'GestionDescuentos', // Nombre multi-palabra para evitar errores\r\n  components: { MensajeInicial },\r\n\r\n  data() {\r\n    const today = new Date();\r\n    const currentYear = today.getFullYear();\r\n    const currentMonth = today.getMonth();\r\n\r\n    return {\r\n      // Añadir filtros para los descuentos\r\n      filtros: {\r\n        isActive: null,\r\n        productId: null,\r\n        includeExpired: false,\r\n        date: null\r\n      },\r\n      activeTab: 'lista',\r\n      descuentos: [],\r\n      productos: [],\r\n      productosCalculo: [], // Separar los productos para el cálculo\r\n      categorias: [],\r\n      nuevoDescuento: {\r\n        name: '',\r\n        type: 'PERCENTAGE',\r\n        value: null,\r\n        minQuantity: 1,\r\n        productId: null,\r\n        categoryId: null,\r\n        startDate: null,\r\n        endDate: null,\r\n        isActive: true\r\n      },\r\n      errores: {\r\n        name: '',\r\n        type: '',\r\n        value: '',\r\n        minQuantity: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        productId: '',\r\n        verificarNombre: '',\r\n        verificar: '',\r\n        calcularProductId: '',\r\n        calcularCantidad: '',\r\n        calcularPrecio: '',\r\n        calcularFecha: '',\r\n        calcular: ''\r\n      },\r\n      cargando: {\r\n        general: false,\r\n        lista: false,\r\n        guardando: false,\r\n        verificando: false,\r\n        calculando: false,\r\n        productos: false,\r\n        productosCalculo: false\r\n      },\r\n      modoEdicion: false,\r\n      descuentoEditandoId: null,\r\n      productoSeleccionado: '',\r\n      calcularProductoSeleccionado: '',\r\n\r\n      // Propiedades para la verificación de validez\r\n      verificarDescuentoNombre: '',\r\n      verificarDescuentoSeleccionado: null,\r\n      resultadoVerificacion: null,\r\n\r\n      // Propiedades para calcular descuentos\r\n      calcularDatos: {\r\n        productId: null,\r\n        cantidad: 1,\r\n        precioUnitario: null,\r\n        fecha: null\r\n      },\r\n      calcularFechaInput: '',\r\n      resultadosCalculo: [],\r\n\r\n      // Calendario personalizado\r\n      fechaInicioInput: '',\r\n      fechaFinInput: '',\r\n      showStartCalendar: false,\r\n      showEndCalendar: false,\r\n      showCalcFechaCalendar: false,\r\n      startCalendarMonth: currentMonth,\r\n      startCalendarYear: currentYear,\r\n      endCalendarMonth: currentMonth,\r\n      endCalendarYear: currentYear,\r\n      calcFechaCalendarMonth: currentMonth,\r\n      calcFechaCalendarYear: currentYear,\r\n      startCalendarStyle: {\r\n        top: '0px',\r\n        left: '0px'\r\n      },\r\n      endCalendarStyle: {\r\n        top: '0px',\r\n        left: '0px'\r\n      },\r\n      calcFechaCalendarStyle: {\r\n        top: '0px',\r\n        left: '0px'\r\n      },\r\n      meses: [\r\n        \"enero\",\r\n        \"febrero\",\r\n        \"marzo\",\r\n        \"abril\",\r\n        \"mayo\",\r\n        \"junio\",\r\n        \"julio\",\r\n        \"agosto\",\r\n        \"septiembre\",\r\n        \"octubre\",\r\n        \"noviembre\",\r\n        \"diciembre\",\r\n      ],\r\n      diasSemana: [\"L\", \"M\", \"X\", \"J\", \"V\", \"S\", \"D\"],\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    descuentosFiltrados() {\r\n      if (!this.verificarDescuentoNombre) {\r\n        return this.descuentos;\r\n      }\r\n\r\n      const nombreBusqueda = this.verificarDescuentoNombre.toLowerCase();\r\n      return this.descuentos.filter(descuento =>\r\n        descuento.name.toLowerCase().includes(nombreBusqueda)\r\n      );\r\n    },\r\n\r\n    esAdmin() {\r\n      const datosUsuario = AyudanteSesion.obtenerDatosSesion();\r\n      return datosUsuario.rol === 'Admin';\r\n    },\r\n    nombreMes() {\r\n      return this.meses[this.startCalendarMonth];\r\n    },\r\n    nombreMesFin() {\r\n      return this.meses[this.endCalendarMonth];\r\n    },\r\n    calcFechaNombreMes() {\r\n      return this.meses[this.calcFechaCalendarMonth];\r\n    },\r\n    startCalendarDays() {\r\n      return this.getCalendarDays(this.startCalendarYear, this.startCalendarMonth);\r\n    },\r\n    endCalendarDays() {\r\n      return this.getCalendarDays(this.endCalendarYear, this.endCalendarMonth);\r\n    },\r\n    calcFechaCalendarDays() {\r\n      return this.getCalendarDays(this.calcFechaCalendarYear, this.calcFechaCalendarMonth);\r\n    },\r\n    mejorDescuento() {\r\n      if (!this.resultadosCalculo.length) return 0;\r\n\r\n      // Encontrar el descuento con el monto más alto\r\n      return Math.max(...this.resultadosCalculo\r\n        .filter(r => r.valid)\r\n        .map(r => r.discountAmount || 0));\r\n    },\r\n    mejorPrecioFinal() {\r\n      if (!this.resultadosCalculo.length) return 0;\r\n\r\n      // Encontrar el precio final más bajo\r\n      const precios = this.resultadosCalculo\r\n        .filter(r => r.valid)\r\n        .map(r => r.finalPrice || 0);\r\n\r\n      return precios.length ? Math.min(...precios) : (this.calcularDatos.precioUnitario * this.calcularDatos.cantidad);\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.cargarDescuentos();\r\n    this.cargarCategorias();\r\n    this.verificarPermisos();\r\n\r\n    // Eventos para el calendario\r\n    document.addEventListener('click', this.handleClickOutside);\r\n    window.addEventListener('resize', this.updateCalendarPositions);\r\n    window.addEventListener('scroll', this.updateCalendarPositions);\r\n  },\r\n\r\n  beforeDestroy() {\r\n    // Limpiar eventos\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n    window.removeEventListener('resize', this.updateCalendarPositions);\r\n    window.removeEventListener('scroll', this.updateCalendarPositions);\r\n  },\r\n\r\n  watch: {\r\n    activeTab() {\r\n      this.verificarPermisos();\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // Método para formatear números con 2 decimales y separador de miles\r\n    formatearNumero(valor) {\r\n      return parseFloat(valor).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    },\r\n\r\n    // Método para obtener el tipo de tag según el tipo de descuento\r\n    getTipoTagType(tipo) {\r\n      switch (tipo) {\r\n        case 'PERCENTAGE':\r\n          return 'is-info';\r\n        case 'FIXED_AMOUNT':\r\n          return 'is-success';\r\n        case 'BUY_X_GET_Y':\r\n          return 'is-warning';\r\n        case 'BUNDLE':\r\n          return 'is-primary';\r\n        case 'SEASONAL':\r\n          return 'is-link';\r\n        default:\r\n          return 'is-dark';\r\n      }\r\n    },\r\n\r\n    // Método para obtener el nombre del tipo de descuento\r\n    getTipoDescuento(tipo) {\r\n      switch (tipo) {\r\n        case 'PERCENTAGE':\r\n          return 'Porcentaje';\r\n        case 'FIXED_AMOUNT':\r\n          return 'Monto Fijo';\r\n        case 'BUY_X_GET_Y':\r\n          return 'Promoción';\r\n        case 'BUNDLE':\r\n          return 'Paquete';\r\n        case 'SEASONAL':\r\n          return 'Temporal';\r\n        default:\r\n          return 'Otro';\r\n      }\r\n    },\r\n\r\n    // Método para formatear el valor del descuento según su tipo\r\n    formatearValorDescuento(descuento) {\r\n      if (!descuento) return 'N/A';\r\n      \r\n      switch (descuento.type) {\r\n        case 'PERCENTAGE':\r\n          return `${descuento.value}%`;\r\n        case 'FIXED_AMOUNT':\r\n          return `$${descuento.value}`;\r\n        case 'BUY_X_GET_Y':\r\n          return `${descuento.name}`;\r\n        case 'BUNDLE':\r\n          return `Paquete ${descuento.value}`;\r\n        case 'SEASONAL':\r\n          return `Descuento ${descuento.value}`;\r\n        default:\r\n          return 'N/A';\r\n      }\r\n    },\r\n\r\n    async buscarProductos(termino) {\r\n      if (!termino || termino.trim() === '') {\r\n        this.productos = []; // Limpiar la lista si no hay término\r\n        return;\r\n      }\r\n\r\n      this.cargando.productos = true;\r\n      try {\r\n        const response = await apiRequest({\r\n          method: 'GET',\r\n          path: `products/search/${termino}`, // Ajusta la ruta según sea necesario\r\n        });\r\n\r\n        if (response && response.data) {\r\n          // Filtrar y mapear los productos\r\n          this.productos = response.data.filter(producto => !producto.isDeleted).map(producto => ({\r\n            id: producto.id,\r\n            name: `${producto.name} (${producto.brand?.brandName || 'Sin Marca'}) - ${producto.category?.categoryName || 'Sin Categoría'}`,\r\n            code: producto.code,\r\n            stock: producto.stock,\r\n            category: producto.category?.id\r\n          }));\r\n        } else {\r\n          this.productos = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al buscar productos:', error);\r\n      } finally {\r\n        this.cargando.productos = false;\r\n      }\r\n    },\r\n\r\n    async buscarProductosCalculo(termino) {\r\n      if (!termino || termino.trim() === '') {\r\n        this.productosCalculo = []; // Limpiar la lista si no hay término\r\n        return;\r\n      }\r\n\r\n      this.cargando.productosCalculo = true;\r\n      try {\r\n        const response = await apiRequest({\r\n          method: 'GET',\r\n          path: `products/search/${termino}`, // Ajusta la ruta según sea necesario\r\n        });\r\n\r\n        if (response && response.data) {\r\n          // Filtrar y mapear los productos\r\n          this.productosCalculo = response.data.filter(producto => !producto.isDeleted).map(producto => ({\r\n            id: producto.id,\r\n            name: `${producto.name} (${producto.brand?.brandName || 'Sin Marca'}) - ${producto.category?.categoryName || 'Sin Categoría'}`,\r\n            code: producto.code,\r\n            stock: producto.stock,\r\n            price: producto.salePrice\r\n          }));\r\n        } else {\r\n          this.productosCalculo = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al buscar productos para cálculo:', error);\r\n      } finally {\r\n        this.cargando.productosCalculo = false;\r\n      }\r\n    },\r\n\r\n    productoSeleccionadoHandler(producto) {\r\n      if (producto) {\r\n        console.log('Producto seleccionado:', producto);\r\n        this.nuevoDescuento.productId = producto.id; // Asignar el ID del producto seleccionado\r\n        this.nuevoDescuento.categoryId = producto.category || null; // Asignar el ID de la categoría del producto\r\n        this.productoSeleccionado = producto.name; // Guardar el nombre del producto seleccionado\r\n      } else {\r\n        this.nuevoDescuento.productId = null; // Limpiar el ID del producto si no hay selección\r\n        this.nuevoDescuento.categoryId = null; // Limpiar el ID de la categoría si no hay selección\r\n      }\r\n    },\r\n\r\n    calcularProductoSeleccionadoHandler(producto) {\r\n      if (producto) {\r\n        console.log('Producto seleccionado para cálculo:', producto);\r\n        this.calcularDatos.productId = producto.id; // Asignar el ID del producto seleccionado\r\n        this.calcularProductoSeleccionado = producto.name; // Guardar el nombre del producto seleccionado\r\n        \r\n        // Si el producto tiene precio, asignarlo automáticamente\r\n        if (producto.price) {\r\n          this.calcularDatos.precioUnitario = producto.price;\r\n        }\r\n      } else {\r\n        this.calcularDatos.productId = null; // Limpiar el ID del producto si no hay selección\r\n      }\r\n    },\r\n\r\n    verificarPermisos() {\r\n      // Si no es admin y está en una pestaña restringida, redirigir a una pestaña permitida\r\n      if (!this.esAdmin && (this.activeTab === 'lista' || this.activeTab === 'nuevo')) {\r\n        this.activeTab = 'verificar';\r\n      }\r\n    },\r\n\r\n    // Métodos para el calendario personalizado\r\n    toggleStartCalendar() {\r\n      if (this.showEndCalendar) {\r\n        this.showEndCalendar = false;\r\n      }\r\n      if (this.showCalcFechaCalendar) {\r\n        this.showCalcFechaCalendar = false;\r\n      }\r\n      this.showStartCalendar = !this.showStartCalendar;\r\n      if (this.showStartCalendar) {\r\n        this.$nextTick(() => {\r\n          this.positionStartCalendar();\r\n        });\r\n      }\r\n    },\r\n\r\n    toggleEndCalendar() {\r\n      if (this.showStartCalendar) {\r\n        this.showStartCalendar = false;\r\n      }\r\n      if (this.showCalcFechaCalendar) {\r\n        this.showCalcFechaCalendar = false;\r\n      }\r\n      this.showEndCalendar = !this.showEndCalendar;\r\n      if (this.showEndCalendar) {\r\n        this.$nextTick(() => {\r\n          this.positionEndCalendar();\r\n        });\r\n      }\r\n    },\r\n\r\n    toggleCalcFechaCalendar() {\r\n      if (this.showStartCalendar) {\r\n        this.showStartCalendar = false;\r\n      }\r\n      if (this.showEndCalendar) {\r\n        this.showEndCalendar = false;\r\n      }\r\n      this.showCalcFechaCalendar = !this.showCalcFechaCalendar;\r\n      if (this.showCalcFechaCalendar) {\r\n        this.$nextTick(() => {\r\n          this.positionCalcFechaCalendar();\r\n        });\r\n      }\r\n    },\r\n\r\n    positionStartCalendar() {\r\n      const inputEl = this.$refs.startDateContainer;\r\n      if (inputEl && this.$refs.startCalendarRef) {\r\n        const rect = inputEl.getBoundingClientRect();\r\n        const calendarHeight = this.$refs.startCalendarRef.offsetHeight;\r\n        const windowHeight = window.innerHeight;\r\n\r\n        // Verificar si hay suficiente espacio debajo\r\n        const spaceBelow = windowHeight - rect.bottom;\r\n        const showBelow = spaceBelow >= calendarHeight;\r\n\r\n        this.startCalendarStyle = {\r\n          top: showBelow ? `${rect.bottom + window.scrollY}px` : `${rect.top + window.scrollY - calendarHeight}px`,\r\n          left: `${rect.left + window.scrollX}px`,\r\n          zIndex: '1000'\r\n        };\r\n      }\r\n    },\r\n\r\n    positionEndCalendar() {\r\n      const inputEl = this.$refs.endDateContainer;\r\n      if (inputEl && this.$refs.endCalendarRef) {\r\n        const rect = inputEl.getBoundingClientRect();\r\n        const calendarHeight = this.$refs.endCalendarRef.offsetHeight;\r\n        const windowHeight = window.innerHeight;\r\n\r\n        // Verificar si hay suficiente espacio debajo\r\n        const spaceBelow = windowHeight - rect.bottom;\r\n        const showBelow = spaceBelow >= calendarHeight;\r\n\r\n        this.endCalendarStyle = {\r\n          top: showBelow ? `${rect.bottom + window.scrollY}px` : `${rect.top + window.scrollY - calendarHeight}px`,\r\n          left: `${rect.left + window.scrollX}px`,\r\n          zIndex: '1000'\r\n        };\r\n      }\r\n    },\r\n\r\n    positionCalcFechaCalendar() {\r\n      const inputEl = this.$refs.calcularFechaContainer;\r\n      if (inputEl && this.$refs.calcFechaCalendarRef) {\r\n        const rect = inputEl.getBoundingClientRect();\r\n        const calendarHeight = this.$refs.calcFechaCalendarRef.offsetHeight;\r\n        const windowHeight = window.innerHeight;\r\n\r\n        // Verificar si hay suficiente espacio debajo\r\n        const spaceBelow = windowHeight - rect.bottom;\r\n        const showBelow = spaceBelow >= calendarHeight;\r\n\r\n        this.calcFechaCalendarStyle = {\r\n          top: showBelow ? `${rect.bottom + window.scrollY}px` : `${rect.top + window.scrollY - calendarHeight}px`,\r\n          left: `${rect.left + window.scrollX}px`,\r\n          zIndex: '1000'\r\n        };\r\n      }\r\n    },\r\n\r\n    updateCalendarPositions() {\r\n      if (this.showStartCalendar) {\r\n        this.positionStartCalendar();\r\n      }\r\n      if (this.showEndCalendar) {\r\n        this.positionEndCalendar();\r\n      }\r\n      if (this.showCalcFechaCalendar) {\r\n        this.positionCalcFechaCalendar();\r\n      }\r\n    },\r\n\r\n    handleClickOutside(event) {\r\n      // Cerrar calendario inicial si se hace clic fuera\r\n      if (this.showStartCalendar &&\r\n        this.$refs.startCalendarRef &&\r\n        !this.$refs.startCalendarRef.contains(event.target) &&\r\n        this.$refs.startDateContainer &&\r\n        !this.$refs.startDateContainer.contains(event.target)) {\r\n        this.showStartCalendar = false;\r\n      }\r\n\r\n      // Cerrar calendario final si se hace clic fuera\r\n      if (this.showEndCalendar &&\r\n        this.$refs.endCalendarRef &&\r\n        !this.$refs.endCalendarRef.contains(event.target) &&\r\n        this.$refs.endDateContainer &&\r\n        !this.$refs.endDateContainer.contains(event.target)) {\r\n        this.showEndCalendar = false;\r\n      }\r\n\r\n      // Cerrar calendario de fecha de cálculo si se hace clic fuera\r\n      if (this.showCalcFechaCalendar &&\r\n        this.$refs.calcFechaCalendarRef &&\r\n        !this.$refs.calcFechaCalendarRef.contains(event.target) &&\r\n        this.$refs.calcularFechaContainer &&\r\n        !this.$refs.calcularFechaContainer.contains(event.target)) {\r\n        this.showCalcFechaCalendar = false;\r\n      }\r\n    },\r\n\r\n    getCalendarDays(year, month) {\r\n      const firstDay = new Date(year, month, 1);\r\n      const lastDay = new Date(year, month + 1, 0);\r\n      const daysInMonth = lastDay.getDate();\r\n\r\n      // Obtener el día de la semana del primer día (0 = domingo, 1 = lunes, ..., 6 = sábado)\r\n      let firstDayOfWeek = firstDay.getDay();\r\n      // Ajustar para que lunes sea 0\r\n      firstDayOfWeek = firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1;\r\n\r\n      const days = [];\r\n\r\n      // Días del mes anterior\r\n      const prevMonth = month === 0 ? 11 : month - 1;\r\n      const prevMonthYear = month === 0 ? year - 1 : year;\r\n      const daysInPrevMonth = new Date(prevMonthYear, prevMonth + 1, 0).getDate();\r\n\r\n      for (let i = 0; i < firstDayOfWeek; i++) {\r\n        const day = daysInPrevMonth - firstDayOfWeek + i + 1;\r\n        days.push({\r\n          day,\r\n          date: new Date(prevMonthYear, prevMonth, day),\r\n          otherMonth: true,\r\n          id: `prev-${day}`\r\n        });\r\n      }\r\n\r\n      // Días del mes actual\r\n      for (let i = 1; i <= daysInMonth; i++) {\r\n        days.push({\r\n          day: i,\r\n          date: new Date(year, month, i),\r\n          otherMonth: false,\r\n          id: `current-${i}`\r\n        });\r\n      }\r\n\r\n      // Días del mes siguiente\r\n      const nextMonth = month === 11 ? 0 : month + 1;\r\n      const nextMonthYear = month === 11 ? year + 1 : year;\r\n      const remainingDays = 42 - days.length; // 6 filas x 7 días\r\n\r\n      for (let i = 1; i <= remainingDays; i++) {\r\n        days.push({\r\n          day: i,\r\n          date: new Date(nextMonthYear, nextMonth, i),\r\n          otherMonth: true,\r\n          id: `next-${i}`\r\n        });\r\n      }\r\n\r\n      return days;\r\n    },\r\n\r\n    isSelectedStartDate(date) {\r\n      if (!this.nuevoDescuento.startDate) return false;\r\n\r\n      return date.getDate() === this.nuevoDescuento.startDate.getDate() &&\r\n        date.getMonth() === this.nuevoDescuento.startDate.getMonth() &&\r\n        date.getFullYear() === this.nuevoDescuento.startDate.getFullYear();\r\n    },\r\n\r\n    isSelectedEndDate(date) {\r\n      if (!this.nuevoDescuento.endDate) return false;\r\n\r\n      return date.getDate() === this.nuevoDescuento.endDate.getDate() &&\r\n        date.getMonth() === this.nuevoDescuento.endDate.getMonth() &&\r\n        date.getFullYear() === this.nuevoDescuento.endDate.getFullYear();\r\n    },\r\n\r\n    isSelectedCalcFechaDate(date) {\r\n      if (!this.calcularDatos.fecha) return false;\r\n\r\n      return date.getDate() === this.calcularDatos.fecha.getDate() &&\r\n        date.getMonth() === this.calcularDatos.fecha.getMonth() &&\r\n        date.getFullYear() === this.calcularDatos.fecha.getFullYear();\r\n    },\r\n\r\n    isToday(date) {\r\n      const today = new Date();\r\n      return date.getDate() === today.getDate() &&\r\n        date.getMonth() === today.getMonth() &&\r\n        date.getFullYear() === today.getFullYear();\r\n    },\r\n\r\n    selectStartDate(date) {\r\n      this.nuevoDescuento.startDate = new Date(date);\r\n      this.fechaInicioInput = this.formatDateForInput(date);\r\n      this.showStartCalendar = false;\r\n    },\r\n\r\n    selectEndDate(date) {\r\n      this.nuevoDescuento.endDate = new Date(date);\r\n      this.fechaFinInput = this.formatDateForInput(date);\r\n      this.showEndCalendar = false;\r\n    },\r\n\r\n    selectCalcFechaDate(date) {\r\n      this.calcularDatos.fecha = new Date(date);\r\n      this.calcularFechaInput = this.formatDateForInput(date);\r\n      this.showCalcFechaCalendar = false;\r\n    },\r\n\r\n    prevMonth(type) {\r\n      if (type === 'start') {\r\n        if (this.startCalendarMonth === 0) {\r\n          this.startCalendarMonth = 11;\r\n          this.startCalendarYear--;\r\n        } else {\r\n          this.startCalendarMonth--;\r\n        }\r\n      } else if (type === 'end') {\r\n        if (this.endCalendarMonth === 0) {\r\n          this.endCalendarMonth = 11;\r\n          this.endCalendarYear--;\r\n        } else {\r\n          this.endCalendarMonth--;\r\n        }\r\n      } else if (type === 'calcFecha') {\r\n        if (this.calcFechaCalendarMonth === 0) {\r\n          this.calcFechaCalendarMonth = 11;\r\n          this.calcFechaCalendarYear--;\r\n        } else {\r\n          this.calcFechaCalendarMonth--;\r\n        }\r\n      }\r\n    },\r\n\r\n    nextMonth(type) {\r\n      if (type === 'start') {\r\n        if (this.startCalendarMonth === 11) {\r\n          this.startCalendarMonth = 0;\r\n          this.startCalendarYear++;\r\n        } else {\r\n          this.startCalendarMonth++;\r\n        }\r\n      } else if (type === 'end') {\r\n        if (this.endCalendarMonth === 11) {\r\n          this.endCalendarMonth = 0;\r\n          this.endCalendarYear++;\r\n        } else {\r\n          this.endCalendarMonth++;\r\n        }\r\n      } else if (type === 'calcFecha') {\r\n        if (this.calcFechaCalendarMonth === 11) {\r\n          this.calcFechaCalendarMonth = 0;\r\n          this.calcFechaCalendarYear++;\r\n        } else {\r\n          this.calcFechaCalendarMonth++;\r\n        }\r\n      }\r\n    },\r\n\r\n    clearStartDate() {\r\n      this.nuevoDescuento.startDate = null;\r\n      this.fechaInicioInput = \"\";\r\n      this.showStartCalendar = false;\r\n    },\r\n\r\n    clearEndDate() {\r\n      this.nuevoDescuento.endDate = null;\r\n      this.fechaFinInput = \"\";\r\n      this.showEndCalendar = false;\r\n    },\r\n\r\n    clearCalcFechaDate() {\r\n      this.calcularDatos.fecha = null;\r\n      this.calcularFechaInput = \"\";\r\n      this.showCalcFechaCalendar = false;\r\n    },\r\n\r\n    setTodayAsStart() {\r\n      const today = new Date();\r\n      this.nuevoDescuento.startDate = today;\r\n      this.fechaInicioInput = this.formatDateForInput(today);\r\n      this.startCalendarMonth = today.getMonth();\r\n      this.startCalendarYear = today.getFullYear();\r\n      this.showStartCalendar = false;\r\n    },\r\n\r\n    setTodayAsEnd() {\r\n      const today = new Date();\r\n      this.nuevoDescuento.endDate = today;\r\n      this.fechaFinInput = this.formatDateForInput(today);\r\n      this.endCalendarMonth = today.getMonth();\r\n      this.endCalendarYear = today.getFullYear();\r\n      this.showEndCalendar = false;\r\n    },\r\n\r\n    setTodayAsCalcFecha() {\r\n      const today = new Date();\r\n      this.calcularDatos.fecha = today;\r\n      this.calcularFechaInput = this.formatDateForInput(today);\r\n      this.calcFechaCalendarMonth = today.getMonth();\r\n      this.calcFechaCalendarYear = today.getFullYear();\r\n      this.showCalcFechaCalendar = false;\r\n    },\r\n\r\n    formatDateForInput(date) {\r\n      if (!date) return '';\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const year = date.getFullYear();\r\n      return `${day}/${month}/${year}`;\r\n    },\r\n\r\n    formatDateForApi(date) {\r\n      if (!date) return '';\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    },\r\n\r\n    // Métodos originales del componente\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'N/A';\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('es-MX', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      });\r\n    },\r\n\r\n    async cargarDescuentos() {\r\n      this.cargando.lista = true;\r\n      try {\r\n        // Construir los parámetros de consulta basados en los filtros\r\n        const params = {};\r\n\r\n        if (this.filtros.isActive !== null) {\r\n          params.isActive = this.filtros.isActive;\r\n        }\r\n\r\n        if (this.filtros.productId) {\r\n          params.productId = this.filtros.productId;\r\n        }\r\n\r\n        if (this.filtros.includeExpired) {\r\n          params.includeExpired = this.filtros.includeExpired;\r\n        }\r\n\r\n        if (this.filtros.date) {\r\n          // Asegurarse de que la fecha esté en formato YYYY-MM-DD\r\n          params.date = this.formatDateForApi(this.filtros.date);\r\n        }\r\n\r\n        const response = await apiRequest({\r\n          method: 'GET',\r\n          path: 'discounts',\r\n          params: params\r\n        });\r\n\r\n        if (response && response.data) {\r\n          this.descuentos = Array.isArray(response.data) ? response.data : [];\r\n\r\n          // Depuración para ver la estructura de los datos\r\n          console.log('Descuentos cargados:', this.descuentos);\r\n        } else {\r\n          this.descuentos = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al cargar descuentos:', error);\r\n        this.$buefy.toast.open({\r\n          message: 'Error al cargar la lista de descuentos',\r\n          type: 'is-danger',\r\n          duration: 3000\r\n        });\r\n        this.descuentos = [];\r\n      } finally {\r\n        this.cargando.lista = false;\r\n      }\r\n    },\r\n\r\n    async cargarCategorias() {\r\n      try {\r\n        const response = await apiRequest({\r\n          method: 'GET',\r\n          path: 'categories'\r\n        });\r\n\r\n        if (response && response.data) {\r\n          this.categorias = Array.isArray(response.data) ? response.data : [];\r\n        } else {\r\n          this.categorias = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al cargar categorías:', error);\r\n        this.categorias = [];\r\n      }\r\n    },\r\n\r\n    validarFormulario() {\r\n      let esValido = true;\r\n      this.errores = {\r\n        name: '',\r\n        type: '',\r\n        value: '',\r\n        minQuantity: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        productId: '',\r\n        verificarNombre: '',\r\n        verificar: '',\r\n        calcularProductId: '',\r\n        calcularCantidad: '',\r\n        calcularPrecio: '',\r\n        calcularFecha: '',\r\n        calcular: ''\r\n      };\r\n\r\n      if (!this.nuevoDescuento.name.trim()) {\r\n        this.errores.name = 'El nombre del descuento es requerido';\r\n        esValido = false;\r\n      }\r\n\r\n      if (!this.nuevoDescuento.type) {\r\n        this.errores.type = 'El tipo de descuento es requerido';\r\n        esValido = false;\r\n      }\r\n\r\n      if (this.nuevoDescuento.value === null || this.nuevoDescuento.value === undefined || this.nuevoDescuento.value <= 0) {\r\n        this.errores.value = 'El valor del descuento debe ser mayor a 0';\r\n        esValido = false;\r\n      } else if (this.nuevoDescuento.type === 'PERCENTAGE' && this.nuevoDescuento.value > 100) {\r\n        this.errores.value = 'El porcentaje no puede ser mayor a 100%';\r\n        esValido = false;\r\n      }\r\n\r\n      if (!this.nuevoDescuento.minQuantity || this.nuevoDescuento.minQuantity < 1) {\r\n        this.errores.minQuantity = 'La cantidad mínima debe ser al menos 1';\r\n        esValido = false;\r\n      }\r\n\r\n      if (!this.nuevoDescuento.productId) {\r\n        this.errores.productId = 'Debe seleccionar un producto válido';\r\n        esValido = false;\r\n      }\r\n\r\n      if (!this.nuevoDescuento.startDate) {\r\n        this.errores.startDate = 'La fecha de inicio es requerida';\r\n        esValido = false;\r\n      }\r\n\r\n      if (!this.nuevoDescuento.endDate) {\r\n        this.errores.endDate = 'La fecha de fin es requerida';\r\n        esValido = false;\r\n      } else if (this.nuevoDescuento.startDate && this.nuevoDescuento.endDate &&\r\n        new Date(this.nuevoDescuento.endDate) <= new Date(this.nuevoDescuento.startDate)) {\r\n        this.errores.endDate = 'La fecha de fin debe ser posterior a la fecha de inicio';\r\n        esValido = false;\r\n      }\r\n\r\n      return esValido;\r\n    },\r\n\r\n    validarFormularioCalculo() {\r\n      let esValido = true;\r\n      this.errores.calcularProductId = '';\r\n      this.errores.calcularCantidad = '';\r\n      this.errores.calcularPrecio = '';\r\n      this.errores.calcularFecha = '';\r\n      this.errores.calcular = '';\r\n\r\n      if (!this.calcularDatos.productId || this.calcularDatos.productId <= 0) {\r\n        this.errores.calcularProductId = 'El ID del producto es requerido y debe ser un número positivo';\r\n        esValido = false;\r\n      }\r\n\r\n      if (!this.calcularDatos.cantidad || this.calcularDatos.cantidad <= 0) {\r\n        this.errores.calcularCantidad = 'La cantidad es requerida y debe ser mayor a 0';\r\n        esValido = false;\r\n      }\r\n\r\n      if (!this.calcularDatos.precioUnitario || this.calcularDatos.precioUnitario <= 0) {\r\n        this.errores.calcularPrecio = 'El precio unitario es requerido y debe ser mayor a 0';\r\n        esValido = false;\r\n      }\r\n\r\n      // La fecha es opcional, pero si se proporciona debe ser válida\r\n      if (this.calcularDatos.fecha && !(this.calcularDatos.fecha instanceof Date && !isNaN(this.calcularDatos.fecha))) {\r\n        this.errores.calcularFecha = 'La fecha proporcionada no es válida';\r\n        esValido = false;\r\n      }\r\n\r\n      return esValido;\r\n    },\r\n\r\n    prepararDatosParaEnvio() {\r\n      // Crear una copia del objeto para no modificar el original\r\n      const datos = { ...this.nuevoDescuento };\r\n\r\n      // Formatear fechas a ISO string\r\n      if (datos.startDate instanceof Date) {\r\n        datos.startDate = datos.startDate.toISOString();\r\n      }\r\n\r\n      if (datos.endDate instanceof Date) {\r\n        datos.endDate = datos.endDate.toISOString();\r\n      }\r\n\r\n      // Asegurarse de que los valores sean del tipo correcto\r\n      datos.value = Number(datos.value);\r\n      datos.minQuantity = Number(datos.minQuantity);\r\n\r\n      // Asegurarse de que los IDs sean null cuando corresponda\r\n      datos.productId = datos.productId || null;\r\n      datos.categoryId = datos.categoryId || null; // Incluir el categoryId\r\n\r\n      // Asegurarse de que isActive sea booleano\r\n      datos.isActive = Boolean(datos.isActive);\r\n\r\n      console.log('Datos preparados para enviar:', datos);\r\n      return datos;\r\n    },\r\n    \r\n    async guardarDescuento() {\r\n      if (!this.validarFormulario()) {\r\n        return;\r\n      }\r\n\r\n      this.cargando.guardando = true;\r\n\r\n      try {\r\n        // Preparar los datos para enviar\r\n        const datos = this.prepararDatosParaEnvio();\r\n        console.log('Datos a enviar:', datos); // Para depuración\r\n\r\n        let response;\r\n        if (this.modoEdicion) {\r\n          response = await apiRequest({\r\n            method: 'PATCH',\r\n            path: `discounts/${this.descuentoEditandoId}`,\r\n            data: datos\r\n          });\r\n        } else {\r\n          response = await apiRequest({\r\n            method: 'POST',\r\n            path: 'discounts',\r\n            data: datos\r\n          });\r\n        }\r\n\r\n        if (response) {\r\n          this.$buefy.toast.open({\r\n            message: this.modoEdicion ? 'Descuento actualizado exitosamente' : 'Descuento creado exitosamente',\r\n            type: 'is-success',\r\n            duration: 3000\r\n          });\r\n\r\n          this.resetearFormulario();\r\n          this.cargarDescuentos();\r\n          this.activeTab = 'lista';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al guardar descuento:', error);\r\n\r\n        let mensajeError = `Error al ${this.modoEdicion ? 'actualizar' : 'crear'} el descuento`;\r\n\r\n        // Verificar si hay errores de validación específicos\r\n        if (error.response && error.response.data && error.response.data.errors) {\r\n          const errores = error.response.data.errors;\r\n\r\n          // Mapear los errores del backend a los campos del formulario\r\n          Object.keys(errores).forEach(campo => {\r\n            if (Object.prototype.hasOwnProperty.call(this.errores, campo)) {\r\n              this.errores[campo] = Array.isArray(errores[campo])\r\n                ? errores[campo][0]\r\n                : errores[campo];\r\n            }\r\n          });\r\n\r\n          mensajeError += ': Por favor, corrija los errores en el formulario';\r\n        } else if (error.message) {\r\n          mensajeError += `: ${error.message}`;\r\n        }\r\n\r\n        this.$buefy.toast.open({\r\n          message: mensajeError,\r\n          type: 'is-danger',\r\n          duration: 5000\r\n        });\r\n      } finally {\r\n        this.cargando.guardando = false;\r\n      }\r\n    },\r\n\r\n    editarDescuento(descuento) {\r\n      this.modoEdicion = true;\r\n      this.descuentoEditandoId = descuento.id;\r\n\r\n      console.log('Editando descuento:', descuento); // Para depuración\r\n\r\n      // Copiar los datos del descuento al formulario\r\n      this.nuevoDescuento = {\r\n        name: descuento.name || '',\r\n        type: descuento.type || 'PERCENTAGE',\r\n        value: descuento.value !== undefined ? Number(descuento.value) : null,\r\n        minQuantity: descuento.minQuantity !== undefined ? Number(descuento.minQuantity) : 1,\r\n        productId: descuento.product ? descuento.product.id : (descuento.productId || null),\r\n        categoryId: descuento.category ? descuento.category.id : (descuento.categoryId || null),\r\n        startDate: descuento.startDate ? new Date(descuento.startDate) : null,\r\n        endDate: descuento.endDate ? new Date(descuento.endDate) : null,\r\n        isActive: Boolean(descuento.isActive)\r\n      };\r\n\r\n      // Actualizar los campos de entrada de fecha\r\n      this.fechaInicioInput = this.formatDateForInput(this.nuevoDescuento.startDate);\r\n      this.fechaFinInput = this.formatDateForInput(this.nuevoDescuento.endDate);\r\n\r\n      // Actualizar el campo de producto seleccionado\r\n      if (descuento.product) {\r\n        this.productoSeleccionado = descuento.product.name;\r\n      }\r\n\r\n      this.activeTab = 'nuevo';\r\n    },\r\n    \r\n    cancelarEdicion() {\r\n      this.resetearFormulario();\r\n      this.modoEdicion = false;\r\n      this.descuentoEditandoId = null;\r\n    },\r\n\r\n    resetearFormulario() {\r\n      this.nuevoDescuento = {\r\n        name: '',\r\n        type: 'PERCENTAGE',\r\n        value: null,\r\n        minQuantity: 1,\r\n        productId: null,\r\n        categoryId: null,\r\n        startDate: null,\r\n        endDate: null,\r\n        isActive: true\r\n      };\r\n\r\n      this.fechaInicioInput = '';\r\n      this.fechaFinInput = '';\r\n      this.productoSeleccionado = '';\r\n\r\n      this.errores = {\r\n        name: '',\r\n        type: '',\r\n        value: '',\r\n        minQuantity: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        productId: '',\r\n        verificarNombre: '',\r\n        verificar: '',\r\n        calcularProductId: '',\r\n        calcularCantidad: '',\r\n        calcularPrecio: '',\r\n        calcularFecha: '',\r\n        calcular: ''\r\n      };\r\n\r\n      this.modoEdicion = false;\r\n      this.descuentoEditandoId = null;\r\n    },\r\n\r\n    async eliminarDescuento(id) {\r\n      this.$buefy.dialog.confirm({\r\n        title: 'Eliminar Descuento',\r\n        message: '¿Está seguro que desea Desactivar este descuento?   ',\r\n        confirmText: 'Desactivar',\r\n        cancelText: 'Cancelar',\r\n        type: 'is-danger',\r\n        hasIcon: true,\r\n        onConfirm: async () => {\r\n          this.cargando.general = true;\r\n\r\n          try {\r\n            const response = await apiRequest({\r\n              method: 'DELETE',\r\n              path: `discounts/${id}`\r\n            });\r\n\r\n            // Verificar si la respuesta es exitosa (código 200)\r\n            if (response && response.status === 200) {\r\n              this.$buefy.toast.open({\r\n                message: 'Descuento Desactivado exitosamente',\r\n                type: 'is-success',\r\n                duration: 3000\r\n              });\r\n\r\n              this.cargarDescuentos();\r\n            }\r\n          } catch (error) {\r\n            console.error('Error al eliminar descuento:', error);\r\n\r\n            // Verificar si el error es porque el descuento no fue encontrado\r\n            if (error.response && error.response.status === 404) {\r\n              this.$buefy.toast.open({\r\n                message: 'El descuento no existe o ya fue Desactivado',\r\n                type: 'is-warning',\r\n                duration: 3000\r\n              });\r\n              // Recargar la lista para asegurar que esté actualizada\r\n              this.cargarDescuentos();\r\n            } else {\r\n              this.$buefy.toast.open({\r\n                message: 'Error al eliminar el descuento',\r\n                type: 'is-danger',\r\n                duration: 3000\r\n              });\r\n            }\r\n          } finally {\r\n            this.cargando.general = false;\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    async toggleEstadoDescuento(descuento) {\r\n      this.cargando.general = true;\r\n\r\n      try {\r\n        const nuevoEstado = !descuento.isActive;\r\n        const response = await apiRequest({\r\n          method: 'PATCH',\r\n          path: `discounts/${descuento.id}/toggle-status`,\r\n          data: { isActive: nuevoEstado }\r\n        });\r\n\r\n        if (response) {\r\n          this.$buefy.toast.open({\r\n            message: `Descuento ${nuevoEstado ? 'activado' : 'desactivado'} exitosamente`,\r\n            type: 'is-success'\r\n          });\r\n\r\n          this.cargarDescuentos();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al cambiar estado del descuento:', error);\r\n        this.$buefy.toast.open({\r\n          message: 'Error al cambiar el estado del descuento',\r\n          type: 'is-danger'\r\n        });\r\n      } finally {\r\n        this.cargando.general = false;\r\n      }\r\n    },\r\n\r\n    // Método para aplicar filtros\r\n    aplicarFiltros() {\r\n      this.cargarDescuentos();\r\n    },\r\n\r\n    // Método para resetear filtros\r\n    resetearFiltros() {\r\n      this.filtros = {\r\n        isActive: null,\r\n        productId: null,\r\n        includeExpired: false,\r\n        date: null\r\n      };\r\n      this.cargarDescuentos();\r\n    },\r\n\r\n    opcionSeleccionada(descuento) {\r\n      if (descuento) {\r\n        this.verificarDescuentoSeleccionado = descuento;\r\n        this.verificarDescuentoNombre = descuento.name;\r\n      }\r\n    },\r\n\r\n    async verificarValidezDescuentoPorNombre() {\r\n      // Limpiar errores previos\r\n      this.errores.verificarNombre = '';\r\n      this.errores.verificar = '';\r\n      this.resultadoVerificacion = null;\r\n\r\n      // Validar que se haya ingresado un nombre\r\n      if (!this.verificarDescuentoNombre.trim()) {\r\n        this.errores.verificarNombre = 'Debe ingresar un nombre de descuento';\r\n        return;\r\n      }\r\n\r\n      // Si no se seleccionó un descuento del autocompletado, buscar por nombre\r\n      if (!this.verificarDescuentoSeleccionado) {\r\n        const descuentoEncontrado = this.descuentos.find(\r\n          d => d.name.toLowerCase() === this.verificarDescuentoNombre.toLowerCase()\r\n        );\r\n\r\n        if (!descuentoEncontrado) {\r\n          this.errores.verificar = 'No se encontró ningún descuento con ese nombre exacto';\r\n          return;\r\n        }\r\n\r\n        this.verificarDescuentoSeleccionado = descuentoEncontrado;\r\n      }\r\n\r\n      this.cargando.verificando = true;\r\n\r\n      try {\r\n        const response = await apiRequest({\r\n          method: 'GET',\r\n          path: `discounts/${this.verificarDescuentoSeleccionado.id}/check-validity`\r\n        });\r\n\r\n        if (response && response.data) {\r\n          this.resultadoVerificacion = response.data;\r\n          console.log('Resultado de verificación:', this.resultadoVerificacion);\r\n        } else {\r\n          this.errores.verificar = 'No se pudo obtener información sobre la validez del descuento';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al verificar validez del descuento:', error);\r\n\r\n        if (error.response && error.response.status === 404) {\r\n          this.errores.verificar = 'El descuento no existe en el sistema';\r\n        } else if (error.response && error.response.data && error.response.data.message) {\r\n          this.errores.verificar = error.response.data.message;\r\n        } else {\r\n          this.errores.verificar = 'Error al verificar la validez del descuento';\r\n        }\r\n      } finally {\r\n        this.cargando.verificando = false;\r\n        // Limpiar la selección después de verificar\r\n        this.verificarDescuentoSeleccionado = null;\r\n      }\r\n    },\r\n\r\n    async calcularDescuentosProducto() {\r\n      // Validar el formulario\r\n      if (!this.validarFormularioCalculo()) {\r\n        return;\r\n      }\r\n\r\n      this.cargando.calculando = true;\r\n      this.resultadosCalculo = [];\r\n      this.errores.calcular = '';\r\n\r\n      try {\r\n        let url = `discounts/product/${this.calcularDatos.productId}/calculate?quantity=${this.calcularDatos.cantidad}&unitPrice=${this.calcularDatos.precioUnitario}`;\r\n\r\n        // Añadir fecha si está presente\r\n        if (this.calcularDatos.fecha) {\r\n          url += `&date=${this.formatDateForApi(this.calcularDatos.fecha)}`;\r\n        }\r\n\r\n        console.log('URL completa:', url);\r\n\r\n        const response = await apiRequest({\r\n          method: 'GET',\r\n          path: url\r\n        });\r\n\r\n        console.log('Respuesta completa:', response);\r\n\r\n        if (response && response.data) {\r\n          let resultados = response.data;\r\n\r\n          // Si no es un array, convertirlo en uno\r\n          if (!Array.isArray(resultados)) {\r\n            resultados = [resultados];\r\n          }\r\n\r\n          this.resultadosCalculo = resultados;\r\n          console.log('Resultados de cálculo:', this.resultadosCalculo);\r\n\r\n          if (this.resultadosCalculo.length === 0) {\r\n            this.$buefy.toast.open({\r\n              message: 'No se encontraron descuentos aplicables para este producto',\r\n              type: 'is-warning',\r\n              duration: 3000\r\n            });\r\n          } else {\r\n            this.$buefy.toast.open({\r\n              message: `Se encontraron ${this.resultadosCalculo.length} descuento(s) aplicable(s)`,\r\n              type: 'is-success',\r\n              duration: 3000\r\n            });\r\n          }\r\n        } else {\r\n          this.resultadosCalculo = [];\r\n          this.errores.calcular = 'No se pudo obtener información sobre los descuentos aplicables';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al calcular descuentos:', error);\r\n\r\n        if (error.response && error.response.status === 404) {\r\n          this.errores.calcular = 'El producto especificado no existe';\r\n        } else if (error.response && error.response.status === 400) {\r\n          this.errores.calcular = 'Parámetros incorrectos. Verifique los valores ingresados.';\r\n\r\n          // Mostrar detalles del error si están disponibles\r\n          if (error.response.data && error.response.data.message) {\r\n            this.errores.calcular += ` Detalle: ${error.response.data.message}`;\r\n          }\r\n        } else if (error.response && error.response.data && error.response.data.message) {\r\n          this.errores.calcular = error.response.data.message;\r\n        } else {\r\n          this.errores.calcular = 'Error al calcular los descuentos aplicables';\r\n        }\r\n      } finally {\r\n        this.cargando.calculando = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n/* Estilos para el contenedor de entrada de fecha */\r\n.date-input-container {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.date-input-container .icon {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  pointer-events: none;\r\n}\r\n\r\n/* Estilos para el calendario flotante */\r\n.floating-calendar {\r\n  position: absolute;\r\n  width: 300px;\r\n  background-color: white;\r\n  border: 1px solid #dbdbdb;\r\n  border-radius: 4px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 15px;\r\n  z-index: 1000;\r\n}\r\n\r\n.calendar-header {\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n}\r\n\r\n.month-year {\r\n  font-weight: bold;\r\n  position: relative;\r\n  font-size: 1.1rem;\r\n  text-transform: capitalize;\r\n}\r\n\r\n.nav-buttons {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.nav-buttons button {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0 5px;\r\n  font-size: 1.2rem;\r\n  color: #3273dc;\r\n}\r\n\r\n.weekdays {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  text-align: center;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.days {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 5px;\r\n}\r\n\r\n.day {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 35px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.day:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.day.other-month {\r\n  color: #b5b5b5;\r\n}\r\n\r\n.day.selected {\r\n  background-color: #3273dc;\r\n  color: white;\r\n}\r\n\r\n.day.today {\r\n  border: 1px solid #3273dc;\r\n}\r\n\r\n.calendar-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 15px;\r\n  padding-top: 10px;\r\n  border-top: 1px solid #f0f0f0;\r\n}\r\n\r\n.btn-clear,\r\n.btn-today {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: #3273dc;\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.btn-clear:hover,\r\n.btn-today:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.btn-today {\r\n  font-weight: bold;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .floating-calendar {\r\n    width: 280px;\r\n    left: 50% !important;\r\n    transform: translateX(-50%);\r\n  }\r\n}\r\n</style>"],"mappings":";;;;;;AAiqBA,OAAAA,UAAA;AACA,OAAAC,cAAA;AACA,OAAAC,cAAA;AAEA;EACAC,IAAA;EAAA;EACAC,UAAA;IAAAH;EAAA;EAEAI,KAAA;IACA,MAAAC,KAAA,OAAAC,IAAA;IACA,MAAAC,WAAA,GAAAF,KAAA,CAAAG,WAAA;IACA,MAAAC,YAAA,GAAAJ,KAAA,CAAAK,QAAA;IAEA;MACA;MACAC,OAAA;QACAC,QAAA;QACAC,SAAA;QACAC,cAAA;QACAC,IAAA;MACA;MACAC,SAAA;MACAC,UAAA;MACAC,SAAA;MACAC,gBAAA;MAAA;MACAC,UAAA;MACAC,cAAA;QACAnB,IAAA;QACAoB,IAAA;QACAC,KAAA;QACAC,WAAA;QACAX,SAAA;QACAY,UAAA;QACAC,SAAA;QACAC,OAAA;QACAf,QAAA;MACA;MACAgB,OAAA;QACA1B,IAAA;QACAoB,IAAA;QACAC,KAAA;QACAC,WAAA;QACAE,SAAA;QACAC,OAAA;QACAd,SAAA;QACAgB,eAAA;QACAC,SAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,cAAA;QACAC,aAAA;QACAC,QAAA;MACA;MACAC,QAAA;QACAC,OAAA;QACAC,KAAA;QACAC,SAAA;QACAC,WAAA;QACAC,UAAA;QACAvB,SAAA;QACAC,gBAAA;MACA;MACAuB,WAAA;MACAC,mBAAA;MACAC,oBAAA;MACAC,4BAAA;MAEA;MACAC,wBAAA;MACAC,8BAAA;MACAC,qBAAA;MAEA;MACAC,aAAA;QACApC,SAAA;QACAqC,QAAA;QACAC,cAAA;QACAC,KAAA;MACA;MACAC,kBAAA;MACAC,iBAAA;MAEA;MACAC,gBAAA;MACAC,aAAA;MACAC,iBAAA;MACAC,eAAA;MACAC,qBAAA;MACAC,kBAAA,EAAAnD,YAAA;MACAoD,iBAAA,EAAAtD,WAAA;MACAuD,gBAAA,EAAArD,YAAA;MACAsD,eAAA,EAAAxD,WAAA;MACAyD,sBAAA,EAAAvD,YAAA;MACAwD,qBAAA,EAAA1D,WAAA;MACA2D,kBAAA;QACAC,GAAA;QACAC,IAAA;MACA;MACAC,gBAAA;QACAF,GAAA;QACAC,IAAA;MACA;MACAE,sBAAA;QACAH,GAAA;QACAC,IAAA;MACA;MACAG,KAAA,GACA,SACA,WACA,SACA,SACA,QACA,SACA,SACA,UACA,cACA,WACA,aACA,YACA;MACAC,UAAA;IACA;EACA;EAEAC,QAAA;IACAC,oBAAA;MACA,UAAA5B,wBAAA;QACA,YAAA7B,UAAA;MACA;MAEA,MAAA0D,cAAA,QAAA7B,wBAAA,CAAA8B,WAAA;MACA,YAAA3D,UAAA,CAAA4D,MAAA,CAAAC,SAAA,IACAA,SAAA,CAAA5E,IAAA,CAAA0E,WAAA,GAAAG,QAAA,CAAAJ,cAAA,CACA;IACA;IAEAK,QAAA;MACA,MAAAC,YAAA,GAAAhF,cAAA,CAAAiF,kBAAA;MACA,OAAAD,YAAA,CAAAE,GAAA;IACA;IACAC,UAAA;MACA,YAAAb,KAAA,MAAAX,kBAAA;IACA;IACAyB,aAAA;MACA,YAAAd,KAAA,MAAAT,gBAAA;IACA;IACAwB,mBAAA;MACA,YAAAf,KAAA,MAAAP,sBAAA;IACA;IACAuB,kBAAA;MACA,YAAAC,eAAA,MAAA3B,iBAAA,OAAAD,kBAAA;IACA;IACA6B,gBAAA;MACA,YAAAD,eAAA,MAAAzB,eAAA,OAAAD,gBAAA;IACA;IACA4B,sBAAA;MACA,YAAAF,eAAA,MAAAvB,qBAAA,OAAAD,sBAAA;IACA;IACA2B,eAAA;MACA,UAAArC,iBAAA,CAAAsC,MAAA;;MAEA;MACA,OAAAC,IAAA,CAAAC,GAAA,SAAAxC,iBAAA,CACAuB,MAAA,CAAAkB,CAAA,IAAAA,CAAA,CAAAC,KAAA,EACAC,GAAA,CAAAF,CAAA,IAAAA,CAAA,CAAAG,cAAA;IACA;IACAC,iBAAA;MACA,UAAA7C,iBAAA,CAAAsC,MAAA;;MAEA;MACA,MAAAQ,OAAA,QAAA9C,iBAAA,CACAuB,MAAA,CAAAkB,CAAA,IAAAA,CAAA,CAAAC,KAAA,EACAC,GAAA,CAAAF,CAAA,IAAAA,CAAA,CAAAM,UAAA;MAEA,OAAAD,OAAA,CAAAR,MAAA,GAAAC,IAAA,CAAAS,GAAA,IAAAF,OAAA,SAAAnD,aAAA,CAAAE,cAAA,QAAAF,aAAA,CAAAC,QAAA;IACA;EACA;EAEAqD,QAAA;IACA,KAAAC,gBAAA;IACA,KAAAC,gBAAA;IACA,KAAAC,iBAAA;;IAEA;IACAC,QAAA,CAAAC,gBAAA,eAAAC,kBAAA;IACAC,MAAA,CAAAF,gBAAA,gBAAAG,uBAAA;IACAD,MAAA,CAAAF,gBAAA,gBAAAG,uBAAA;EACA;EAEAC,cAAA;IACA;IACAL,QAAA,CAAAM,mBAAA,eAAAJ,kBAAA;IACAC,MAAA,CAAAG,mBAAA,gBAAAF,uBAAA;IACAD,MAAA,CAAAG,mBAAA,gBAAAF,uBAAA;EACA;EAEAG,KAAA;IACAlG,UAAA;MACA,KAAA0F,iBAAA;IACA;EACA;EAEAS,OAAA;IACA;IACAC,gBAAAC,KAAA;MACA,OAAAC,UAAA,CAAAD,KAAA,EAAAE,OAAA,IAAAC,OAAA;IACA;IAEA;IACAC,eAAAC,IAAA;MACA,QAAAA,IAAA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;MACA;IACA;IAEA;IACAC,iBAAAD,IAAA;MACA,QAAAA,IAAA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;MACA;IACA;IAEA;IACAE,wBAAA9C,SAAA;MACA,KAAAA,SAAA;MAEA,QAAAA,SAAA,CAAAxD,IAAA;QACA;UACA,UAAAwD,SAAA,CAAAvD,KAAA;QACA;UACA,WAAAuD,SAAA,CAAAvD,KAAA;QACA;UACA,UAAAuD,SAAA,CAAA5E,IAAA;QACA;UACA,kBAAA4E,SAAA,CAAAvD,KAAA;QACA;UACA,oBAAAuD,SAAA,CAAAvD,KAAA;QACA;UACA;MACA;IACA;IAEA,MAAAsG,gBAAAC,OAAA;MACA,KAAAA,OAAA,IAAAA,OAAA,CAAAC,IAAA;QACA,KAAA7G,SAAA;QACA;MACA;MAEA,KAAAkB,QAAA,CAAAlB,SAAA;MACA;QACA,MAAA8G,QAAA,SAAAjI,UAAA;UACAkI,MAAA;UACAC,IAAA,qBAAAJ,OAAA;QACA;QAEA,IAAAE,QAAA,IAAAA,QAAA,CAAA5H,IAAA;UACA;UACA,KAAAc,SAAA,GAAA8G,QAAA,CAAA5H,IAAA,CAAAyE,MAAA,CAAAsD,QAAA,KAAAA,QAAA,CAAAC,SAAA,EAAAnC,GAAA,CAAAkC,QAAA;YACAE,EAAA,EAAAF,QAAA,CAAAE,EAAA;YACAnI,IAAA,KAAAiI,QAAA,CAAAjI,IAAA,KAAAiI,QAAA,CAAAG,KAAA,EAAAC,SAAA,sBAAAJ,QAAA,CAAAK,QAAA,EAAAC,YAAA;YACAC,IAAA,EAAAP,QAAA,CAAAO,IAAA;YACAC,KAAA,EAAAR,QAAA,CAAAQ,KAAA;YACAH,QAAA,EAAAL,QAAA,CAAAK,QAAA,EAAAH;UACA;QACA;UACA,KAAAnH,SAAA;QACA;MACA,SAAA0H,KAAA;QACAC,OAAA,CAAAD,KAAA,+BAAAA,KAAA;MACA;QACA,KAAAxG,QAAA,CAAAlB,SAAA;MACA;IACA;IAEA,MAAA4H,uBAAAhB,OAAA;MACA,KAAAA,OAAA,IAAAA,OAAA,CAAAC,IAAA;QACA,KAAA5G,gBAAA;QACA;MACA;MAEA,KAAAiB,QAAA,CAAAjB,gBAAA;MACA;QACA,MAAA6G,QAAA,SAAAjI,UAAA;UACAkI,MAAA;UACAC,IAAA,qBAAAJ,OAAA;QACA;QAEA,IAAAE,QAAA,IAAAA,QAAA,CAAA5H,IAAA;UACA;UACA,KAAAe,gBAAA,GAAA6G,QAAA,CAAA5H,IAAA,CAAAyE,MAAA,CAAAsD,QAAA,KAAAA,QAAA,CAAAC,SAAA,EAAAnC,GAAA,CAAAkC,QAAA;YACAE,EAAA,EAAAF,QAAA,CAAAE,EAAA;YACAnI,IAAA,KAAAiI,QAAA,CAAAjI,IAAA,KAAAiI,QAAA,CAAAG,KAAA,EAAAC,SAAA,sBAAAJ,QAAA,CAAAK,QAAA,EAAAC,YAAA;YACAC,IAAA,EAAAP,QAAA,CAAAO,IAAA;YACAC,KAAA,EAAAR,QAAA,CAAAQ,KAAA;YACAI,KAAA,EAAAZ,QAAA,CAAAa;UACA;QACA;UACA,KAAA7H,gBAAA;QACA;MACA,SAAAyH,KAAA;QACAC,OAAA,CAAAD,KAAA,4CAAAA,KAAA;MACA;QACA,KAAAxG,QAAA,CAAAjB,gBAAA;MACA;IACA;IAEA8H,4BAAAd,QAAA;MACA,IAAAA,QAAA;QACAU,OAAA,CAAAK,GAAA,2BAAAf,QAAA;QACA,KAAA9G,cAAA,CAAAR,SAAA,GAAAsH,QAAA,CAAAE,EAAA;QACA,KAAAhH,cAAA,CAAAI,UAAA,GAAA0G,QAAA,CAAAK,QAAA;QACA,KAAA5F,oBAAA,GAAAuF,QAAA,CAAAjI,IAAA;MACA;QACA,KAAAmB,cAAA,CAAAR,SAAA;QACA,KAAAQ,cAAA,CAAAI,UAAA;MACA;IACA;IAEA0H,oCAAAhB,QAAA;MACA,IAAAA,QAAA;QACAU,OAAA,CAAAK,GAAA,wCAAAf,QAAA;QACA,KAAAlF,aAAA,CAAApC,SAAA,GAAAsH,QAAA,CAAAE,EAAA;QACA,KAAAxF,4BAAA,GAAAsF,QAAA,CAAAjI,IAAA;;QAEA;QACA,IAAAiI,QAAA,CAAAY,KAAA;UACA,KAAA9F,aAAA,CAAAE,cAAA,GAAAgF,QAAA,CAAAY,KAAA;QACA;MACA;QACA,KAAA9F,aAAA,CAAApC,SAAA;MACA;IACA;IAEA6F,kBAAA;MACA;MACA,UAAA1B,OAAA,UAAAhE,SAAA,qBAAAA,SAAA;QACA,KAAAA,SAAA;MACA;IACA;IAEA;IACAoI,oBAAA;MACA,SAAA1F,eAAA;QACA,KAAAA,eAAA;MACA;MACA,SAAAC,qBAAA;QACA,KAAAA,qBAAA;MACA;MACA,KAAAF,iBAAA,SAAAA,iBAAA;MACA,SAAAA,iBAAA;QACA,KAAA4F,SAAA;UACA,KAAAC,qBAAA;QACA;MACA;IACA;IAEAC,kBAAA;MACA,SAAA9F,iBAAA;QACA,KAAAA,iBAAA;MACA;MACA,SAAAE,qBAAA;QACA,KAAAA,qBAAA;MACA;MACA,KAAAD,eAAA,SAAAA,eAAA;MACA,SAAAA,eAAA;QACA,KAAA2F,SAAA;UACA,KAAAG,mBAAA;QACA;MACA;IACA;IAEAC,wBAAA;MACA,SAAAhG,iBAAA;QACA,KAAAA,iBAAA;MACA;MACA,SAAAC,eAAA;QACA,KAAAA,eAAA;MACA;MACA,KAAAC,qBAAA,SAAAA,qBAAA;MACA,SAAAA,qBAAA;QACA,KAAA0F,SAAA;UACA,KAAAK,yBAAA;QACA;MACA;IACA;IAEAJ,sBAAA;MACA,MAAAK,OAAA,QAAAC,KAAA,CAAAC,kBAAA;MACA,IAAAF,OAAA,SAAAC,KAAA,CAAAE,gBAAA;QACA,MAAAC,IAAA,GAAAJ,OAAA,CAAAK,qBAAA;QACA,MAAAC,cAAA,QAAAL,KAAA,CAAAE,gBAAA,CAAAI,YAAA;QACA,MAAAC,YAAA,GAAArD,MAAA,CAAAsD,WAAA;;QAEA;QACA,MAAAC,UAAA,GAAAF,YAAA,GAAAJ,IAAA,CAAAO,MAAA;QACA,MAAAC,SAAA,GAAAF,UAAA,IAAAJ,cAAA;QAEA,KAAA/F,kBAAA;UACAC,GAAA,EAAAoG,SAAA,MAAAR,IAAA,CAAAO,MAAA,GAAAxD,MAAA,CAAA0D,OAAA,UAAAT,IAAA,CAAA5F,GAAA,GAAA2C,MAAA,CAAA0D,OAAA,GAAAP,cAAA;UACA7F,IAAA,KAAA2F,IAAA,CAAA3F,IAAA,GAAA0C,MAAA,CAAA2D,OAAA;UACAC,MAAA;QACA;MACA;IACA;IAEAlB,oBAAA;MACA,MAAAG,OAAA,QAAAC,KAAA,CAAAe,gBAAA;MACA,IAAAhB,OAAA,SAAAC,KAAA,CAAAgB,cAAA;QACA,MAAAb,IAAA,GAAAJ,OAAA,CAAAK,qBAAA;QACA,MAAAC,cAAA,QAAAL,KAAA,CAAAgB,cAAA,CAAAV,YAAA;QACA,MAAAC,YAAA,GAAArD,MAAA,CAAAsD,WAAA;;QAEA;QACA,MAAAC,UAAA,GAAAF,YAAA,GAAAJ,IAAA,CAAAO,MAAA;QACA,MAAAC,SAAA,GAAAF,UAAA,IAAAJ,cAAA;QAEA,KAAA5F,gBAAA;UACAF,GAAA,EAAAoG,SAAA,MAAAR,IAAA,CAAAO,MAAA,GAAAxD,MAAA,CAAA0D,OAAA,UAAAT,IAAA,CAAA5F,GAAA,GAAA2C,MAAA,CAAA0D,OAAA,GAAAP,cAAA;UACA7F,IAAA,KAAA2F,IAAA,CAAA3F,IAAA,GAAA0C,MAAA,CAAA2D,OAAA;UACAC,MAAA;QACA;MACA;IACA;IAEAhB,0BAAA;MACA,MAAAC,OAAA,QAAAC,KAAA,CAAAiB,sBAAA;MACA,IAAAlB,OAAA,SAAAC,KAAA,CAAAkB,oBAAA;QACA,MAAAf,IAAA,GAAAJ,OAAA,CAAAK,qBAAA;QACA,MAAAC,cAAA,QAAAL,KAAA,CAAAkB,oBAAA,CAAAZ,YAAA;QACA,MAAAC,YAAA,GAAArD,MAAA,CAAAsD,WAAA;;QAEA;QACA,MAAAC,UAAA,GAAAF,YAAA,GAAAJ,IAAA,CAAAO,MAAA;QACA,MAAAC,SAAA,GAAAF,UAAA,IAAAJ,cAAA;QAEA,KAAA3F,sBAAA;UACAH,GAAA,EAAAoG,SAAA,MAAAR,IAAA,CAAAO,MAAA,GAAAxD,MAAA,CAAA0D,OAAA,UAAAT,IAAA,CAAA5F,GAAA,GAAA2C,MAAA,CAAA0D,OAAA,GAAAP,cAAA;UACA7F,IAAA,KAAA2F,IAAA,CAAA3F,IAAA,GAAA0C,MAAA,CAAA2D,OAAA;UACAC,MAAA;QACA;MACA;IACA;IAEA3D,wBAAA;MACA,SAAAtD,iBAAA;QACA,KAAA6F,qBAAA;MACA;MACA,SAAA5F,eAAA;QACA,KAAA8F,mBAAA;MACA;MACA,SAAA7F,qBAAA;QACA,KAAA+F,yBAAA;MACA;IACA;IAEA7C,mBAAAkE,KAAA;MACA;MACA,SAAAtH,iBAAA,IACA,KAAAmG,KAAA,CAAAE,gBAAA,IACA,MAAAF,KAAA,CAAAE,gBAAA,CAAAkB,QAAA,CAAAD,KAAA,CAAAE,MAAA,KACA,KAAArB,KAAA,CAAAC,kBAAA,IACA,MAAAD,KAAA,CAAAC,kBAAA,CAAAmB,QAAA,CAAAD,KAAA,CAAAE,MAAA;QACA,KAAAxH,iBAAA;MACA;;MAEA;MACA,SAAAC,eAAA,IACA,KAAAkG,KAAA,CAAAgB,cAAA,IACA,MAAAhB,KAAA,CAAAgB,cAAA,CAAAI,QAAA,CAAAD,KAAA,CAAAE,MAAA,KACA,KAAArB,KAAA,CAAAe,gBAAA,IACA,MAAAf,KAAA,CAAAe,gBAAA,CAAAK,QAAA,CAAAD,KAAA,CAAAE,MAAA;QACA,KAAAvH,eAAA;MACA;;MAEA;MACA,SAAAC,qBAAA,IACA,KAAAiG,KAAA,CAAAkB,oBAAA,IACA,MAAAlB,KAAA,CAAAkB,oBAAA,CAAAE,QAAA,CAAAD,KAAA,CAAAE,MAAA,KACA,KAAArB,KAAA,CAAAiB,sBAAA,IACA,MAAAjB,KAAA,CAAAiB,sBAAA,CAAAG,QAAA,CAAAD,KAAA,CAAAE,MAAA;QACA,KAAAtH,qBAAA;MACA;IACA;IAEA6B,gBAAA0F,IAAA,EAAAC,KAAA;MACA,MAAAC,QAAA,OAAA9K,IAAA,CAAA4K,IAAA,EAAAC,KAAA;MACA,MAAAE,OAAA,OAAA/K,IAAA,CAAA4K,IAAA,EAAAC,KAAA;MACA,MAAAG,WAAA,GAAAD,OAAA,CAAAE,OAAA;;MAEA;MACA,IAAAC,cAAA,GAAAJ,QAAA,CAAAK,MAAA;MACA;MACAD,cAAA,GAAAA,cAAA,aAAAA,cAAA;MAEA,MAAAE,IAAA;;MAEA;MACA,MAAAC,SAAA,GAAAR,KAAA,cAAAA,KAAA;MACA,MAAAS,aAAA,GAAAT,KAAA,SAAAD,IAAA,OAAAA,IAAA;MACA,MAAAW,eAAA,OAAAvL,IAAA,CAAAsL,aAAA,EAAAD,SAAA,SAAAJ,OAAA;MAEA,SAAAO,CAAA,MAAAA,CAAA,GAAAN,cAAA,EAAAM,CAAA;QACA,MAAAC,GAAA,GAAAF,eAAA,GAAAL,cAAA,GAAAM,CAAA;QACAJ,IAAA,CAAAM,IAAA;UACAD,GAAA;UACAhL,IAAA,MAAAT,IAAA,CAAAsL,aAAA,EAAAD,SAAA,EAAAI,GAAA;UACAE,UAAA;UACA5D,EAAA,UAAA0D,GAAA;QACA;MACA;;MAEA;MACA,SAAAD,CAAA,MAAAA,CAAA,IAAAR,WAAA,EAAAQ,CAAA;QACAJ,IAAA,CAAAM,IAAA;UACAD,GAAA,EAAAD,CAAA;UACA/K,IAAA,MAAAT,IAAA,CAAA4K,IAAA,EAAAC,KAAA,EAAAW,CAAA;UACAG,UAAA;UACA5D,EAAA,aAAAyD,CAAA;QACA;MACA;;MAEA;MACA,MAAAI,SAAA,GAAAf,KAAA,cAAAA,KAAA;MACA,MAAAgB,aAAA,GAAAhB,KAAA,UAAAD,IAAA,OAAAA,IAAA;MACA,MAAAkB,aAAA,QAAAV,IAAA,CAAA9F,MAAA;;MAEA,SAAAkG,CAAA,MAAAA,CAAA,IAAAM,aAAA,EAAAN,CAAA;QACAJ,IAAA,CAAAM,IAAA;UACAD,GAAA,EAAAD,CAAA;UACA/K,IAAA,MAAAT,IAAA,CAAA6L,aAAA,EAAAD,SAAA,EAAAJ,CAAA;UACAG,UAAA;UACA5D,EAAA,UAAAyD,CAAA;QACA;MACA;MAEA,OAAAJ,IAAA;IACA;IAEAW,oBAAAtL,IAAA;MACA,UAAAM,cAAA,CAAAK,SAAA;MAEA,OAAAX,IAAA,CAAAwK,OAAA,YAAAlK,cAAA,CAAAK,SAAA,CAAA6J,OAAA,MACAxK,IAAA,CAAAL,QAAA,YAAAW,cAAA,CAAAK,SAAA,CAAAhB,QAAA,MACAK,IAAA,CAAAP,WAAA,YAAAa,cAAA,CAAAK,SAAA,CAAAlB,WAAA;IACA;IAEA8L,kBAAAvL,IAAA;MACA,UAAAM,cAAA,CAAAM,OAAA;MAEA,OAAAZ,IAAA,CAAAwK,OAAA,YAAAlK,cAAA,CAAAM,OAAA,CAAA4J,OAAA,MACAxK,IAAA,CAAAL,QAAA,YAAAW,cAAA,CAAAM,OAAA,CAAAjB,QAAA,MACAK,IAAA,CAAAP,WAAA,YAAAa,cAAA,CAAAM,OAAA,CAAAnB,WAAA;IACA;IAEA+L,wBAAAxL,IAAA;MACA,UAAAkC,aAAA,CAAAG,KAAA;MAEA,OAAArC,IAAA,CAAAwK,OAAA,YAAAtI,aAAA,CAAAG,KAAA,CAAAmI,OAAA,MACAxK,IAAA,CAAAL,QAAA,YAAAuC,aAAA,CAAAG,KAAA,CAAA1C,QAAA,MACAK,IAAA,CAAAP,WAAA,YAAAyC,aAAA,CAAAG,KAAA,CAAA5C,WAAA;IACA;IAEAgM,QAAAzL,IAAA;MACA,MAAAV,KAAA,OAAAC,IAAA;MACA,OAAAS,IAAA,CAAAwK,OAAA,OAAAlL,KAAA,CAAAkL,OAAA,MACAxK,IAAA,CAAAL,QAAA,OAAAL,KAAA,CAAAK,QAAA,MACAK,IAAA,CAAAP,WAAA,OAAAH,KAAA,CAAAG,WAAA;IACA;IAEAiM,gBAAA1L,IAAA;MACA,KAAAM,cAAA,CAAAK,SAAA,OAAApB,IAAA,CAAAS,IAAA;MACA,KAAAwC,gBAAA,QAAAmJ,kBAAA,CAAA3L,IAAA;MACA,KAAA0C,iBAAA;IACA;IAEAkJ,cAAA5L,IAAA;MACA,KAAAM,cAAA,CAAAM,OAAA,OAAArB,IAAA,CAAAS,IAAA;MACA,KAAAyC,aAAA,QAAAkJ,kBAAA,CAAA3L,IAAA;MACA,KAAA2C,eAAA;IACA;IAEAkJ,oBAAA7L,IAAA;MACA,KAAAkC,aAAA,CAAAG,KAAA,OAAA9C,IAAA,CAAAS,IAAA;MACA,KAAAsC,kBAAA,QAAAqJ,kBAAA,CAAA3L,IAAA;MACA,KAAA4C,qBAAA;IACA;IAEAgI,UAAArK,IAAA;MACA,IAAAA,IAAA;QACA,SAAAsC,kBAAA;UACA,KAAAA,kBAAA;UACA,KAAAC,iBAAA;QACA;UACA,KAAAD,kBAAA;QACA;MACA,WAAAtC,IAAA;QACA,SAAAwC,gBAAA;UACA,KAAAA,gBAAA;UACA,KAAAC,eAAA;QACA;UACA,KAAAD,gBAAA;QACA;MACA,WAAAxC,IAAA;QACA,SAAA0C,sBAAA;UACA,KAAAA,sBAAA;UACA,KAAAC,qBAAA;QACA;UACA,KAAAD,sBAAA;QACA;MACA;IACA;IAEAkI,UAAA5K,IAAA;MACA,IAAAA,IAAA;QACA,SAAAsC,kBAAA;UACA,KAAAA,kBAAA;UACA,KAAAC,iBAAA;QACA;UACA,KAAAD,kBAAA;QACA;MACA,WAAAtC,IAAA;QACA,SAAAwC,gBAAA;UACA,KAAAA,gBAAA;UACA,KAAAC,eAAA;QACA;UACA,KAAAD,gBAAA;QACA;MACA,WAAAxC,IAAA;QACA,SAAA0C,sBAAA;UACA,KAAAA,sBAAA;UACA,KAAAC,qBAAA;QACA;UACA,KAAAD,sBAAA;QACA;MACA;IACA;IAEA6I,eAAA;MACA,KAAAxL,cAAA,CAAAK,SAAA;MACA,KAAA6B,gBAAA;MACA,KAAAE,iBAAA;IACA;IAEAqJ,aAAA;MACA,KAAAzL,cAAA,CAAAM,OAAA;MACA,KAAA6B,aAAA;MACA,KAAAE,eAAA;IACA;IAEAqJ,mBAAA;MACA,KAAA9J,aAAA,CAAAG,KAAA;MACA,KAAAC,kBAAA;MACA,KAAAM,qBAAA;IACA;IAEAqJ,gBAAA;MACA,MAAA3M,KAAA,OAAAC,IAAA;MACA,KAAAe,cAAA,CAAAK,SAAA,GAAArB,KAAA;MACA,KAAAkD,gBAAA,QAAAmJ,kBAAA,CAAArM,KAAA;MACA,KAAAuD,kBAAA,GAAAvD,KAAA,CAAAK,QAAA;MACA,KAAAmD,iBAAA,GAAAxD,KAAA,CAAAG,WAAA;MACA,KAAAiD,iBAAA;IACA;IAEAwJ,cAAA;MACA,MAAA5M,KAAA,OAAAC,IAAA;MACA,KAAAe,cAAA,CAAAM,OAAA,GAAAtB,KAAA;MACA,KAAAmD,aAAA,QAAAkJ,kBAAA,CAAArM,KAAA;MACA,KAAAyD,gBAAA,GAAAzD,KAAA,CAAAK,QAAA;MACA,KAAAqD,eAAA,GAAA1D,KAAA,CAAAG,WAAA;MACA,KAAAkD,eAAA;IACA;IAEAwJ,oBAAA;MACA,MAAA7M,KAAA,OAAAC,IAAA;MACA,KAAA2C,aAAA,CAAAG,KAAA,GAAA/C,KAAA;MACA,KAAAgD,kBAAA,QAAAqJ,kBAAA,CAAArM,KAAA;MACA,KAAA2D,sBAAA,GAAA3D,KAAA,CAAAK,QAAA;MACA,KAAAuD,qBAAA,GAAA5D,KAAA,CAAAG,WAAA;MACA,KAAAmD,qBAAA;IACA;IAEA+I,mBAAA3L,IAAA;MACA,KAAAA,IAAA;MACA,MAAAgL,GAAA,GAAAoB,MAAA,CAAApM,IAAA,CAAAwK,OAAA,IAAA6B,QAAA;MACA,MAAAjC,KAAA,GAAAgC,MAAA,CAAApM,IAAA,CAAAL,QAAA,QAAA0M,QAAA;MACA,MAAAlC,IAAA,GAAAnK,IAAA,CAAAP,WAAA;MACA,UAAAuL,GAAA,IAAAZ,KAAA,IAAAD,IAAA;IACA;IAEAmC,iBAAAtM,IAAA;MACA,KAAAA,IAAA;MACA,MAAAmK,IAAA,GAAAnK,IAAA,CAAAP,WAAA;MACA,MAAA2K,KAAA,GAAAgC,MAAA,CAAApM,IAAA,CAAAL,QAAA,QAAA0M,QAAA;MACA,MAAArB,GAAA,GAAAoB,MAAA,CAAApM,IAAA,CAAAwK,OAAA,IAAA6B,QAAA;MACA,UAAAlC,IAAA,IAAAC,KAAA,IAAAY,GAAA;IACA;IAEA;IACAuB,WAAAC,UAAA;MACA,KAAAA,UAAA;MACA,MAAAxM,IAAA,OAAAT,IAAA,CAAAiN,UAAA;MACA,OAAAxM,IAAA,CAAAyM,kBAAA;QACAtC,IAAA;QACAC,KAAA;QACAY,GAAA;MACA;IACA;IAEA,MAAAvF,iBAAA;MACA,KAAApE,QAAA,CAAAE,KAAA;MACA;QACA;QACA,MAAAmL,MAAA;QAEA,SAAA9M,OAAA,CAAAC,QAAA;UACA6M,MAAA,CAAA7M,QAAA,QAAAD,OAAA,CAAAC,QAAA;QACA;QAEA,SAAAD,OAAA,CAAAE,SAAA;UACA4M,MAAA,CAAA5M,SAAA,QAAAF,OAAA,CAAAE,SAAA;QACA;QAEA,SAAAF,OAAA,CAAAG,cAAA;UACA2M,MAAA,CAAA3M,cAAA,QAAAH,OAAA,CAAAG,cAAA;QACA;QAEA,SAAAH,OAAA,CAAAI,IAAA;UACA;UACA0M,MAAA,CAAA1M,IAAA,QAAAsM,gBAAA,MAAA1M,OAAA,CAAAI,IAAA;QACA;QAEA,MAAAiH,QAAA,SAAAjI,UAAA;UACAkI,MAAA;UACAC,IAAA;UACAuF,MAAA,EAAAA;QACA;QAEA,IAAAzF,QAAA,IAAAA,QAAA,CAAA5H,IAAA;UACA,KAAAa,UAAA,GAAAyM,KAAA,CAAAC,OAAA,CAAA3F,QAAA,CAAA5H,IAAA,IAAA4H,QAAA,CAAA5H,IAAA;;UAEA;UACAyI,OAAA,CAAAK,GAAA,8BAAAjI,UAAA;QACA;UACA,KAAAA,UAAA;QACA;MACA,SAAA2H,KAAA;QACAC,OAAA,CAAAD,KAAA,gCAAAA,KAAA;QACA,KAAAgF,MAAA,CAAAC,KAAA,CAAAC,IAAA;UACAC,OAAA;UACAzM,IAAA;UACA0M,QAAA;QACA;QACA,KAAA/M,UAAA;MACA;QACA,KAAAmB,QAAA,CAAAE,KAAA;MACA;IACA;IAEA,MAAAmE,iBAAA;MACA;QACA,MAAAuB,QAAA,SAAAjI,UAAA;UACAkI,MAAA;UACAC,IAAA;QACA;QAEA,IAAAF,QAAA,IAAAA,QAAA,CAAA5H,IAAA;UACA,KAAAgB,UAAA,GAAAsM,KAAA,CAAAC,OAAA,CAAA3F,QAAA,CAAA5H,IAAA,IAAA4H,QAAA,CAAA5H,IAAA;QACA;UACA,KAAAgB,UAAA;QACA;MACA,SAAAwH,KAAA;QACAC,OAAA,CAAAD,KAAA,gCAAAA,KAAA;QACA,KAAAxH,UAAA;MACA;IACA;IAEA6M,kBAAA;MACA,IAAAC,QAAA;MACA,KAAAtM,OAAA;QACA1B,IAAA;QACAoB,IAAA;QACAC,KAAA;QACAC,WAAA;QACAE,SAAA;QACAC,OAAA;QACAd,SAAA;QACAgB,eAAA;QACAC,SAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,cAAA;QACAC,aAAA;QACAC,QAAA;MACA;MAEA,UAAAd,cAAA,CAAAnB,IAAA,CAAA6H,IAAA;QACA,KAAAnG,OAAA,CAAA1B,IAAA;QACAgO,QAAA;MACA;MAEA,UAAA7M,cAAA,CAAAC,IAAA;QACA,KAAAM,OAAA,CAAAN,IAAA;QACA4M,QAAA;MACA;MAEA,SAAA7M,cAAA,CAAAE,KAAA,kBAAAF,cAAA,CAAAE,KAAA,KAAA4M,SAAA,SAAA9M,cAAA,CAAAE,KAAA;QACA,KAAAK,OAAA,CAAAL,KAAA;QACA2M,QAAA;MACA,gBAAA7M,cAAA,CAAAC,IAAA,0BAAAD,cAAA,CAAAE,KAAA;QACA,KAAAK,OAAA,CAAAL,KAAA;QACA2M,QAAA;MACA;MAEA,UAAA7M,cAAA,CAAAG,WAAA,SAAAH,cAAA,CAAAG,WAAA;QACA,KAAAI,OAAA,CAAAJ,WAAA;QACA0M,QAAA;MACA;MAEA,UAAA7M,cAAA,CAAAR,SAAA;QACA,KAAAe,OAAA,CAAAf,SAAA;QACAqN,QAAA;MACA;MAEA,UAAA7M,cAAA,CAAAK,SAAA;QACA,KAAAE,OAAA,CAAAF,SAAA;QACAwM,QAAA;MACA;MAEA,UAAA7M,cAAA,CAAAM,OAAA;QACA,KAAAC,OAAA,CAAAD,OAAA;QACAuM,QAAA;MACA,gBAAA7M,cAAA,CAAAK,SAAA,SAAAL,cAAA,CAAAM,OAAA,IACA,IAAArB,IAAA,MAAAe,cAAA,CAAAM,OAAA,SAAArB,IAAA,MAAAe,cAAA,CAAAK,SAAA;QACA,KAAAE,OAAA,CAAAD,OAAA;QACAuM,QAAA;MACA;MAEA,OAAAA,QAAA;IACA;IAEAE,yBAAA;MACA,IAAAF,QAAA;MACA,KAAAtM,OAAA,CAAAG,iBAAA;MACA,KAAAH,OAAA,CAAAI,gBAAA;MACA,KAAAJ,OAAA,CAAAK,cAAA;MACA,KAAAL,OAAA,CAAAM,aAAA;MACA,KAAAN,OAAA,CAAAO,QAAA;MAEA,UAAAc,aAAA,CAAApC,SAAA,SAAAoC,aAAA,CAAApC,SAAA;QACA,KAAAe,OAAA,CAAAG,iBAAA;QACAmM,QAAA;MACA;MAEA,UAAAjL,aAAA,CAAAC,QAAA,SAAAD,aAAA,CAAAC,QAAA;QACA,KAAAtB,OAAA,CAAAI,gBAAA;QACAkM,QAAA;MACA;MAEA,UAAAjL,aAAA,CAAAE,cAAA,SAAAF,aAAA,CAAAE,cAAA;QACA,KAAAvB,OAAA,CAAAK,cAAA;QACAiM,QAAA;MACA;;MAEA;MACA,SAAAjL,aAAA,CAAAG,KAAA,WAAAH,aAAA,CAAAG,KAAA,YAAA9C,IAAA,KAAA+N,KAAA,MAAApL,aAAA,CAAAG,KAAA;QACA,KAAAxB,OAAA,CAAAM,aAAA;QACAgM,QAAA;MACA;MAEA,OAAAA,QAAA;IACA;IAEAI,uBAAA;MACA;MACA,MAAAC,KAAA;QAAA,QAAAlN;MAAA;;MAEA;MACA,IAAAkN,KAAA,CAAA7M,SAAA,YAAApB,IAAA;QACAiO,KAAA,CAAA7M,SAAA,GAAA6M,KAAA,CAAA7M,SAAA,CAAA8M,WAAA;MACA;MAEA,IAAAD,KAAA,CAAA5M,OAAA,YAAArB,IAAA;QACAiO,KAAA,CAAA5M,OAAA,GAAA4M,KAAA,CAAA5M,OAAA,CAAA6M,WAAA;MACA;;MAEA;MACAD,KAAA,CAAAhN,KAAA,GAAAkN,MAAA,CAAAF,KAAA,CAAAhN,KAAA;MACAgN,KAAA,CAAA/M,WAAA,GAAAiN,MAAA,CAAAF,KAAA,CAAA/M,WAAA;;MAEA;MACA+M,KAAA,CAAA1N,SAAA,GAAA0N,KAAA,CAAA1N,SAAA;MACA0N,KAAA,CAAA9M,UAAA,GAAA8M,KAAA,CAAA9M,UAAA;;MAEA;MACA8M,KAAA,CAAA3N,QAAA,GAAA8N,OAAA,CAAAH,KAAA,CAAA3N,QAAA;MAEAiI,OAAA,CAAAK,GAAA,kCAAAqF,KAAA;MACA,OAAAA,KAAA;IACA;IAEA,MAAAI,iBAAA;MACA,UAAAV,iBAAA;QACA;MACA;MAEA,KAAA7L,QAAA,CAAAG,SAAA;MAEA;QACA;QACA,MAAAgM,KAAA,QAAAD,sBAAA;QACAzF,OAAA,CAAAK,GAAA,oBAAAqF,KAAA;;QAEA,IAAAvG,QAAA;QACA,SAAAtF,WAAA;UACAsF,QAAA,SAAAjI,UAAA;YACAkI,MAAA;YACAC,IAAA,oBAAAvF,mBAAA;YACAvC,IAAA,EAAAmO;UACA;QACA;UACAvG,QAAA,SAAAjI,UAAA;YACAkI,MAAA;YACAC,IAAA;YACA9H,IAAA,EAAAmO;UACA;QACA;QAEA,IAAAvG,QAAA;UACA,KAAA4F,MAAA,CAAAC,KAAA,CAAAC,IAAA;YACAC,OAAA,OAAArL,WAAA;YACApB,IAAA;YACA0M,QAAA;UACA;UAEA,KAAAY,kBAAA;UACA,KAAApI,gBAAA;UACA,KAAAxF,SAAA;QACA;MACA,SAAA4H,KAAA;QACAC,OAAA,CAAAD,KAAA,gCAAAA,KAAA;QAEA,IAAAiG,YAAA,oBAAAnM,WAAA;;QAEA;QACA,IAAAkG,KAAA,CAAAZ,QAAA,IAAAY,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,IAAAwI,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,CAAA0O,MAAA;UACA,MAAAlN,OAAA,GAAAgH,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,CAAA0O,MAAA;;UAEA;UACAC,MAAA,CAAAC,IAAA,CAAApN,OAAA,EAAAqN,OAAA,CAAAC,KAAA;YACA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,MAAAzN,OAAA,EAAAsN,KAAA;cACA,KAAAtN,OAAA,CAAAsN,KAAA,IAAAxB,KAAA,CAAAC,OAAA,CAAA/L,OAAA,CAAAsN,KAAA,KACAtN,OAAA,CAAAsN,KAAA,OACAtN,OAAA,CAAAsN,KAAA;YACA;UACA;UAEAL,YAAA;QACA,WAAAjG,KAAA,CAAAmF,OAAA;UACAc,YAAA,SAAAjG,KAAA,CAAAmF,OAAA;QACA;QAEA,KAAAH,MAAA,CAAAC,KAAA,CAAAC,IAAA;UACAC,OAAA,EAAAc,YAAA;UACAvN,IAAA;UACA0M,QAAA;QACA;MACA;QACA,KAAA5L,QAAA,CAAAG,SAAA;MACA;IACA;IAEA+M,gBAAAxK,SAAA;MACA,KAAApC,WAAA;MACA,KAAAC,mBAAA,GAAAmC,SAAA,CAAAuD,EAAA;MAEAQ,OAAA,CAAAK,GAAA,wBAAApE,SAAA;;MAEA;MACA,KAAAzD,cAAA;QACAnB,IAAA,EAAA4E,SAAA,CAAA5E,IAAA;QACAoB,IAAA,EAAAwD,SAAA,CAAAxD,IAAA;QACAC,KAAA,EAAAuD,SAAA,CAAAvD,KAAA,KAAA4M,SAAA,GAAAM,MAAA,CAAA3J,SAAA,CAAAvD,KAAA;QACAC,WAAA,EAAAsD,SAAA,CAAAtD,WAAA,KAAA2M,SAAA,GAAAM,MAAA,CAAA3J,SAAA,CAAAtD,WAAA;QACAX,SAAA,EAAAiE,SAAA,CAAAyK,OAAA,GAAAzK,SAAA,CAAAyK,OAAA,CAAAlH,EAAA,GAAAvD,SAAA,CAAAjE,SAAA;QACAY,UAAA,EAAAqD,SAAA,CAAA0D,QAAA,GAAA1D,SAAA,CAAA0D,QAAA,CAAAH,EAAA,GAAAvD,SAAA,CAAArD,UAAA;QACAC,SAAA,EAAAoD,SAAA,CAAApD,SAAA,OAAApB,IAAA,CAAAwE,SAAA,CAAApD,SAAA;QACAC,OAAA,EAAAmD,SAAA,CAAAnD,OAAA,OAAArB,IAAA,CAAAwE,SAAA,CAAAnD,OAAA;QACAf,QAAA,EAAA8N,OAAA,CAAA5J,SAAA,CAAAlE,QAAA;MACA;;MAEA;MACA,KAAA2C,gBAAA,QAAAmJ,kBAAA,MAAArL,cAAA,CAAAK,SAAA;MACA,KAAA8B,aAAA,QAAAkJ,kBAAA,MAAArL,cAAA,CAAAM,OAAA;;MAEA;MACA,IAAAmD,SAAA,CAAAyK,OAAA;QACA,KAAA3M,oBAAA,GAAAkC,SAAA,CAAAyK,OAAA,CAAArP,IAAA;MACA;MAEA,KAAAc,SAAA;IACA;IAEAwO,gBAAA;MACA,KAAAZ,kBAAA;MACA,KAAAlM,WAAA;MACA,KAAAC,mBAAA;IACA;IAEAiM,mBAAA;MACA,KAAAvN,cAAA;QACAnB,IAAA;QACAoB,IAAA;QACAC,KAAA;QACAC,WAAA;QACAX,SAAA;QACAY,UAAA;QACAC,SAAA;QACAC,OAAA;QACAf,QAAA;MACA;MAEA,KAAA2C,gBAAA;MACA,KAAAC,aAAA;MACA,KAAAZ,oBAAA;MAEA,KAAAhB,OAAA;QACA1B,IAAA;QACAoB,IAAA;QACAC,KAAA;QACAC,WAAA;QACAE,SAAA;QACAC,OAAA;QACAd,SAAA;QACAgB,eAAA;QACAC,SAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,cAAA;QACAC,aAAA;QACAC,QAAA;MACA;MAEA,KAAAO,WAAA;MACA,KAAAC,mBAAA;IACA;IAEA,MAAA8M,kBAAApH,EAAA;MACA,KAAAuF,MAAA,CAAA8B,MAAA,CAAAC,OAAA;QACAC,KAAA;QACA7B,OAAA;QACA8B,WAAA;QACAC,UAAA;QACAxO,IAAA;QACAyO,OAAA;QACAC,SAAA,QAAAA,CAAA;UACA,KAAA5N,QAAA,CAAAC,OAAA;UAEA;YACA,MAAA2F,QAAA,SAAAjI,UAAA;cACAkI,MAAA;cACAC,IAAA,eAAAG,EAAA;YACA;;YAEA;YACA,IAAAL,QAAA,IAAAA,QAAA,CAAAiI,MAAA;cACA,KAAArC,MAAA,CAAAC,KAAA,CAAAC,IAAA;gBACAC,OAAA;gBACAzM,IAAA;gBACA0M,QAAA;cACA;cAEA,KAAAxH,gBAAA;YACA;UACA,SAAAoC,KAAA;YACAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;;YAEA;YACA,IAAAA,KAAA,CAAAZ,QAAA,IAAAY,KAAA,CAAAZ,QAAA,CAAAiI,MAAA;cACA,KAAArC,MAAA,CAAAC,KAAA,CAAAC,IAAA;gBACAC,OAAA;gBACAzM,IAAA;gBACA0M,QAAA;cACA;cACA;cACA,KAAAxH,gBAAA;YACA;cACA,KAAAoH,MAAA,CAAAC,KAAA,CAAAC,IAAA;gBACAC,OAAA;gBACAzM,IAAA;gBACA0M,QAAA;cACA;YACA;UACA;YACA,KAAA5L,QAAA,CAAAC,OAAA;UACA;QACA;MACA;IACA;IAEA,MAAA6N,sBAAApL,SAAA;MACA,KAAA1C,QAAA,CAAAC,OAAA;MAEA;QACA,MAAA8N,WAAA,IAAArL,SAAA,CAAAlE,QAAA;QACA,MAAAoH,QAAA,SAAAjI,UAAA;UACAkI,MAAA;UACAC,IAAA,eAAApD,SAAA,CAAAuD,EAAA;UACAjI,IAAA;YAAAQ,QAAA,EAAAuP;UAAA;QACA;QAEA,IAAAnI,QAAA;UACA,KAAA4F,MAAA,CAAAC,KAAA,CAAAC,IAAA;YACAC,OAAA,eAAAoC,WAAA;YACA7O,IAAA;UACA;UAEA,KAAAkF,gBAAA;QACA;MACA,SAAAoC,KAAA;QACAC,OAAA,CAAAD,KAAA,2CAAAA,KAAA;QACA,KAAAgF,MAAA,CAAAC,KAAA,CAAAC,IAAA;UACAC,OAAA;UACAzM,IAAA;QACA;MACA;QACA,KAAAc,QAAA,CAAAC,OAAA;MACA;IACA;IAEA;IACA+N,eAAA;MACA,KAAA5J,gBAAA;IACA;IAEA;IACA6J,gBAAA;MACA,KAAA1P,OAAA;QACAC,QAAA;QACAC,SAAA;QACAC,cAAA;QACAC,IAAA;MACA;MACA,KAAAyF,gBAAA;IACA;IAEA8J,mBAAAxL,SAAA;MACA,IAAAA,SAAA;QACA,KAAA/B,8BAAA,GAAA+B,SAAA;QACA,KAAAhC,wBAAA,GAAAgC,SAAA,CAAA5E,IAAA;MACA;IACA;IAEA,MAAAqQ,mCAAA;MACA;MACA,KAAA3O,OAAA,CAAAC,eAAA;MACA,KAAAD,OAAA,CAAAE,SAAA;MACA,KAAAkB,qBAAA;;MAEA;MACA,UAAAF,wBAAA,CAAAiF,IAAA;QACA,KAAAnG,OAAA,CAAAC,eAAA;QACA;MACA;;MAEA;MACA,UAAAkB,8BAAA;QACA,MAAAyN,mBAAA,QAAAvP,UAAA,CAAAwP,IAAA,CACAC,CAAA,IAAAA,CAAA,CAAAxQ,IAAA,CAAA0E,WAAA,YAAA9B,wBAAA,CAAA8B,WAAA,EACA;QAEA,KAAA4L,mBAAA;UACA,KAAA5O,OAAA,CAAAE,SAAA;UACA;QACA;QAEA,KAAAiB,8BAAA,GAAAyN,mBAAA;MACA;MAEA,KAAApO,QAAA,CAAAI,WAAA;MAEA;QACA,MAAAwF,QAAA,SAAAjI,UAAA;UACAkI,MAAA;UACAC,IAAA,oBAAAnF,8BAAA,CAAAsF,EAAA;QACA;QAEA,IAAAL,QAAA,IAAAA,QAAA,CAAA5H,IAAA;UACA,KAAA4C,qBAAA,GAAAgF,QAAA,CAAA5H,IAAA;UACAyI,OAAA,CAAAK,GAAA,oCAAAlG,qBAAA;QACA;UACA,KAAApB,OAAA,CAAAE,SAAA;QACA;MACA,SAAA8G,KAAA;QACAC,OAAA,CAAAD,KAAA,8CAAAA,KAAA;QAEA,IAAAA,KAAA,CAAAZ,QAAA,IAAAY,KAAA,CAAAZ,QAAA,CAAAiI,MAAA;UACA,KAAArO,OAAA,CAAAE,SAAA;QACA,WAAA8G,KAAA,CAAAZ,QAAA,IAAAY,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,IAAAwI,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,CAAA2N,OAAA;UACA,KAAAnM,OAAA,CAAAE,SAAA,GAAA8G,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,CAAA2N,OAAA;QACA;UACA,KAAAnM,OAAA,CAAAE,SAAA;QACA;MACA;QACA,KAAAM,QAAA,CAAAI,WAAA;QACA;QACA,KAAAO,8BAAA;MACA;IACA;IAEA,MAAA4N,2BAAA;MACA;MACA,UAAAvC,wBAAA;QACA;MACA;MAEA,KAAAhM,QAAA,CAAAK,UAAA;MACA,KAAAa,iBAAA;MACA,KAAA1B,OAAA,CAAAO,QAAA;MAEA;QACA,IAAAyO,GAAA,6BAAA3N,aAAA,CAAApC,SAAA,4BAAAoC,aAAA,CAAAC,QAAA,mBAAAD,aAAA,CAAAE,cAAA;;QAEA;QACA,SAAAF,aAAA,CAAAG,KAAA;UACAwN,GAAA,kBAAAvD,gBAAA,MAAApK,aAAA,CAAAG,KAAA;QACA;QAEAyF,OAAA,CAAAK,GAAA,kBAAA0H,GAAA;QAEA,MAAA5I,QAAA,SAAAjI,UAAA;UACAkI,MAAA;UACAC,IAAA,EAAA0I;QACA;QAEA/H,OAAA,CAAAK,GAAA,wBAAAlB,QAAA;QAEA,IAAAA,QAAA,IAAAA,QAAA,CAAA5H,IAAA;UACA,IAAAyQ,UAAA,GAAA7I,QAAA,CAAA5H,IAAA;;UAEA;UACA,KAAAsN,KAAA,CAAAC,OAAA,CAAAkD,UAAA;YACAA,UAAA,IAAAA,UAAA;UACA;UAEA,KAAAvN,iBAAA,GAAAuN,UAAA;UACAhI,OAAA,CAAAK,GAAA,gCAAA5F,iBAAA;UAEA,SAAAA,iBAAA,CAAAsC,MAAA;YACA,KAAAgI,MAAA,CAAAC,KAAA,CAAAC,IAAA;cACAC,OAAA;cACAzM,IAAA;cACA0M,QAAA;YACA;UACA;YACA,KAAAJ,MAAA,CAAAC,KAAA,CAAAC,IAAA;cACAC,OAAA,yBAAAzK,iBAAA,CAAAsC,MAAA;cACAtE,IAAA;cACA0M,QAAA;YACA;UACA;QACA;UACA,KAAA1K,iBAAA;UACA,KAAA1B,OAAA,CAAAO,QAAA;QACA;MACA,SAAAyG,KAAA;QACAC,OAAA,CAAAD,KAAA,kCAAAA,KAAA;QAEA,IAAAA,KAAA,CAAAZ,QAAA,IAAAY,KAAA,CAAAZ,QAAA,CAAAiI,MAAA;UACA,KAAArO,OAAA,CAAAO,QAAA;QACA,WAAAyG,KAAA,CAAAZ,QAAA,IAAAY,KAAA,CAAAZ,QAAA,CAAAiI,MAAA;UACA,KAAArO,OAAA,CAAAO,QAAA;;UAEA;UACA,IAAAyG,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,IAAAwI,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,CAAA2N,OAAA;YACA,KAAAnM,OAAA,CAAAO,QAAA,iBAAAyG,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,CAAA2N,OAAA;UACA;QACA,WAAAnF,KAAA,CAAAZ,QAAA,IAAAY,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,IAAAwI,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,CAAA2N,OAAA;UACA,KAAAnM,OAAA,CAAAO,QAAA,GAAAyG,KAAA,CAAAZ,QAAA,CAAA5H,IAAA,CAAA2N,OAAA;QACA;UACA,KAAAnM,OAAA,CAAAO,QAAA;QACA;MACA;QACA,KAAAC,QAAA,CAAAK,UAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}