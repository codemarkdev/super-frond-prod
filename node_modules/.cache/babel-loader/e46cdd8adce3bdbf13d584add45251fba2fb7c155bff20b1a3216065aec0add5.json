{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport MensajeInicial from '../Extras/MensajeInicial';\nimport ClientesEliminados from './Clientes-Eliminados.vue';\nimport apiRequest from '../../Servicios/HttpService';\nexport default {\n  name: \"ClientesComponent\",\n  components: {\n    MensajeInicial,\n    ClientesEliminados\n  },\n  data: () => ({\n    activeTab: 'activos',\n    cargando: false,\n    clientes: [],\n    isPaginated: true,\n    isPaginationSimple: false,\n    isPaginationRounded: true,\n    paginationPosition: 'bottom',\n    defaultSortDirection: 'asc',\n    sortIcon: 'arrow-up',\n    sortIconSize: 'is-medium',\n    currentPage: 1,\n    perPage: 10,\n    totalClientes: 0,\n    totalPages: 1,\n    isVentasModalActive: false,\n    ventasCliente: null,\n    clienteSeleccionado: null,\n    clienteSeleccionadoNombre: '',\n    clienteTieneVentas: false\n  }),\n  mounted() {\n    this.obtenerClientes();\n  },\n  methods: {\n    cambiarTab(tab) {\n      this.activeTab = tab;\n      if (tab === 'activos') {\n        this.obtenerClientes();\n      }\n      // El tab de eliminados tiene su propio componente que maneja su carga de datos\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('es-MX', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    async eliminar(idCliente) {\n      this.$buefy.dialog.confirm({\n        title: 'Eliminar cliente',\n        message: 'Seguro que quieres <b>eliminar</b> este cliente? Esta acción no se puede revertir.',\n        confirmText: 'Sí, eliminar',\n        cancelText: 'Cancelar',\n        type: 'is-danger',\n        hasIcon: true,\n        onConfirm: () => {\n          this.cargando = true;\n          apiRequest({\n            method: 'DELETE',\n            path: `customers/${idCliente}`\n          }).then(resultado => {\n            if (!resultado) {\n              this.$buefy.toast.open('Error al eliminar');\n              this.cargando = false;\n              return;\n            }\n            if (resultado) {\n              this.cargando = false;\n              this.$buefy.toast.open({\n                type: 'is-info',\n                message: 'Cliente eliminado.'\n              });\n              this.obtenerClientes();\n            }\n          });\n        }\n      });\n    },\n    editar(idCliente) {\n      this.$router.push({\n        name: \"EditarCliente\",\n        params: {\n          id: idCliente\n        }\n      });\n    },\n    obtenerClientes() {\n      this.cargando = true;\n      apiRequest({\n        method: 'GET',\n        path: 'customers'\n      }).then(respuesta => {\n        if (respuesta && respuesta.data) {\n          // Si la respuesta tiene formato paginado\n          if (Array.isArray(respuesta.data.data)) {\n            this.clientes = respuesta.data.data;\n            this.totalClientes = respuesta.data.total || this.clientes.length;\n            this.totalPages = respuesta.data.totalPages || 1;\n          } else {\n            // Si la respuesta es un array simple\n            this.clientes = respuesta.data;\n            this.totalClientes = this.clientes.length;\n            this.totalPages = Math.ceil(this.totalClientes / this.perPage);\n          }\n        } else {\n          this.clientes = [];\n          this.totalClientes = 0;\n          this.totalPages = 1;\n        }\n        this.cargando = false;\n      }).catch(error => {\n        console.error(\"Error al obtener clientes:\", error);\n        this.clientes = [];\n        this.totalClientes = 0;\n        this.totalPages = 1;\n        this.cargando = false;\n        this.$buefy.toast.open({\n          message: 'Error al cargar los clientes',\n          type: 'is-danger'\n        });\n      });\n    },\n    verVentas(idCliente, nombreCliente) {\n      this.cargando = true;\n      this.clienteSeleccionado = idCliente;\n      this.clienteSeleccionadoNombre = nombreCliente || 'Cliente';\n      this.clienteTieneVentas = false;\n      apiRequest({\n        method: 'GET',\n        path: `customers/sales-by-customer/${idCliente}`\n      }).then(respuesta => {\n        this.cargando = false;\n        if (respuesta && respuesta.data && Array.isArray(respuesta.data)) {\n          // Buscamos específicamente el cliente solicitado en el array\n          const clienteVentas = respuesta.data.find(item => item.id === idCliente);\n\n          // Verificamos si el cliente existe y tiene ventas\n          if (clienteVentas && clienteVentas.totalSales !== null && clienteVentas.totalSales > 0) {\n            this.ventasCliente = clienteVentas;\n            this.clienteTieneVentas = true;\n          } else {\n            // Si no tiene ventas o totalSales es null\n            this.ventasCliente = {\n              id: idCliente,\n              totalSales: 0\n            };\n            this.clienteTieneVentas = false;\n          }\n        } else {\n          // Si la respuesta no es válida\n          this.ventasCliente = {\n            id: idCliente,\n            totalSales: 0\n          };\n          this.clienteTieneVentas = false;\n        }\n        this.isVentasModalActive = true;\n      }).catch(error => {\n        console.error(\"Error al obtener ventas del cliente:\", error);\n        this.cargando = false;\n        this.ventasCliente = {\n          id: idCliente,\n          totalSales: 0\n        };\n        this.clienteTieneVentas = false;\n        this.$buefy.toast.open({\n          message: 'Error al cargar las ventas del cliente',\n          type: 'is-danger'\n        });\n        this.isVentasModalActive = true;\n      });\n    }\n  }\n};","map":{"version":3,"names":["MensajeInicial","ClientesEliminados","apiRequest","name","components","data","activeTab","cargando","clientes","isPaginated","isPaginationSimple","isPaginationRounded","paginationPosition","defaultSortDirection","sortIcon","sortIconSize","currentPage","perPage","totalClientes","totalPages","isVentasModalActive","ventasCliente","clienteSeleccionado","clienteSeleccionadoNombre","clienteTieneVentas","mounted","obtenerClientes","methods","cambiarTab","tab","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","eliminar","idCliente","$buefy","dialog","confirm","title","message","confirmText","cancelText","type","hasIcon","onConfirm","method","path","then","resultado","toast","open","editar","$router","push","params","id","respuesta","Array","isArray","total","length","Math","ceil","catch","error","console","verVentas","nombreCliente","clienteVentas","find","item","totalSales"],"sources":["src/components/Clientes/ClientesComponent.vue"],"sourcesContent":["<template>\r\n\t<section>\r\n\t\t<!-- Título principal que cambia según la pestaña activa -->\r\n\t\t<div v-if=\"activeTab === 'activos'\">\r\n\t\t\t<div class=\"level mb-5\">\r\n\t\t\t\t<div class=\"level-left\">\r\n\t\t\t\t\t<div class=\"level-item\">\r\n\t\t\t\t\t\t<h1 class=\"title is-4\">Clientes</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"level-right\">\r\n\t\t\t\t\t<div class=\"level-item\">\r\n\t\t\t\t\t\t<router-link to=\"/agregar-cliente\" class=\"button is-primary\">\r\n\t\t\t\t\t\t\t<span class=\"icon\">\r\n\t\t\t\t\t\t\t\t<i class=\"mdi mdi-plus\"></i>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span>Agregar cliente</span>\r\n\t\t\t\t\t\t</router-link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div v-else-if=\"activeTab === 'eliminados'\">\r\n\t\t\t<div class=\"level mb-5\">\r\n\t\t\t\t<div class=\"level-left\">\r\n\t\t\t\t\t<div class=\"level-item\">\r\n\t\t\t\t\t\t<h1 class=\"title is-4\">Clientes Eliminados</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- Sin botón de agregar en esta vista -->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t<!-- Implementando tabs de Bulma -->\r\n\t\t<div class=\"tabs is-boxed mb-4\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li :class=\"{ 'is-active': activeTab === 'activos' }\">\r\n\t\t\t\t\t<a @click=\"cambiarTab('activos')\">\r\n\t\t\t\t\t\t<span class=\"icon is-small\"><i class=\"mdi mdi-account-multiple\"></i></span>\r\n\t\t\t\t\t\t<span>Clientes Activos</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li :class=\"{ 'is-active': activeTab === 'eliminados' }\">\r\n\t\t\t\t\t<a @click=\"cambiarTab('eliminados')\">\r\n\t\t\t\t\t\t<span class=\"icon is-small\"><i class=\"mdi mdi-archive\"></i></span>\r\n\t\t\t\t\t\t<span>Clientes Eliminados</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\r\n\t\t<!-- Clientes Activos Tab Content -->\r\n\t\t<div v-if=\"activeTab === 'activos'\">\r\n\t\t\t<div v-if=\"clientes.length < 1\">\r\n\t\t\t\t<mensaje-inicial :titulo=\"'No se han encontrado clientes'\" \r\n\t\t\t\t\t:subtitulo=\"'Agrega clientes pulsando el botón de Agregar cliente'\" />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div v-if=\"clientes.length > 0\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b-table :data=\"clientes\" :per-page=\"perPage\"\r\n\t\t\t\t\t\t:current-page.sync=\"currentPage\" :pagination-simple=\"isPaginationSimple\"\r\n\t\t\t\t\t\t:pagination-position=\"paginationPosition\" :default-sort-direction=\"defaultSortDirection\"\r\n\t\t\t\t\t\t:pagination-rounded=\"isPaginationRounded\" :sort-icon=\"sortIcon\" :sort-icon-size=\"sortIconSize\"\r\n\t\t\t\t\t\tdefault-sort=\"name\" aria-next-label=\"Next page\" aria-previous-label=\"Previous page\"\r\n\t\t\t\t\t\taria-page-label=\"Page\" aria-current-label=\"Current page\"\r\n\t\t\t\t\t\t:sticky-header=\"false\" :height=\"null\">\r\n\t\t\t\t\t\t<b-table-column field=\"name\" label=\"Nombre del cliente\" sortable searchable v-slot=\"props\">\r\n\t\t\t\t\t\t\t{{ props.row.name }}\r\n\t\t\t\t\t\t</b-table-column>\r\n\r\n\t\t\t\t\t\t<b-table-column field=\"phone\" label=\"Teléfono\" sortable searchable v-slot=\"props\">\r\n\t\t\t\t\t\t\t{{ props.row.phone }}\r\n\t\t\t\t\t\t</b-table-column>\r\n\r\n\t\t\t\t\t\t<b-table-column field=\"acciones\" label=\"Acciones\" v-slot=\"props\" centered>\r\n\t\t\t\t\t\t\t<div class=\"buttons is-centered\">\r\n\t\t\t\t\t\t\t\t<b-tooltip label=\"Ver ventas\" position=\"is-top\">\r\n\t\t\t\t\t\t\t\t\t<b-button class=\"btn-info\" @click=\"verVentas(props.row.id, props.row.name)\">\r\n\t\t\t\t\t\t\t\t\t\t<b-icon icon=\"shopping\" />\r\n\t\t\t\t\t\t\t\t\t</b-button>\r\n\t\t\t\t\t\t\t\t</b-tooltip>\r\n\t\t\t\t\t\t\t\t<b-tooltip label=\"Editar cliente\" position=\"is-top\">\r\n\t\t\t\t\t\t\t\t\t<b-button class=\"btn-primary\" @click=\"editar(props.row.id)\">\r\n\t\t\t\t\t\t\t\t\t\t<b-icon icon=\"pen\" />\r\n\t\t\t\t\t\t\t\t\t</b-button>\r\n\t\t\t\t\t\t\t\t</b-tooltip>\r\n\t\t\t\t\t\t\t\t<b-tooltip label=\"Eliminar cliente\" position=\"is-top\">\r\n\t\t\t\t\t\t\t\t\t<b-button class=\"btn-link\" @click=\"eliminar(props.row.id)\">\r\n\t\t\t\t\t\t\t\t\t\t<b-icon icon=\"delete\" />\r\n\t\t\t\t\t\t\t\t\t</b-button>\r\n\t\t\t\t\t\t\t\t</b-tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</b-table-column>\r\n\t\t\t\t\t</b-table>\r\n\t\t\t\t\t<b-pagination\r\n\t\t\t\t\t\tv-if=\"totalPages > 1\"\r\n\t\t\t\t\t\t:total=\"totalClientes\"\r\n\t\t\t\t\t\t:current.sync=\"currentPage\"\r\n\t\t\t\t\t\t:per-page=\"perPage\"\r\n\t\t\t\t\t\t:rounded=\"isPaginationRounded\"\r\n\t\t\t\t\t\t:simple=\"isPaginationSimple\"\r\n\t\t\t\t\t\t:position=\"paginationPosition\"\r\n\t\t\t\t\t\t@change=\"obtenerClientes\"\r\n\t\t\t\t\t></b-pagination>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- Componente Clientes Eliminados -->\r\n\t\t<clientes-eliminados v-if=\"activeTab === 'eliminados'\" @cliente-restaurado=\"obtenerClientes\" />\r\n\t\t\r\n\t\t<b-loading :is-full-page=\"true\" v-model=\"cargando\" :can-cancel=\"false\"></b-loading>\r\n\r\n\t\t<!-- Modal para mostrar las ventas del cliente -->\r\n\t\t<b-modal :active.sync=\"isVentasModalActive\" has-modal-card trap-focus aria-role=\"dialog\" aria-modal>\r\n\t\t\t<div class=\"modal-card\" style=\"width: auto; max-width: 80vw;\">\r\n\t\t\t\t<header class=\"modal-card-head\">\r\n\t\t\t\t\t<p class=\"modal-card-title\">Ventas del Cliente: {{ clienteSeleccionadoNombre }}</p>\r\n\t\t\t\t\t<button class=\"delete\" aria-label=\"close\" @click=\"isVentasModalActive = false\"></button>\r\n\t\t\t\t</header>\r\n\t\t\t\t<section class=\"modal-card-body\">\r\n\t\t\t\t\t<div v-if=\"!clienteTieneVentas\" class=\"has-text-centered\">\r\n\t\t\t\t\t\t<div class=\"box p-6\">\r\n\t\t\t\t\t\t\t<div class=\"icon-text is-flex is-justify-content-center mb-4\">\r\n\t\t\t\t\t\t\t\t<span class=\"icon has-text-warning is-large\">\r\n\t\t\t\t\t\t\t\t\t<i class=\"mdi mdi-alert-circle mdi-36px\"></i>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<p class=\"is-size-4 mb-4\">Este cliente no tiene compras registradas</p>\r\n\t\t\t\t\t\t\t<p class=\"is-size-6 has-text-grey\">\r\n\t\t\t\t\t\t\t\tEl cliente no ha realizado ninguna compra hasta el momento.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div v-else class=\"has-text-centered\">\r\n\t\t\t\t\t\t<div class=\"box p-6\">\r\n\t\t\t\t\t\t\t<h2 class=\"title is-4 mb-4\">Resumen de Ventas</h2>\r\n\t\t\t\t\t\t\t<div class=\"columns\">\r\n\t\t\t\t\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"card\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"card-content\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p class=\"title is-5\">Total de Ventas</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p class=\"subtitle is-2 has-text-primary\">${{ ventasCliente.totalSales.toFixed(2) }}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<p class=\"mt-4 is-size-6 has-text-grey\">\r\n\t\t\t\t\t\t\t\tPara ver el detalle completo de las ventas, consulte el módulo de ventas.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t<footer class=\"modal-card-foot\">\r\n\t\t\t\t\t<button class=\"button\" @click=\"isVentasModalActive = false\">Cerrar</button>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t</b-modal>\r\n\t</section>\r\n</template>\r\n\r\n<script>\r\nimport MensajeInicial from '../Extras/MensajeInicial'\r\nimport ClientesEliminados from './Clientes-Eliminados.vue'\r\nimport apiRequest from '../../Servicios/HttpService';\r\n\r\nexport default {\r\n\tname: \"ClientesComponent\",\r\n\tcomponents: { \r\n\t\tMensajeInicial,\r\n\t\tClientesEliminados\r\n\t},\r\n\r\n\tdata: () => ({\r\n\t\tactiveTab: 'activos',\r\n\t\tcargando: false,\r\n\t\tclientes: [],\r\n\t\tisPaginated: true,\r\n\t\tisPaginationSimple: false,\r\n\t\tisPaginationRounded: true,\r\n\t\tpaginationPosition: 'bottom',\r\n\t\tdefaultSortDirection: 'asc',\r\n\t\tsortIcon: 'arrow-up',\r\n\t\tsortIconSize: 'is-medium',\r\n\t\tcurrentPage: 1,\r\n\t\tperPage: 10,\r\n\t\ttotalClientes: 0,\r\n\t\ttotalPages: 1,\r\n\t\tisVentasModalActive: false,\r\n\t\tventasCliente: null,\r\n\t\tclienteSeleccionado: null,\r\n\t\tclienteSeleccionadoNombre: '',\r\n\t\tclienteTieneVentas: false\r\n\t}),\r\n\r\n\tmounted() {\r\n\t\tthis.obtenerClientes()\r\n\t},\r\n\r\n\tmethods: {\r\n\t\tcambiarTab(tab) {\r\n\t\t\tthis.activeTab = tab\r\n\t\t\tif (tab === 'activos') {\r\n\t\t\t\tthis.obtenerClientes()\r\n\t\t\t}\r\n\t\t\t// El tab de eliminados tiene su propio componente que maneja su carga de datos\r\n\t\t},\r\n\r\n\t\tformatDate(dateString) {\r\n\t\t\tif (!dateString) return ''\r\n\t\t\tconst date = new Date(dateString)\r\n\t\t\treturn date.toLocaleDateString('es-MX', { \r\n\t\t\t\tyear: 'numeric', \r\n\t\t\t\tmonth: 'long', \r\n\t\t\t\tday: 'numeric',\r\n\t\t\t\thour: '2-digit',\r\n\t\t\t\tminute: '2-digit'\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tasync eliminar(idCliente) {\r\n\t\t\tthis.$buefy.dialog.confirm({\r\n\t\t\t\ttitle: 'Eliminar cliente',\r\n\t\t\t\tmessage: 'Seguro que quieres <b>eliminar</b> este cliente? Esta acción no se puede revertir.',\r\n\t\t\t\tconfirmText: 'Sí, eliminar',\r\n\t\t\t\tcancelText: 'Cancelar',\r\n\t\t\t\ttype: 'is-danger',\r\n\t\t\t\thasIcon: true,\r\n\t\t\t\tonConfirm: () => {\r\n\t\t\t\t\tthis.cargando = true\r\n\t\t\t\t\tapiRequest({\r\n\t\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t\t\tpath: `customers/${idCliente}`\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(resultado => {\r\n\t\t\t\t\t\t\tif (!resultado) {\r\n\t\t\t\t\t\t\t\tthis.$buefy.toast.open('Error al eliminar')\r\n\t\t\t\t\t\t\t\tthis.cargando = false\r\n\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (resultado) {\r\n\t\t\t\t\t\t\t\tthis.cargando = false\r\n\t\t\t\t\t\t\t\tthis.$buefy.toast.open({\r\n\t\t\t\t\t\t\t\t\ttype: 'is-info',\r\n\t\t\t\t\t\t\t\t\tmessage: 'Cliente eliminado.'\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\tthis.obtenerClientes()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\teditar(idCliente) {\r\n\t\t\tthis.$router.push({\r\n\t\t\t\tname: \"EditarCliente\",\r\n\t\t\t\tparams: { id: idCliente }\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tobtenerClientes() {\r\n\t\t\tthis.cargando = true\r\n\t\t\tapiRequest({\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\tpath: 'customers'\r\n\t\t\t})\r\n\t\t\t\t.then(respuesta => {\r\n\t\t\t\t\tif (respuesta && respuesta.data) {\r\n\t\t\t\t\t\t// Si la respuesta tiene formato paginado\r\n\t\t\t\t\t\tif (Array.isArray(respuesta.data.data)) {\r\n\t\t\t\t\t\t\tthis.clientes = respuesta.data.data;\r\n\t\t\t\t\t\t\tthis.totalClientes = respuesta.data.total || this.clientes.length;\r\n\t\t\t\t\t\t\tthis.totalPages = respuesta.data.totalPages || 1;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Si la respuesta es un array simple\r\n\t\t\t\t\t\t\tthis.clientes = respuesta.data;\r\n\t\t\t\t\t\t\tthis.totalClientes = this.clientes.length;\r\n\t\t\t\t\t\t\tthis.totalPages = Math.ceil(this.totalClientes / this.perPage);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.clientes = [];\r\n\t\t\t\t\t\tthis.totalClientes = 0;\r\n\t\t\t\t\t\tthis.totalPages = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cargando = false;\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.error(\"Error al obtener clientes:\", error);\r\n\t\t\t\t\tthis.clientes = [];\r\n\t\t\t\t\tthis.totalClientes = 0;\r\n\t\t\t\t\tthis.totalPages = 1;\r\n\t\t\t\t\tthis.cargando = false;\r\n\t\t\t\t\tthis.$buefy.toast.open({\r\n\t\t\t\t\t\tmessage: 'Error al cargar los clientes',\r\n\t\t\t\t\t\ttype: 'is-danger'\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t},\r\n\r\n\t\tverVentas(idCliente, nombreCliente) {\r\n\t\t\tthis.cargando = true;\r\n\t\t\tthis.clienteSeleccionado = idCliente;\r\n\t\t\tthis.clienteSeleccionadoNombre = nombreCliente || 'Cliente';\r\n\t\t\tthis.clienteTieneVentas = false;\r\n\t\t\t\r\n\t\t\tapiRequest({\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\tpath: `customers/sales-by-customer/${idCliente}`\r\n\t\t\t})\r\n\t\t\t.then(respuesta => {\r\n\t\t\t\tthis.cargando = false;\r\n\t\t\t\t\r\n\t\t\t\tif (respuesta && respuesta.data && Array.isArray(respuesta.data)) {\r\n\t\t\t\t\t// Buscamos específicamente el cliente solicitado en el array\r\n\t\t\t\t\tconst clienteVentas = respuesta.data.find(item => item.id === idCliente);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Verificamos si el cliente existe y tiene ventas\r\n\t\t\t\t\tif (clienteVentas && clienteVentas.totalSales !== null && clienteVentas.totalSales > 0) {\r\n\t\t\t\t\t\tthis.ventasCliente = clienteVentas;\r\n\t\t\t\t\t\tthis.clienteTieneVentas = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Si no tiene ventas o totalSales es null\r\n\t\t\t\t\t\tthis.ventasCliente = { id: idCliente, totalSales: 0 };\r\n\t\t\t\t\t\tthis.clienteTieneVentas = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Si la respuesta no es válida\r\n\t\t\t\t\tthis.ventasCliente = { id: idCliente, totalSales: 0 };\r\n\t\t\t\t\tthis.clienteTieneVentas = false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.isVentasModalActive = true;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error(\"Error al obtener ventas del cliente:\", error);\r\n\t\t\t\tthis.cargando = false;\r\n\t\t\t\tthis.ventasCliente = { id: idCliente, totalSales: 0 };\r\n\t\t\t\tthis.clienteTieneVentas = false;\r\n\t\t\t\tthis.$buefy.toast.open({\r\n\t\t\t\t\tmessage: 'Error al cargar las ventas del cliente',\r\n\t\t\t\t\ttype: 'is-danger'\r\n\t\t\t\t});\r\n\t\t\t\tthis.isVentasModalActive = true;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}