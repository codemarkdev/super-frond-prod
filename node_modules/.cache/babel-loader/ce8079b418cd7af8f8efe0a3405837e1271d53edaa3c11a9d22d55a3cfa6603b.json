{"ast":null,"code":"import BusquedaCliente from '../Clientes/BusquedaCliente';\nexport default {\n  name: \"DialogoTerminarVenta\",\n  props: ['totalVenta'],\n  components: {\n    BusquedaCliente\n  },\n  data: () => ({\n    pagado: \"\",\n    cambio: 0,\n    cliente: {}\n  }),\n  computed: {\n    totalFormateado() {\n      // Formatear el total con 2 decimales fijos para la visualización\n      const total = parseFloat(this.totalVenta);\n      return isNaN(total) ? \"0.00\" : total.toFixed(2);\n    },\n    cambioFormateado() {\n      // Formatear el cambio con 2 decimales fijos para la visualización\n      return this.cambio.toFixed(2);\n    }\n  },\n  mounted() {\n    this.$refs.pagado.focus();\n  },\n  methods: {\n    onSeleccionado(cliente) {\n      this.cliente = cliente;\n    },\n    calcularCambio() {\n      if (this.pagado === \"\") {\n        this.cambio = 0;\n        return;\n      }\n\n      // Convertir a números\n      const pagadoNum = parseFloat(this.pagado);\n      const totalNum = parseFloat(this.totalVenta);\n\n      // Usar Math.round para evitar problemas de precisión de punto flotante\n      // Multiplicamos por 100, redondeamos, y luego dividimos por 100\n      this.cambio = Math.round((pagadoNum - totalNum) * 100) / 100;\n    },\n    terminarVenta() {\n      if (this.pagado === \"\" || parseFloat(this.pagado) < parseFloat(this.totalVenta)) {\n        this.$buefy.toast.open({\n          type: 'is-danger',\n          message: 'Debes colocar el total pagado.'\n        });\n        return;\n      }\n\n      // Ensure cliente object exists with at least an empty structure\n      const clienteData = Object.keys(this.cliente).length > 0 ? this.cliente : {\n        id: null,\n        name: ''\n      };\n      let payload = {\n        tipo: 'venta',\n        pagado: this.pagado,\n        cambio: this.cambio,\n        cliente: clienteData\n      };\n      this.$emit(\"terminar\", payload);\n    }\n  }\n};","map":{"version":3,"names":["BusquedaCliente","name","props","components","data","pagado","cambio","cliente","computed","totalFormateado","total","parseFloat","totalVenta","isNaN","toFixed","cambioFormateado","mounted","$refs","focus","methods","onSeleccionado","calcularCambio","pagadoNum","totalNum","Math","round","terminarVenta","$buefy","toast","open","type","message","clienteData","Object","keys","length","id","payload","tipo","$emit"],"sources":["src/components/Ventas/DialogoTerminarVenta.vue"],"sourcesContent":["<template>\r\n\t<form action=\"\">\r\n\t\t<div class=\"modal-card\" style=\"width: 600px\">\r\n\t\t\t<header class=\"modal-card-head has-background-success\">\r\n\t\t\t\t<p class=\"modal-card-title has-text-white\">Terminar venta</p>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclass=\"delete\"\r\n\t\t\t\t\t@click=\"$emit('close', 'venta')\"/>\r\n\t\t\t</header>\r\n\t\t\t<section class=\"modal-card-body\">\r\n\t\t\t\t<p class=\"is-size-1 has-text-weight-bold\">Total ${{ totalFormateado }}</p>\r\n\t\t\t\t<busqueda-cliente @seleccionado=\"onSeleccionado\" />\r\n\t\t\t\t<b-field label=\"El cliente paga con\" >\r\n\t\t\t\t\t<b-input step=\"any\" ref=\"pagado\" icon=\"currency-usd\" type=\"number\" placeholder=\"Monto pagado\" v-model=\"pagado\" @input=\"calcularCambio\" @keyup.enter.native=\"terminarVenta\" size=\"is-medium\"></b-input>\r\n\t\t\t\t</b-field>\r\n\t\t\t\t<p class=\"is-size-1 has-text-weight-bold\">Cambio ${{ cambioFormateado }}</p>\r\n\t\t\t</section>\r\n\t\t\t<footer class=\"modal-card-foot\">\r\n\t\t\t\t<b-button\r\n\t\t\t\t\tlabel=\"Cancelar\"\r\n\t\t\t\t\ticon-left=\"cancel\"\r\n\t\t\t\t\tsize=\"is-medium\"\r\n\t\t\t\t\t@click=\"$emit('close', 'venta')\" />\r\n\t\t\t\t<b-button\r\n\t\t\t\t\tlabel=\"Terminar venta\"\r\n\t\t\t\t\ttype=\"is-success\"\r\n\t\t\t\t\ticon-left=\"check\"\r\n\t\t\t\t\tsize=\"is-medium\"\r\n\t\t\t\t\t@click=\"terminarVenta\" />\r\n\t\t\t</footer>\r\n\t\t</div>\r\n\t</form>\r\n</template>\r\n<script>\r\n\timport BusquedaCliente from '../Clientes/BusquedaCliente'\r\n\r\n\texport default{\r\n\t\tname:\"DialogoTerminarVenta\",\r\n\t\tprops: ['totalVenta'],\r\n\t\tcomponents: { BusquedaCliente },\r\n\r\n\t\tdata:()=>({\r\n\t\t\tpagado: \"\",\r\n\t\t\tcambio: 0,\r\n\t\t\tcliente: {}\r\n\t\t}),\r\n\r\n\t\tcomputed: {\r\n\t\t\ttotalFormateado() {\r\n\t\t\t\t// Formatear el total con 2 decimales fijos para la visualización\r\n\t\t\t\tconst total = parseFloat(this.totalVenta);\r\n\t\t\t\treturn isNaN(total) ? \"0.00\" : total.toFixed(2);\r\n\t\t\t},\r\n\t\t\tcambioFormateado() {\r\n\t\t\t\t// Formatear el cambio con 2 decimales fijos para la visualización\r\n\t\t\t\treturn this.cambio.toFixed(2);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmounted(){\r\n\t\t\tthis.$refs.pagado.focus()\r\n\t\t},\r\n\r\n\t\tmethods:{\r\n\t\t\tonSeleccionado(cliente){\r\n\t\t\t\tthis.cliente = cliente\r\n\t\t\t},\r\n\r\n\t\t\tcalcularCambio(){\r\n\t\t\t\tif (this.pagado === \"\") {\r\n\t\t\t\t\tthis.cambio = 0;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Convertir a números\r\n\t\t\t\tconst pagadoNum = parseFloat(this.pagado);\r\n\t\t\t\tconst totalNum = parseFloat(this.totalVenta);\r\n\t\t\t\t\r\n\t\t\t\t// Usar Math.round para evitar problemas de precisión de punto flotante\r\n\t\t\t\t// Multiplicamos por 100, redondeamos, y luego dividimos por 100\r\n\t\t\t\tthis.cambio = Math.round((pagadoNum - totalNum) * 100) / 100;\r\n\t\t\t},\r\n\r\n\t\t\tterminarVenta(){\r\n\t\t\t\tif(this.pagado === \"\" || parseFloat(this.pagado) < parseFloat(this.totalVenta)) {\r\n\t\t\t\t\tthis.$buefy.toast.open({\r\n                         type: 'is-danger',\r\n                         message: 'Debes colocar el total pagado.'\r\n                    })\r\n                    return\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Ensure cliente object exists with at least an empty structure\r\n\t\t\t\tconst clienteData = Object.keys(this.cliente).length > 0 \r\n\t\t\t\t\t? this.cliente \r\n\t\t\t\t\t: { id: null, name: '' };\r\n\r\n\t\t\t\tlet payload = {\r\n\t\t\t\t\ttipo: 'venta',\r\n\t\t\t\t\tpagado: this.pagado,\r\n\t\t\t\t\tcambio: this.cambio,\r\n\t\t\t\t\tcliente: clienteData\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$emit(\"terminar\", payload)\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n"],"mappings":"AAmCA,OAAAA,eAAA;AAEA;EACAC,IAAA;EACAC,KAAA;EACAC,UAAA;IAAAH;EAAA;EAEAI,IAAA,EAAAA,CAAA;IACAC,MAAA;IACAC,MAAA;IACAC,OAAA;EACA;EAEAC,QAAA;IACAC,gBAAA;MACA;MACA,MAAAC,KAAA,GAAAC,UAAA,MAAAC,UAAA;MACA,OAAAC,KAAA,CAAAH,KAAA,aAAAA,KAAA,CAAAI,OAAA;IACA;IACAC,iBAAA;MACA;MACA,YAAAT,MAAA,CAAAQ,OAAA;IACA;EACA;EAEAE,QAAA;IACA,KAAAC,KAAA,CAAAZ,MAAA,CAAAa,KAAA;EACA;EAEAC,OAAA;IACAC,eAAAb,OAAA;MACA,KAAAA,OAAA,GAAAA,OAAA;IACA;IAEAc,eAAA;MACA,SAAAhB,MAAA;QACA,KAAAC,MAAA;QACA;MACA;;MAEA;MACA,MAAAgB,SAAA,GAAAX,UAAA,MAAAN,MAAA;MACA,MAAAkB,QAAA,GAAAZ,UAAA,MAAAC,UAAA;;MAEA;MACA;MACA,KAAAN,MAAA,GAAAkB,IAAA,CAAAC,KAAA,EAAAH,SAAA,GAAAC,QAAA;IACA;IAEAG,cAAA;MACA,SAAArB,MAAA,WAAAM,UAAA,MAAAN,MAAA,IAAAM,UAAA,MAAAC,UAAA;QACA,KAAAe,MAAA,CAAAC,KAAA,CAAAC,IAAA;UACAC,IAAA;UACAC,OAAA;QACA;QACA;MACA;;MAEA;MACA,MAAAC,WAAA,GAAAC,MAAA,CAAAC,IAAA,MAAA3B,OAAA,EAAA4B,MAAA,OACA,KAAA5B,OAAA,GACA;QAAA6B,EAAA;QAAAnC,IAAA;MAAA;MAEA,IAAAoC,OAAA;QACAC,IAAA;QACAjC,MAAA,OAAAA,MAAA;QACAC,MAAA,OAAAA,MAAA;QACAC,OAAA,EAAAyB;MACA;MAEA,KAAAO,KAAA,aAAAF,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}