{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport Chart from 'chart.js';\nconst RUTA = 'http://localhost/pos/api';\nconst MESES = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\nconst Utiles = {\n  resetearGrafica(contenedor, grafica, id) {\n    const $contenedorGrafica = document.querySelector(contenedor);\n    let $grafica = document.querySelector(grafica);\n    $grafica.remove();\n    let $nuevaGrafica = document.createElement(\"canvas\");\n    $nuevaGrafica.setAttribute(\"id\", id);\n    $contenedorGrafica.appendChild($nuevaGrafica);\n  },\n  generarGrafica(tipo, array, contenedor, grafica, id) {\n    this.resetearGrafica(contenedor, grafica, id);\n    const labels = this.generarEtiquetas(array);\n    const totales = this.generarValores(array);\n    const data = {\n      labels: labels,\n      datasets: [{\n        label: \"Total \",\n        data: totales,\n        backgroundColor: this.generarColores(labels.length),\n        fill: false,\n        tension: 0.1,\n        borderWidth: 3\n      }]\n    };\n    var ctx = document.getElementById(id).getContext('2d');\n    var options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    };\n    new Chart(ctx, {\n      responsive: true,\n      type: tipo,\n      data: data,\n      options: options\n    });\n  },\n  generarColores(tamanio) {\n    const colores = [];\n    for (let i = 0; i < tamanio; i++) {\n      colores.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n    }\n    return colores;\n  },\n  cambiarNumeroANombreMes(array) {\n    for (let i = 0; i < array.length; i++) {\n      let pos = array[i].mes;\n      array[i].mes = MESES[pos - 1];\n    }\n    return array;\n  },\n  generarEtiquetas(array) {\n    const labels = array.map(elemento => {\n      return elemento[Object.keys(elemento)[0]];\n    });\n    return labels;\n  },\n  generarValores(array) {\n    const totales = array.map(elemento => {\n      return elemento.totalVentas;\n    });\n    return totales;\n  },\n  validarDatos(datos) {\n    let errores = [];\n    for (let [clave, valor] of Object.entries(datos)) {\n      if (!valor) errores.push(\"Debes colocar el valor de \" + clave);\n    }\n    return errores;\n  },\n  calcularTotalGanancia(ventas) {\n    let total = 0;\n    ventas.forEach(venta => {\n      venta.productos.forEach(producto => {\n        total += parseFloat(producto.cantidad * producto.precio) - parseFloat(producto.cantidad * producto.precioCompra);\n      });\n    });\n    return total;\n  },\n  calcularProductosVendidos(ventas) {\n    let total = 0;\n    ventas.forEach(venta => {\n      venta.productos.forEach(producto => {\n        total += parseFloat(producto.cantidad);\n      });\n    });\n    return total;\n  },\n  regresarRuta() {\n    return RUTA;\n  }\n};\nexport default Utiles;","map":{"version":3,"names":["Chart","RUTA","MESES","Utiles","resetearGrafica","contenedor","grafica","id","$contenedorGrafica","document","querySelector","$grafica","remove","$nuevaGrafica","createElement","setAttribute","appendChild","generarGrafica","tipo","array","labels","generarEtiquetas","totales","generarValores","data","datasets","label","backgroundColor","generarColores","length","fill","tension","borderWidth","ctx","getElementById","getContext","options","responsive","maintainAspectRatio","scales","y","beginAtZero","type","tamanio","colores","i","push","Math","floor","random","toString","cambiarNumeroANombreMes","pos","mes","map","elemento","Object","keys","totalVentas","validarDatos","datos","errores","clave","valor","entries","calcularTotalGanancia","ventas","total","forEach","venta","productos","producto","parseFloat","cantidad","precio","precioCompra","calcularProductosVendidos","regresarRuta"],"sources":["/home/kira/DESKTOP/git/frond/Pos/src/Servicios/Utiles.js"],"sourcesContent":["   import Chart from 'chart.js'\r\n   const RUTA = 'http://localhost/pos/api' \r\n   const MESES = [\"Enero\" ,\"Febrero\" ,\"Marzo\" ,\"Abril\" ,\"Mayo\" ,\"Junio\" ,\"Julio\" ,\"Agosto\" ,\"Septiembre\" ,\"Octubre\" ,\"Noviembre\" ,\"Diciembre\"]\r\n\r\n   const Utiles = {\r\n\r\n   resetearGrafica(contenedor, grafica, id){\r\n      const $contenedorGrafica = document.querySelector(contenedor)\r\n      let $grafica = document.querySelector(grafica)\r\n      $grafica.remove()\r\n      let $nuevaGrafica = document.createElement(\"canvas\")\r\n      $nuevaGrafica.setAttribute(\"id\",id)\r\n      $contenedorGrafica.appendChild($nuevaGrafica)\r\n   },\r\n\r\n   generarGrafica(tipo, array, contenedor, grafica, id){\r\n      this.resetearGrafica(contenedor, grafica, id)\r\n\r\n      const labels = this.generarEtiquetas(array)\r\n      const totales = this.generarValores(array)\r\n\r\n               \r\n      const data = {\r\n         labels: labels,\r\n         datasets: [{\r\n            label: \"Total \",\r\n            data: totales,\r\n            backgroundColor: this.generarColores(labels.length),\r\n            fill: false,\r\n            tension: 0.1,\r\n            borderWidth: 3\r\n         }]\r\n      }\r\n\r\n      var ctx = document.getElementById(id).getContext('2d');\r\n\r\n      var options = {\r\n         responsive: true,\r\n         maintainAspectRatio: false,\r\n         scales: {\r\n            y: {\r\n               beginAtZero: true\r\n            }\r\n         }\r\n      };\r\n               \r\n      new Chart(ctx, {\r\n         responsive: true,\r\n         type: tipo,\r\n         data: data,\r\n         options: options\r\n      });\r\n   },\r\n\r\n   generarColores(tamanio){\r\n      const colores = []\r\n      for(let i = 0; i<tamanio; i++){\r\n         colores.push(\"#\" + Math.floor(Math.random()*16777215).toString(16))\r\n      }\r\n\r\n      return colores\r\n   },\r\n      \r\n   cambiarNumeroANombreMes(array){\r\n      for(let i = 0; i < array.length; i++){\r\n          let pos = array[i].mes \r\n          array[i].mes = MESES[pos-1]\r\n       }\r\n       return array\r\n   },\r\n\r\n    generarEtiquetas(array){\r\n      const labels = array.map(elemento => {\r\n       return elemento[Object.keys(elemento)[0]]\r\n    })\r\n      return labels\r\n   },\r\n\r\n   generarValores(array){\r\n      const totales = array.map(elemento => {\r\n       return elemento.totalVentas\r\n    })\r\n      return totales\r\n   },\r\n\r\n   validarDatos(datos){\r\n      let errores = []\r\n      for (let [clave, valor] of Object.entries(datos)) {\r\n       if(!valor) errores.push(\"Debes colocar el valor de \" + clave)\r\n    }\r\n   return errores\r\n   },\r\n\r\n   calcularTotalGanancia(ventas) {\r\n     let total = 0\r\n     ventas.forEach(venta =>{\r\n      venta.productos.forEach(producto => {\r\n       total += parseFloat(producto.cantidad * producto.precio) - parseFloat(producto.cantidad * producto.precioCompra)\r\n    })\r\n   })\r\n     return total\r\n   },\r\n\r\n   calcularProductosVendidos(ventas){\r\n     let total = 0\r\n     ventas.forEach(venta =>{\r\n      venta.productos.forEach(producto => {\r\n       total+= parseFloat(producto.cantidad)\r\n    })\r\n   })\r\n     return total\r\n   },\r\n\r\n   regresarRuta(){\r\n     return RUTA\r\n   }\r\n   }\r\n\r\n   export default Utiles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}