{"ast":null,"code":"import EncabezadoComponent from './components/EncabezadoComponent';\nimport InicioSesion from './components/Usuarios/InicioSesion';\nimport { formatLocalDateTime } from './helpers/formatDate';\nimport AyudanteSesion from './Servicios/AyudanteSesion';\nimport apiRequest from './Servicios/HttpService';\nexport default {\n  name: \"App\",\n  components: {\n    EncabezadoComponent,\n    InicioSesion\n  },\n  data: () => ({\n    logeado: false\n  }),\n  mounted() {\n    const log = AyudanteSesion.verificarSesion();\n    this.logeado = log;\n    console.log(this.logeado);\n\n    // Solo registramos la apertura de caja si el usuario está logueado\n    if (this.logeado) {\n      // Verificamos si el usuario es administrador\n      const userData = AyudanteSesion.obtenerDatosSesion();\n      const esAdmin = userData.rol === 'Admin';\n\n      // Solo abrimos caja si NO es administrador\n      if (!esAdmin) {\n        this.registerCashOpen();\n      } else {\n        console.log(\"Usuario es administrador, no se abre caja\");\n      }\n    }\n  },\n  methods: {\n    onLogin(resultado) {\n      console.log(resultado);\n      if (resultado.estado) {\n        AyudanteSesion.establecerSesion(resultado.usuario);\n        this.logeado = AyudanteSesion.verificarSesion();\n\n        // Verificamos si el usuario es administrador\n        const userData = AyudanteSesion.obtenerDatosSesion();\n        const esAdmin = userData.rol === 'Admin';\n\n        // Solo abrimos caja si NO es administrador\n        if (!esAdmin) {\n          this.registerCashOpen();\n        } else {\n          console.log(\"Usuario es administrador, no se abre caja\");\n        }\n      }\n    },\n    async registerCashOpen() {\n      try {\n        const {\n          id\n        } = AyudanteSesion.obtenerDatosSesion();\n        const today = formatLocalDateTime();\n        const respCash = await apiRequest({\n          method: 'get',\n          path: `cash-register/details/${id}/${today}`\n        });\n        console.log('resp', respCash);\n        if (respCash.data.length == 0 || respCash.data.state == 'open') {\n          const {\n            status\n          } = await apiRequest({\n            method: 'POST',\n            path: `cash-register/open/${id}`,\n            data: {\n              initialCash: 0,\n              state: \"open\"\n            }\n          });\n          if (status === 201) {\n            this.$buefy.toast.open({\n              message: 'Caja abierta exitosamente',\n              type: 'is-success',\n              duration: 5000\n            });\n          } else {\n            throw new Error('Error al abrir la caja');\n          }\n        }\n      } catch (error) {\n        console.error(\"Error al abrir la caja:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["EncabezadoComponent","InicioSesion","formatLocalDateTime","AyudanteSesion","apiRequest","name","components","data","logeado","mounted","log","verificarSesion","console","userData","obtenerDatosSesion","esAdmin","rol","registerCashOpen","methods","onLogin","resultado","estado","establecerSesion","usuario","id","today","respCash","method","path","length","state","status","initialCash","$buefy","toast","open","message","type","duration","Error","error"],"sources":["src/App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <inicio-sesion @login=\"onLogin\" v-if=\"!logeado\"/>\r\n    <div v-if=\"logeado\">\r\n      <encabezado-component />\r\n      <div class=\"container\" style=\"margin-top: 6rem;\">\r\n        <router-view/>\r\n      </div>\r\n    </div>    \r\n  </div>\r\n</template>\r\n<script>\r\n  import EncabezadoComponent from './components/EncabezadoComponent'\r\n  import InicioSesion from './components/Usuarios/InicioSesion'\r\n  import { formatLocalDateTime } from './helpers/formatDate'\r\n  import AyudanteSesion from './Servicios/AyudanteSesion'\r\n  import apiRequest from './Servicios/HttpService'\r\n\r\n  export default {\r\n    name: \"App\", \r\n    components: {\r\n      EncabezadoComponent,\r\n      InicioSesion\r\n    },\r\n\r\n    data:()=>({\r\n      logeado: false\r\n    }),\r\n\r\n    mounted(){\r\n      const log = AyudanteSesion.verificarSesion()\r\n      this.logeado = log\r\n      console.log(this.logeado)\r\n      \r\n      // Solo registramos la apertura de caja si el usuario está logueado\r\n      if (this.logeado) {\r\n        // Verificamos si el usuario es administrador\r\n        const userData = AyudanteSesion.obtenerDatosSesion();\r\n        const esAdmin = userData.rol === 'Admin';\r\n        \r\n        // Solo abrimos caja si NO es administrador\r\n        if (!esAdmin) {\r\n          this.registerCashOpen();\r\n        } else {\r\n          console.log(\"Usuario es administrador, no se abre caja\");\r\n        }\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      onLogin(resultado){\r\n        console.log(resultado)\r\n        if(resultado.estado) {\r\n          AyudanteSesion.establecerSesion(resultado.usuario)\r\n          this.logeado = AyudanteSesion.verificarSesion()\r\n          \r\n          // Verificamos si el usuario es administrador\r\n          const userData = AyudanteSesion.obtenerDatosSesion();\r\n          const esAdmin = userData.rol === 'Admin';\r\n          \r\n          // Solo abrimos caja si NO es administrador\r\n          if (!esAdmin) {\r\n            this.registerCashOpen();\r\n          } else {\r\n            console.log(\"Usuario es administrador, no se abre caja\");\r\n          }\r\n        }\r\n      },\r\n\r\n      async registerCashOpen() {\r\n        try {\r\n          const {id} = AyudanteSesion.obtenerDatosSesion()\r\n        \r\n          const today = formatLocalDateTime()\r\n          const respCash = await apiRequest({\r\n            method: 'get',\r\n            path: `cash-register/details/${id}/${today}`\r\n          })\r\n          \r\n          console.log('resp', respCash)\r\n          if (respCash.data.length == 0 || respCash.data.state == 'open') {\r\n            \r\n            const { status } = await apiRequest({\r\n              method: 'POST',\r\n              path: `cash-register/open/${id}`,\r\n              data: {\r\n                initialCash: 0,\r\n                state: \"open\"\r\n              }\r\n            });\r\n            \r\n            if (status === 201) {\r\n              this.$buefy.toast.open({\r\n                message: 'Caja abierta exitosamente',\r\n                type: 'is-success',\r\n                duration: 5000\r\n              });\r\n            }\r\n            else {\r\n              throw new Error('Error al abrir la caja');\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error al abrir la caja:\", error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>"],"mappings":"AAYA,OAAAA,mBAAA;AACA,OAAAC,YAAA;AACA,SAAAC,mBAAA;AACA,OAAAC,cAAA;AACA,OAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAN,mBAAA;IACAC;EACA;EAEAM,IAAA,EAAAA,CAAA;IACAC,OAAA;EACA;EAEAC,QAAA;IACA,MAAAC,GAAA,GAAAP,cAAA,CAAAQ,eAAA;IACA,KAAAH,OAAA,GAAAE,GAAA;IACAE,OAAA,CAAAF,GAAA,MAAAF,OAAA;;IAEA;IACA,SAAAA,OAAA;MACA;MACA,MAAAK,QAAA,GAAAV,cAAA,CAAAW,kBAAA;MACA,MAAAC,OAAA,GAAAF,QAAA,CAAAG,GAAA;;MAEA;MACA,KAAAD,OAAA;QACA,KAAAE,gBAAA;MACA;QACAL,OAAA,CAAAF,GAAA;MACA;IACA;EACA;EAEAQ,OAAA;IACAC,QAAAC,SAAA;MACAR,OAAA,CAAAF,GAAA,CAAAU,SAAA;MACA,IAAAA,SAAA,CAAAC,MAAA;QACAlB,cAAA,CAAAmB,gBAAA,CAAAF,SAAA,CAAAG,OAAA;QACA,KAAAf,OAAA,GAAAL,cAAA,CAAAQ,eAAA;;QAEA;QACA,MAAAE,QAAA,GAAAV,cAAA,CAAAW,kBAAA;QACA,MAAAC,OAAA,GAAAF,QAAA,CAAAG,GAAA;;QAEA;QACA,KAAAD,OAAA;UACA,KAAAE,gBAAA;QACA;UACAL,OAAA,CAAAF,GAAA;QACA;MACA;IACA;IAEA,MAAAO,iBAAA;MACA;QACA;UAAAO;QAAA,IAAArB,cAAA,CAAAW,kBAAA;QAEA,MAAAW,KAAA,GAAAvB,mBAAA;QACA,MAAAwB,QAAA,SAAAtB,UAAA;UACAuB,MAAA;UACAC,IAAA,2BAAAJ,EAAA,IAAAC,KAAA;QACA;QAEAb,OAAA,CAAAF,GAAA,SAAAgB,QAAA;QACA,IAAAA,QAAA,CAAAnB,IAAA,CAAAsB,MAAA,SAAAH,QAAA,CAAAnB,IAAA,CAAAuB,KAAA;UAEA;YAAAC;UAAA,UAAA3B,UAAA;YACAuB,MAAA;YACAC,IAAA,wBAAAJ,EAAA;YACAjB,IAAA;cACAyB,WAAA;cACAF,KAAA;YACA;UACA;UAEA,IAAAC,MAAA;YACA,KAAAE,MAAA,CAAAC,KAAA,CAAAC,IAAA;cACAC,OAAA;cACAC,IAAA;cACAC,QAAA;YACA;UACA,OACA;YACA,UAAAC,KAAA;UACA;QACA;MACA,SAAAC,KAAA;QACA5B,OAAA,CAAA4B,KAAA,4BAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}