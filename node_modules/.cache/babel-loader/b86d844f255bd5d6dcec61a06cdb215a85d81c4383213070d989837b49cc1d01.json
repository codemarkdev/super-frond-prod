{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport apiRequest from '../../Servicios/HttpService';\nexport default {\n  name: \"BuscarProducto\",\n  props: {\n    modoBusqueda: {\n      type: String,\n      default: 'codigo'\n    }\n  },\n  data: () => ({\n    producto: \"\",\n    productosEncontrados: [],\n    cargando: false,\n    timeoutBusqueda: null\n  }),\n  mounted() {\n    if (this.$el.offsetParent !== null) {\n      // Verifica si el componente es visible\n      this.forceFocus();\n    }\n  },\n  methods: {\n    forceFocus() {\n      // 1. Esperar a que el componente esté renderizado\n      this.$nextTick(() => {\n        const input = this.$refs.autocompleteRef?.$el?.querySelector('input');\n        if (!input) return;\n\n        // 2. Resetear estado del input\n        input.blur();\n        input.readOnly = true;\n        input.style.opacity = '0.99'; // Fuerza repaint\n\n        // 3. Enfoque con 3 capas de seguridad\n        setTimeout(() => {\n          input.readOnly = false;\n          input.focus();\n          input.select();\n\n          // 4. Verificar si tomó el foco\n          console.log(\"Elemento activo:\", document.activeElement === input);\n\n          // 5. Forzar estilo de cursor (para navegadores problemáticos)\n          input.style.cssText = `\n          caret-color: #4287f5 !important;\n          animation: cursor-blink 1s step-end infinite !important;\n        `;\n        }, 300);\n      });\n    },\n    onInput() {\n      clearTimeout(this.timeoutBusqueda);\n      this.timeoutBusqueda = setTimeout(() => {\n        this.buscarProductos();\n      }, this.modoBusqueda === 'codigo' ? 200 : 100);\n    },\n    async buscarProductos() {\n      if (!this.producto.trim()) {\n        this.productosEncontrados = [];\n        return;\n      }\n      this.cargando = true;\n      try {\n        if (this.modoBusqueda === 'codigo') {\n          const response = await apiRequest({\n            method: 'GET',\n            path: `products/findByCode/${encodeURIComponent(this.producto)}`\n          });\n          if (response.data && response.data.id) {\n            this.productosEncontrados = [response.data];\n            this.autoseleccionarSiExiste();\n          } else {\n            this.productosEncontrados = [];\n          }\n        } else {\n          const response = await apiRequest({\n            method: 'GET',\n            path: `products/search/${encodeURIComponent(this.producto)}`\n          });\n          this.productosEncontrados = response.data ? response.data.filter(item => !item.isDeleted) : [];\n        }\n      } catch (error) {\n        console.error(\"Error en búsqueda:\", error);\n        this.productosEncontrados = [];\n      } finally {\n        this.cargando = false;\n      }\n    },\n    autoseleccionarSiExiste() {\n      if (this.modoBusqueda === 'codigo' && this.productosFiltrados.length === 1 && this.productosFiltrados[0]?.id) {\n        setTimeout(() => {\n          this.manejarSeleccion(this.productosFiltrados[0]);\n        }, 50);\n      }\n    },\n    seleccionarProducto(opcion) {\n      if (!opcion) return;\n      this.manejarSeleccion(opcion);\n    },\n    manejarEnter() {\n      if (this.modoBusqueda === 'codigo' && this.productosFiltrados.length === 1 && this.productosFiltrados[0]?.id) {\n        this.manejarSeleccion(this.productosFiltrados[0]);\n      } else {\n        this.$nextTick(() => {\n          this.producto = '';\n          this.ponerFocus();\n        });\n      }\n    },\n    manejarSeleccion(opcion) {\n      this.$emit(\"seleccionado\", opcion);\n      setTimeout(() => {\n        this.producto = '';\n        this.ponerFocus();\n      }, 300); // 300 ms de delay\n    },\n    limpiarInput() {\n      this.producto = '';\n      this.$nextTick(() => {\n        this.productosEncontrados = []; // Limpiar sugerencias\n        const input = document.querySelector(\"#producto\");\n        if (input) input.focus();\n      });\n    },\n    ponerFocus() {\n      this.$nextTick(() => {\n        const input = document.querySelector(\"#producto\");\n        if (input) input.focus();\n      });\n    }\n  },\n  computed: {\n    productosFiltrados() {\n      if (this.modoBusqueda === 'codigo') return this.productosEncontrados;\n      return this.productosEncontrados.filter(opcion => {\n        const busqueda = this.producto.toLowerCase();\n        return opcion?.name?.toLowerCase().includes(busqueda) || opcion?.code?.toLowerCase().includes(busqueda);\n      });\n    }\n  },\n  watch: {\n    modoBusqueda() {\n      this.limpiarInput();\n      this.productosEncontrados = [];\n    }\n  }\n};","map":{"version":3,"names":["apiRequest","name","props","modoBusqueda","type","String","default","data","producto","productosEncontrados","cargando","timeoutBusqueda","mounted","$el","offsetParent","forceFocus","methods","$nextTick","input","$refs","autocompleteRef","querySelector","blur","readOnly","style","opacity","setTimeout","focus","select","console","log","document","activeElement","cssText","onInput","clearTimeout","buscarProductos","trim","response","method","path","encodeURIComponent","id","autoseleccionarSiExiste","filter","item","isDeleted","error","productosFiltrados","length","manejarSeleccion","seleccionarProducto","opcion","manejarEnter","ponerFocus","$emit","limpiarInput","computed","busqueda","toLowerCase","includes","code","watch"],"sources":["src/components/Inventario/BuscarProducto.vue"],"sourcesContent":["<template>\r\n\t<b-field :label=\"modoBusqueda === 'codigo' ? 'Escanear código de barras' : 'Buscar por nombre'\">\r\n\t\t<b-autocomplete \r\n\t\tv-model=\"producto\" \r\n\t\tid=\"producto\"\r\n\t\t:placeholder=\"modoBusqueda === 'codigo' ? 'Escanea o escribe el código exacto' : 'Escribe el nombre o código del producto'\"\r\n\t\t:data=\"productosFiltrados\" \r\n\t\tref=\"autocompleteRef\"\r\n\t\tfield=\"name\" \r\n\t\t@input=\"onInput\"\r\n\t\t@select=\"seleccionarProducto\" \r\n\t\t@keyup.enter.native=\"() => setTimeout(manejarEnter, 600)\" size=\"is-large\"\r\n\t\t:loading=\"cargando\">\r\n\t\t\t<template #empty>\r\n\t\t\t\t<div class=\"notification is-warning is-light\">\r\n\t\t\t\t\t{{ modoBusqueda === 'codigo' ? 'Código no encontrado' : 'No hay coincidencias' }}\r\n\t\t\t\t</div>\r\n\t\t\t</template>\r\n\t\t</b-autocomplete>\r\n\t</b-field>\r\n</template>\r\n\r\n<script>\r\nimport apiRequest from '../../Servicios/HttpService';\r\n\r\nexport default {\r\n\tname: \"BuscarProducto\",\r\n\tprops: {\r\n\t\tmodoBusqueda: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'codigo'\r\n\t\t}\r\n\t},\r\n\tdata: () => ({\r\n\t\tproducto: \"\",\r\n\t\tproductosEncontrados: [],\r\n\t\tcargando: false,\r\n\t\ttimeoutBusqueda: null\r\n\t}),\r\n\r\n\tmounted() {\r\n\t\tif (this.$el.offsetParent !== null) { // Verifica si el componente es visible\r\n    this.forceFocus();\r\n  }\r\n\t},\r\n\r\n\tmethods: {\r\n\t\tforceFocus() {\r\n\t\t\t// 1. Esperar a que el componente esté renderizado\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\tconst input = this.$refs.autocompleteRef?.$el?.querySelector('input');\r\n\t\t\t\tif (!input) return;\r\n\r\n\t\t\t\t// 2. Resetear estado del input\r\n\t\t\t\tinput.blur();\r\n\t\t\t\tinput.readOnly = true;\r\n\t\t\t\tinput.style.opacity = '0.99'; // Fuerza repaint\r\n\r\n\t\t\t\t// 3. Enfoque con 3 capas de seguridad\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tinput.readOnly = false;\r\n\t\t\t\t\tinput.focus();\r\n\t\t\t\t\tinput.select();\r\n\r\n\t\t\t\t\t// 4. Verificar si tomó el foco\r\n\t\t\t\t\tconsole.log(\"Elemento activo:\", document.activeElement === input);\r\n\r\n\t\t\t\t\t// 5. Forzar estilo de cursor (para navegadores problemáticos)\r\n\t\t\t\t\tinput.style.cssText = `\r\n          caret-color: #4287f5 !important;\r\n          animation: cursor-blink 1s step-end infinite !important;\r\n        `;\r\n\t\t\t\t}, 300);\r\n\t\t\t});\r\n\t\t},\r\n\t\tonInput() {\r\n\t\t\tclearTimeout(this.timeoutBusqueda);\r\n\t\t\tthis.timeoutBusqueda = setTimeout(() => {\r\n\t\t\t\tthis.buscarProductos();\r\n\t\t\t}, this.modoBusqueda === 'codigo' ? 200 : 100);\r\n\t\t},\r\n\r\n\t\tasync buscarProductos() {\r\n\t\t\tif (!this.producto.trim()) {\r\n\t\t\t\tthis.productosEncontrados = [];\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.cargando = true;\r\n\t\t\ttry {\r\n\t\t\t\tif (this.modoBusqueda === 'codigo') {\r\n\t\t\t\t\tconst response = await apiRequest({\r\n\t\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\t\tpath: `products/findByCode/${encodeURIComponent(this.producto)}`\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (response.data && response.data.id) {\r\n\t\t\t\t\t\tthis.productosEncontrados = [response.data];\r\n\t\t\t\t\t\tthis.autoseleccionarSiExiste();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.productosEncontrados = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst response = await apiRequest({\r\n\t\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\t\tpath: `products/search/${encodeURIComponent(this.producto)}`\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.productosEncontrados = response.data ?\r\n\t\t\t\t\t\tresponse.data.filter(item => !item.isDeleted) : [];\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error en búsqueda:\", error);\r\n\t\t\t\tthis.productosEncontrados = [];\r\n\t\t\t} finally {\r\n\t\t\t\tthis.cargando = false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tautoseleccionarSiExiste() {\r\n\t\t\tif (this.modoBusqueda === 'codigo' &&\r\n\t\t\t\tthis.productosFiltrados.length === 1 &&\r\n\t\t\t\tthis.productosFiltrados[0]?.id) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.manejarSeleccion(this.productosFiltrados[0]);\r\n\t\t\t\t}, 50);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tseleccionarProducto(opcion) {\r\n\t\t\tif (!opcion) return;\r\n\t\t\tthis.manejarSeleccion(opcion);\r\n\t\t},\r\n\r\n\t\tmanejarEnter() {\r\n\t\t\tif (this.modoBusqueda === 'codigo' &&\r\n\t\t\t\tthis.productosFiltrados.length === 1 &&\r\n\t\t\t\tthis.productosFiltrados[0]?.id) {\r\n\t\t\t\tthis.manejarSeleccion(this.productosFiltrados[0]);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\tthis.producto = '';\r\n\t\t\t\t\tthis.ponerFocus();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tmanejarSeleccion(opcion) {\r\n\t\t\tthis.$emit(\"seleccionado\", opcion);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.producto = '';\r\n\t\t\t\tthis.ponerFocus();\r\n\t\t\t}, 300) // 300 ms de delay\r\n\t\t},\r\n\r\n\t\tlimpiarInput() {\r\n\t\t\tthis.producto = '';\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\tthis.productosEncontrados = []; // Limpiar sugerencias\r\n\t\t\t\tconst input = document.querySelector(\"#producto\");\r\n\t\t\t\tif (input) input.focus();\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tponerFocus() {\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\tconst input = document.querySelector(\"#producto\");\r\n\t\t\t\tif (input) input.focus();\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\tproductosFiltrados() {\r\n\t\t\tif (this.modoBusqueda === 'codigo') return this.productosEncontrados;\r\n\r\n\t\t\treturn this.productosEncontrados.filter(opcion => {\r\n\t\t\t\tconst busqueda = this.producto.toLowerCase();\r\n\t\t\t\treturn (\r\n\t\t\t\t\topcion?.name?.toLowerCase().includes(busqueda) ||\r\n\t\t\t\t\topcion?.code?.toLowerCase().includes(busqueda)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n\r\n\twatch: {\r\n\t\tmodoBusqueda() {\r\n\t\t\tthis.limpiarInput();\r\n\t\t\tthis.productosEncontrados = [];\r\n\t\t}\r\n\t}\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}