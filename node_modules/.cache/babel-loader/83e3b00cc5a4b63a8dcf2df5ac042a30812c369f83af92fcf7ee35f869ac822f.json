{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport apiRequest from '@/Servicios/HttpService';\nexport default {\n  name: 'BuscarDetails',\n  data() {\n    return {\n      invoiceNumber: '',\n      ordenDetalle: null,\n      buscando: false,\n      error: null,\n      noResultados: false\n    };\n  },\n  methods: {\n    async buscarDetalles() {\n      if (!this.invoiceNumber.trim()) {\n        this.error = 'Por favor ingrese un número de factura';\n        return;\n      }\n      this.buscando = true;\n      this.error = null;\n      this.noResultados = false;\n      this.ordenDetalle = null;\n      try {\n        const response = await apiRequest({\n          method: 'GET',\n          path: `order-details/orderDetail/${this.invoiceNumber}`\n        });\n        if (response && response.status === 200 && response.data) {\n          this.ordenDetalle = response.data;\n          this.noResultados = false;\n        } else {\n          this.noResultados = true;\n        }\n      } catch (err) {\n        console.error('Error al buscar detalles:', err);\n        if (err.response && err.response.status === 404) {\n          this.noResultados = true;\n        } else {\n          this.error = 'Error al buscar detalles. Por favor intente nuevamente.';\n        }\n      } finally {\n        this.buscando = false;\n      }\n    },\n    formatearFecha(fechaString) {\n      if (!fechaString) return 'N/A';\n      const fecha = new Date(fechaString);\n      return fecha.toLocaleDateString('es-ES', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    },\n    formatearMoneda(valor) {\n      if (valor === undefined || valor === null) return 'N/A';\n      return new Intl.NumberFormat('es-SV', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 2\n      }).format(valor);\n    },\n    calcularSubtotal() {\n      if (!this.ordenDetalle || !this.ordenDetalle.details) return 0;\n      return this.ordenDetalle.details.reduce((sum, detalle) => sum + detalle.calculatedTotalPriceWithouthTax, 0);\n    },\n    calcularTotalImpuesto() {\n      if (!this.ordenDetalle || !this.ordenDetalle.details) return 0;\n      return this.ordenDetalle.details.reduce((sum, detalle) => sum + detalle.calculatedTotalTax, 0);\n    },\n    calcularTotal() {\n      return this.calcularSubtotal() + this.calcularTotalImpuesto();\n    }\n  }\n};","map":{"version":3,"names":["apiRequest","name","data","invoiceNumber","ordenDetalle","buscando","error","noResultados","methods","buscarDetalles","trim","response","method","path","status","err","console","formatearFecha","fechaString","fecha","Date","toLocaleDateString","year","month","day","formatearMoneda","valor","undefined","Intl","NumberFormat","style","currency","minimumFractionDigits","format","calcularSubtotal","details","reduce","sum","detalle","calculatedTotalPriceWithouthTax","calcularTotalImpuesto","calculatedTotalTax","calcularTotal"],"sources":["src/components/OrdenesDetalles/BusacarDetails.vue"],"sourcesContent":["<template>\r\n    <div class=\"buscar-details\">\r\n      <div class=\"section\">\r\n        <div class=\"section-header\">\r\n          <div class=\"header-left\">\r\n            <i class=\"fas fa-search section-icon\"></i>\r\n            <h3>Buscar Detalles por Número de Factura</h3>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"section-content\">\r\n          <div class=\"search-container\">\r\n            <div class=\"form-group\">\r\n              <label for=\"invoiceNumber\">\r\n                <i class=\"fas fa-file-invoice label-icon\"></i> Número de factura:\r\n              </label>\r\n              <div class=\"input-wrapper search-input-wrapper\">\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"invoiceNumber\" \r\n                  v-model=\"invoiceNumber\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"Ej: INV-20240315\" \r\n                  @keyup.enter=\"buscarDetalles\"\r\n                />\r\n                <button \r\n                  type=\"button\" \r\n                  @click=\"buscarDetalles\" \r\n                  class=\"btn btn-primary search-btn\" \r\n                  :disabled=\"buscando || !invoiceNumber.trim()\"\r\n                >\r\n                  <i class=\"fas\" :class=\"buscando ? 'fa-spinner fa-spin' : 'fa-search'\"></i>\r\n                  {{ buscando ? 'Buscando...' : 'Buscar' }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Mensaje de error -->\r\n          <div v-if=\"error\" class=\"message error\">\r\n            <i class=\"fas fa-exclamation-circle message-icon\"></i>\r\n            <span>{{ error }}</span>\r\n          </div>\r\n  \r\n          <!-- Mensaje cuando no hay resultados -->\r\n          <div v-if=\"noResultados\" class=\"message warning\">\r\n            <i class=\"fas fa-exclamation-triangle message-icon\"></i>\r\n            <span>No se encontraron detalles para el número de factura ingresado.</span>\r\n          </div>\r\n  \r\n          <!-- Resultados de la búsqueda -->\r\n          <div v-if=\"ordenDetalle && !buscando\" class=\"order-results\">\r\n            <div class=\"order-header\">\r\n              <div class=\"order-header-item\">\r\n                <i class=\"fas fa-file-invoice\"></i>\r\n                <span class=\"label\">Factura:</span>\r\n                <span class=\"value\">{{ ordenDetalle.invoiceNumber }}</span>\r\n              </div>\r\n              <div class=\"order-header-item\">\r\n                <i class=\"fas fa-calendar-alt\"></i>\r\n                <span class=\"label\">Fecha:</span>\r\n                <span class=\"value\">{{ formatearFecha(ordenDetalle.orderDate) }}</span>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Código</th>\r\n                    <th>Producto</th>\r\n                    <th>Cantidad</th>\r\n                    <th>Precio Unitario</th>\r\n                    <th>Impuesto Unitario</th>\r\n                    <th>Subtotal</th>\r\n                    <th>Total Impuesto</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"detalle in ordenDetalle.details\" :key=\"detalle.id\">\r\n                    <td>{{ detalle.id }}</td>\r\n                    <td>{{ detalle.product.code }}</td>\r\n                    <td>{{ detalle.product.name }}</td>\r\n                    <td>{{ detalle.quantity }}</td>\r\n                    <td>{{ formatearMoneda(detalle.purchasePriceUnit) }}</td>\r\n                    <td>{{ formatearMoneda(detalle.calculatedTaxUnit) }}</td>\r\n                    <td>{{ formatearMoneda(detalle.calculatedTotalPriceWithouthTax) }}</td>\r\n                    <td>{{ formatearMoneda(detalle.calculatedTotalTax) }}</td>\r\n                  </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr>\r\n                    <td colspan=\"6\" class=\"text-right\"><strong>Total:</strong></td>\r\n                    <td>{{ formatearMoneda(calcularSubtotal()) }}</td>\r\n                    <td>{{ formatearMoneda(calcularTotalImpuesto()) }}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colspan=\"6\" class=\"text-right\"><strong>Total con Impuesto:</strong></td>\r\n                    <td colspan=\"2\">{{ formatearMoneda(calcularTotal()) }}</td>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import apiRequest from '@/Servicios/HttpService';\r\n  \r\n  export default {\r\n    name: 'BuscarDetails',\r\n    data() {\r\n      return {\r\n        invoiceNumber: '',\r\n        ordenDetalle: null,\r\n        buscando: false,\r\n        error: null,\r\n        noResultados: false\r\n      };\r\n    },\r\n    methods: {\r\n      async buscarDetalles() {\r\n        if (!this.invoiceNumber.trim()) {\r\n          this.error = 'Por favor ingrese un número de factura';\r\n          return;\r\n        }\r\n  \r\n        this.buscando = true;\r\n        this.error = null;\r\n        this.noResultados = false;\r\n        this.ordenDetalle = null;\r\n  \r\n        try {\r\n          const response = await apiRequest({\r\n            method: 'GET',\r\n            path: `order-details/orderDetail/${this.invoiceNumber}`\r\n          });\r\n          \r\n          if (response && response.status === 200 && response.data) {\r\n            this.ordenDetalle = response.data;\r\n            this.noResultados = false;\r\n          } else {\r\n            this.noResultados = true;\r\n          }\r\n        } catch (err) {\r\n          console.error('Error al buscar detalles:', err);\r\n          if (err.response && err.response.status === 404) {\r\n            this.noResultados = true;\r\n          } else {\r\n            this.error = 'Error al buscar detalles. Por favor intente nuevamente.';\r\n          }\r\n        } finally {\r\n          this.buscando = false;\r\n        }\r\n      },\r\n      \r\n      formatearFecha(fechaString) {\r\n        if (!fechaString) return 'N/A';\r\n        \r\n        const fecha = new Date(fechaString);\r\n        return fecha.toLocaleDateString('es-ES', {\r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        });\r\n      },\r\n      \r\n      formatearMoneda(valor) {\r\n        if (valor === undefined || valor === null) return 'N/A';\r\n        \r\n        return new Intl.NumberFormat('es-SV', {\r\n          style: 'currency',\r\n          currency: 'USD',\r\n          minimumFractionDigits: 2\r\n        }).format(valor);\r\n      },\r\n      \r\n      calcularSubtotal() {\r\n        if (!this.ordenDetalle || !this.ordenDetalle.details) return 0;\r\n        \r\n        return this.ordenDetalle.details.reduce((sum, detalle) => \r\n          sum + detalle.calculatedTotalPriceWithouthTax, 0);\r\n      },\r\n      \r\n      calcularTotalImpuesto() {\r\n        if (!this.ordenDetalle || !this.ordenDetalle.details) return 0;\r\n        \r\n        return this.ordenDetalle.details.reduce((sum, detalle) => \r\n          sum + detalle.calculatedTotalTax, 0);\r\n      },\r\n      \r\n      calcularTotal() {\r\n        return this.calcularSubtotal() + this.calcularTotalImpuesto();\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n "],"mappings":";;AA+GA,OAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,aAAA;MACAC,YAAA;MACAC,QAAA;MACAC,KAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,eAAA;MACA,UAAAN,aAAA,CAAAO,IAAA;QACA,KAAAJ,KAAA;QACA;MACA;MAEA,KAAAD,QAAA;MACA,KAAAC,KAAA;MACA,KAAAC,YAAA;MACA,KAAAH,YAAA;MAEA;QACA,MAAAO,QAAA,SAAAX,UAAA;UACAY,MAAA;UACAC,IAAA,oCAAAV,aAAA;QACA;QAEA,IAAAQ,QAAA,IAAAA,QAAA,CAAAG,MAAA,YAAAH,QAAA,CAAAT,IAAA;UACA,KAAAE,YAAA,GAAAO,QAAA,CAAAT,IAAA;UACA,KAAAK,YAAA;QACA;UACA,KAAAA,YAAA;QACA;MACA,SAAAQ,GAAA;QACAC,OAAA,CAAAV,KAAA,8BAAAS,GAAA;QACA,IAAAA,GAAA,CAAAJ,QAAA,IAAAI,GAAA,CAAAJ,QAAA,CAAAG,MAAA;UACA,KAAAP,YAAA;QACA;UACA,KAAAD,KAAA;QACA;MACA;QACA,KAAAD,QAAA;MACA;IACA;IAEAY,eAAAC,WAAA;MACA,KAAAA,WAAA;MAEA,MAAAC,KAAA,OAAAC,IAAA,CAAAF,WAAA;MACA,OAAAC,KAAA,CAAAE,kBAAA;QACAC,IAAA;QACAC,KAAA;QACAC,GAAA;MACA;IACA;IAEAC,gBAAAC,KAAA;MACA,IAAAA,KAAA,KAAAC,SAAA,IAAAD,KAAA;MAEA,WAAAE,IAAA,CAAAC,YAAA;QACAC,KAAA;QACAC,QAAA;QACAC,qBAAA;MACA,GAAAC,MAAA,CAAAP,KAAA;IACA;IAEAQ,iBAAA;MACA,UAAA9B,YAAA,UAAAA,YAAA,CAAA+B,OAAA;MAEA,YAAA/B,YAAA,CAAA+B,OAAA,CAAAC,MAAA,EAAAC,GAAA,EAAAC,OAAA,KACAD,GAAA,GAAAC,OAAA,CAAAC,+BAAA;IACA;IAEAC,sBAAA;MACA,UAAApC,YAAA,UAAAA,YAAA,CAAA+B,OAAA;MAEA,YAAA/B,YAAA,CAAA+B,OAAA,CAAAC,MAAA,EAAAC,GAAA,EAAAC,OAAA,KACAD,GAAA,GAAAC,OAAA,CAAAG,kBAAA;IACA;IAEAC,cAAA;MACA,YAAAR,gBAAA,UAAAM,qBAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}