{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport MensajeInicial from '../Extras/MensajeInicial';\nimport apiRequest from '../../Servicios/HttpService';\nexport default {\n  name: \"ClientesEliminados\",\n  components: {\n    MensajeInicial\n  },\n  data: () => ({\n    clientesEliminados: [],\n    cargando: false,\n    isPaginated: true,\n    isPaginationSimple: false,\n    isPaginationRounded: true,\n    paginationPosition: 'bottom',\n    defaultSortDirection: 'asc',\n    sortIcon: 'arrow-up',\n    sortIconSize: 'is-medium',\n    currentPage: 1,\n    perPage: 10,\n    isVentasModalActive: false,\n    ventasCliente: null,\n    clienteSeleccionado: null,\n    clienteSeleccionadoNombre: '',\n    clienteTieneVentas: false\n  }),\n  mounted() {\n    this.obtenerClientesEliminados();\n  },\n  methods: {\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('es-MX', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    restaurarCliente(cliente) {\n      this.$buefy.dialog.confirm({\n        title: 'Restaurar cliente',\n        message: `¿Deseas restaurar el cliente ${cliente.name}?`,\n        confirmText: 'Sí, restaurar',\n        cancelText: 'Cancelar',\n        type: 'is-success',\n        hasIcon: true,\n        onConfirm: () => {\n          this.cargando = true;\n\n          // Usamos el endpoint para activar el cliente\n          apiRequest({\n            method: 'POST',\n            path: `customers/activate/${cliente.id}`\n          }).then(resultado => {\n            this.cargando = false;\n            if (resultado && resultado.status >= 200 && resultado.status < 300) {\n              this.$buefy.toast.open({\n                message: 'Cliente restaurado correctamente',\n                type: 'is-success'\n              });\n              this.obtenerClientesEliminados();\n              // Emitimos un evento para que el componente padre sepa que debe actualizar la lista de clientes\n              this.$emit('cliente-restaurado');\n            } else {\n              this.$buefy.toast.open({\n                message: 'Error al restaurar el cliente',\n                type: 'is-danger'\n              });\n            }\n          }).catch(error => {\n            console.error(\"Error al restaurar cliente:\", error);\n            this.cargando = false;\n            this.$buefy.toast.open({\n              message: 'Error al restaurar el cliente',\n              type: 'is-danger'\n            });\n          });\n        }\n      });\n    },\n    obtenerClientesEliminados() {\n      this.cargando = true;\n\n      // Usamos el endpoint correcto para obtener clientes eliminados\n      apiRequest({\n        method: \"GET\",\n        path: \"customers/deletedCustomers\"\n      }).then(respuesta => {\n        this.cargando = false;\n        console.log(\"Respuesta del servidor:\", respuesta);\n\n        // La respuesta directamente es el array, no está dentro de una propiedad data\n        if (respuesta && Array.isArray(respuesta.data)) {\n          this.clientesEliminados = respuesta.data;\n        } else {\n          this.clientesEliminados = [];\n          console.error(\"Formato de respuesta inesperado:\", respuesta);\n        }\n      }).catch(error => {\n        console.error(\"Error al obtener clientes eliminados:\", error);\n        this.clientesEliminados = [];\n        this.cargando = false;\n        this.$buefy.toast.open({\n          message: 'Error al cargar los clientes eliminados',\n          type: 'is-danger'\n        });\n      });\n    },\n    verVentas(idCliente, nombreCliente) {\n      this.cargando = true;\n      this.clienteSeleccionado = idCliente;\n      this.clienteSeleccionadoNombre = nombreCliente || 'Cliente';\n      this.clienteTieneVentas = false;\n      apiRequest({\n        method: 'GET',\n        path: `customers/sales-by-customer/${idCliente}`\n      }).then(respuesta => {\n        this.cargando = false;\n        if (respuesta && respuesta.data && Array.isArray(respuesta.data)) {\n          // Buscamos específicamente el cliente solicitado en el array\n          const clienteVentas = respuesta.data.find(item => item.id === idCliente);\n\n          // Verificamos si el cliente existe y tiene ventas\n          if (clienteVentas && clienteVentas.totalSales !== null && clienteVentas.totalSales > 0) {\n            this.ventasCliente = clienteVentas;\n            this.clienteTieneVentas = true;\n          } else {\n            // Si no tiene ventas o totalSales es null\n            this.ventasCliente = {\n              id: idCliente,\n              totalSales: 0\n            };\n            this.clienteTieneVentas = false;\n          }\n        } else {\n          // Si la respuesta no es válida\n          this.ventasCliente = {\n            id: idCliente,\n            totalSales: 0\n          };\n          this.clienteTieneVentas = false;\n        }\n        this.isVentasModalActive = true;\n      }).catch(error => {\n        console.error(\"Error al obtener ventas del cliente:\", error);\n        this.cargando = false;\n        this.ventasCliente = {\n          id: idCliente,\n          totalSales: 0\n        };\n        this.clienteTieneVentas = false;\n        this.$buefy.toast.open({\n          message: 'Error al cargar las ventas del cliente',\n          type: 'is-danger'\n        });\n        this.isVentasModalActive = true;\n      });\n    }\n  }\n};","map":{"version":3,"names":["MensajeInicial","apiRequest","name","components","data","clientesEliminados","cargando","isPaginated","isPaginationSimple","isPaginationRounded","paginationPosition","defaultSortDirection","sortIcon","sortIconSize","currentPage","perPage","isVentasModalActive","ventasCliente","clienteSeleccionado","clienteSeleccionadoNombre","clienteTieneVentas","mounted","obtenerClientesEliminados","methods","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","restaurarCliente","cliente","$buefy","dialog","confirm","title","message","confirmText","cancelText","type","hasIcon","onConfirm","method","path","id","then","resultado","status","toast","open","$emit","catch","error","console","respuesta","log","Array","isArray","verVentas","idCliente","nombreCliente","clienteVentas","find","item","totalSales"],"sources":["src/components/Clientes/Clientes-Eliminados.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <mensaje-inicial :titulo=\"'No se han encontrado clientes eliminados'\"\r\n            :subtitulo=\"'Los clientes eliminados aparecerán aquí'\" v-if=\"!clientesEliminados || clientesEliminados.length < 1\" />\r\n    \r\n        <div v-if=\"clientesEliminados && clientesEliminados.length > 0\">\r\n            <b-table class=\"box\" :data=\"clientesEliminados\"\r\n                :paginated=\"isPaginated\"\r\n                :per-page=\"perPage\"\r\n                :current-page.sync=\"currentPage\"\r\n                :pagination-simple=\"isPaginationSimple\"\r\n                :pagination-position=\"paginationPosition\"\r\n                :default-sort-direction=\"defaultSortDirection\"\r\n                :pagination-rounded=\"isPaginationRounded\"\r\n                :sort-icon=\"sortIcon\"\r\n                :sort-icon-size=\"sortIconSize\"\r\n                default-sort=\"name\"\r\n                aria-next-label=\"Next page\"\r\n                aria-previous-label=\"Previous page\"\r\n                aria-page-label=\"Page\"\r\n                aria-current-label=\"Current page\">\r\n                \r\n                <b-table-column field=\"name\" label=\"Nombre del cliente\" sortable searchable v-slot=\"props\">\r\n                    {{ props.row.name }}\r\n                </b-table-column>\r\n    \r\n                <b-table-column field=\"phone\" label=\"Teléfono\" sortable searchable v-slot=\"props\">\r\n                    {{ props.row.phone }}\r\n                </b-table-column>\r\n    \r\n                <b-table-column field=\"acciones\" label=\"Acciones\" centered v-slot=\"props\">\r\n                    <div class=\"buttons is-centered\">\r\n                        <b-tooltip label=\"Restaurar cliente\" position=\"is-top\">\r\n                            <b-button class=\"btn-primary\" @click=\"restaurarCliente(props.row)\">\r\n                                <b-icon icon=\"restore\" />\r\n                            </b-button>\r\n                        </b-tooltip>\r\n                        <b-tooltip label=\"Ver ventas\" position=\"is-top\">\r\n                            <b-button class=\"btn-link\" @click=\"verVentas(props.row.id, props.row.name)\">\r\n                                <b-icon icon=\"shopping\" />\r\n                            </b-button>\r\n                        </b-tooltip>\r\n                    </div>\r\n                </b-table-column>\r\n            </b-table>\r\n        </div>\r\n        \r\n        <b-loading :is-full-page=\"false\" v-model=\"cargando\" :can-cancel=\"false\"></b-loading>\r\n    \r\n        <!-- Modal para mostrar las ventas del cliente -->\r\n        <b-modal :active.sync=\"isVentasModalActive\" has-modal-card trap-focus aria-role=\"dialog\" aria-modal>\r\n            <div class=\"modal-card\" style=\"width: auto; max-width: 80vw;\">\r\n                <header class=\"modal-card-head\">\r\n                    <p class=\"modal-card-title\">Ventas del Cliente: {{ clienteSeleccionadoNombre }}</p>\r\n                    <button class=\"delete\" aria-label=\"close\" @click=\"isVentasModalActive = false\"></button>\r\n                </header>\r\n                <section class=\"modal-card-body\">\r\n                    <div v-if=\"!clienteTieneVentas\" class=\"has-text-centered\">\r\n                        <div class=\"box p-6\">\r\n                            <div class=\"icon-text is-flex is-justify-content-center mb-4\">\r\n                                <span class=\"icon has-text-warning is-large\">\r\n                                    <i class=\"mdi mdi-alert-circle mdi-36px\"></i>\r\n                                </span>\r\n                            </div>\r\n                            <p class=\"is-size-4 mb-4\">Este cliente no tiene compras registradas</p>\r\n                            <p class=\"is-size-6 has-text-grey\">\r\n                                El cliente no ha realizado ninguna compra hasta el momento.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div v-else class=\"has-text-centered\">\r\n                        <div class=\"box p-6\">\r\n                            <h2 class=\"title is-4 mb-4\">Resumen de Ventas</h2>\r\n                            <div class=\"columns\">\r\n                                <div class=\"column\">\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-content\">\r\n                                            <p class=\"title is-5\">Total de Ventas</p>\r\n                                            <p class=\"subtitle is-2 has-text-primary\">${{ ventasCliente.totalSales.toFixed(2) }}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <p class=\"mt-4 is-size-6 has-text-grey\">\r\n                                Para ver el detalle completo de las ventas, consulte el módulo de ventas.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <footer class=\"modal-card-foot\">\r\n                    <button class=\"button\" @click=\"isVentasModalActive = false\">Cerrar</button>\r\n                </footer>\r\n            </div>\r\n        </b-modal>\r\n    </div>\r\n    </template>\r\n    \r\n    <script>\r\n    import MensajeInicial from '../Extras/MensajeInicial'\r\n    import apiRequest from '../../Servicios/HttpService';\r\n    \r\n    export default {\r\n    name: \"ClientesEliminados\",\r\n    components: { MensajeInicial },\r\n    \r\n    data: () => ({\r\n        clientesEliminados: [],\r\n        cargando: false,\r\n        isPaginated: true,\r\n        isPaginationSimple: false,\r\n        isPaginationRounded: true,\r\n        paginationPosition: 'bottom',\r\n        defaultSortDirection: 'asc',\r\n        sortIcon: 'arrow-up',\r\n        sortIconSize: 'is-medium',\r\n        currentPage: 1,\r\n        perPage: 10,\r\n        isVentasModalActive: false,\r\n        ventasCliente: null,\r\n        clienteSeleccionado: null,\r\n        clienteSeleccionadoNombre: '',\r\n        clienteTieneVentas: false\r\n    }),\r\n    \r\n    mounted() {\r\n        this.obtenerClientesEliminados()\r\n    },\r\n    \r\n    methods: {\r\n        formatDate(dateString) {\r\n            if (!dateString) return ''\r\n            const date = new Date(dateString)\r\n            return date.toLocaleDateString('es-MX', { \r\n                year: 'numeric', \r\n                month: 'long', \r\n                day: 'numeric',\r\n                hour: '2-digit',\r\n                minute: '2-digit'\r\n            })\r\n        },\r\n    \r\n        restaurarCliente(cliente) {\r\n            this.$buefy.dialog.confirm({\r\n                title: 'Restaurar cliente',\r\n                message: `¿Deseas restaurar el cliente ${cliente.name}?`,\r\n                confirmText: 'Sí, restaurar',\r\n                cancelText: 'Cancelar',\r\n                type: 'is-success',\r\n                hasIcon: true,\r\n                onConfirm: () => {\r\n                    this.cargando = true\r\n                    \r\n                    // Usamos el endpoint para activar el cliente\r\n                    apiRequest({\r\n                        method: 'POST',\r\n                        path: `customers/activate/${cliente.id}`\r\n                    })\r\n                    .then(resultado => {\r\n                        this.cargando = false\r\n                        if (resultado && resultado.status >= 200 && resultado.status < 300) {\r\n                            this.$buefy.toast.open({\r\n                                message: 'Cliente restaurado correctamente',\r\n                                type: 'is-success'\r\n                            })\r\n                            this.obtenerClientesEliminados()\r\n                            // Emitimos un evento para que el componente padre sepa que debe actualizar la lista de clientes\r\n                            this.$emit('cliente-restaurado')\r\n                        } else {\r\n                            this.$buefy.toast.open({\r\n                                message: 'Error al restaurar el cliente',\r\n                                type: 'is-danger'\r\n                            })\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(\"Error al restaurar cliente:\", error);\r\n                        this.cargando = false;\r\n                        this.$buefy.toast.open({\r\n                            message: 'Error al restaurar el cliente',\r\n                            type: 'is-danger'\r\n                        });\r\n                    });\r\n                }\r\n            })\r\n        },\r\n    \r\n        obtenerClientesEliminados() {\r\n            this.cargando = true\r\n            \r\n            // Usamos el endpoint correcto para obtener clientes eliminados\r\n            apiRequest({\r\n                method: \"GET\",\r\n                path: \"customers/deletedCustomers\"\r\n            })\r\n            .then(respuesta => {\r\n                this.cargando = false;\r\n                console.log(\"Respuesta del servidor:\", respuesta);\r\n                \r\n                // La respuesta directamente es el array, no está dentro de una propiedad data\r\n                if (respuesta && Array.isArray(respuesta.data)) {\r\n                    this.clientesEliminados = respuesta.data;\r\n                } else {\r\n                    this.clientesEliminados = [];\r\n                    console.error(\"Formato de respuesta inesperado:\", respuesta);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error al obtener clientes eliminados:\", error);\r\n                this.clientesEliminados = [];\r\n                this.cargando = false;\r\n                this.$buefy.toast.open({\r\n                    message: 'Error al cargar los clientes eliminados',\r\n                    type: 'is-danger'\r\n                });\r\n            });\r\n        },\r\n    \r\n        verVentas(idCliente, nombreCliente) {\r\n            this.cargando = true;\r\n            this.clienteSeleccionado = idCliente;\r\n            this.clienteSeleccionadoNombre = nombreCliente || 'Cliente';\r\n            this.clienteTieneVentas = false;\r\n            \r\n            apiRequest({\r\n                method: 'GET',\r\n                path: `customers/sales-by-customer/${idCliente}`\r\n            })\r\n            .then(respuesta => {\r\n                this.cargando = false;\r\n                \r\n                if (respuesta && respuesta.data && Array.isArray(respuesta.data)) {\r\n                    // Buscamos específicamente el cliente solicitado en el array\r\n                    const clienteVentas = respuesta.data.find(item => item.id === idCliente);\r\n                    \r\n                    // Verificamos si el cliente existe y tiene ventas\r\n                    if (clienteVentas && clienteVentas.totalSales !== null && clienteVentas.totalSales > 0) {\r\n                        this.ventasCliente = clienteVentas;\r\n                        this.clienteTieneVentas = true;\r\n                    } else {\r\n                        // Si no tiene ventas o totalSales es null\r\n                        this.ventasCliente = { id: idCliente, totalSales: 0 };\r\n                        this.clienteTieneVentas = false;\r\n                    }\r\n                } else {\r\n                    // Si la respuesta no es válida\r\n                    this.ventasCliente = { id: idCliente, totalSales: 0 };\r\n                    this.clienteTieneVentas = false;\r\n                }\r\n                \r\n                this.isVentasModalActive = true;\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error al obtener ventas del cliente:\", error);\r\n                this.cargando = false;\r\n                this.ventasCliente = { id: idCliente, totalSales: 0 };\r\n                this.clienteTieneVentas = false;\r\n                this.$buefy.toast.open({\r\n                    message: 'Error al cargar las ventas del cliente',\r\n                    type: 'is-danger'\r\n                });\r\n                this.isVentasModalActive = true;\r\n            });\r\n        }\r\n    }\r\n    }\r\n    </script>"],"mappings":";;AAkGA,OAAAA,cAAA;AACA,OAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAH;EAAA;EAEAI,IAAA,EAAAA,CAAA;IACAC,kBAAA;IACAC,QAAA;IACAC,WAAA;IACAC,kBAAA;IACAC,mBAAA;IACAC,kBAAA;IACAC,oBAAA;IACAC,QAAA;IACAC,YAAA;IACAC,WAAA;IACAC,OAAA;IACAC,mBAAA;IACAC,aAAA;IACAC,mBAAA;IACAC,yBAAA;IACAC,kBAAA;EACA;EAEAC,QAAA;IACA,KAAAC,yBAAA;EACA;EAEAC,OAAA;IACAC,WAAAC,UAAA;MACA,KAAAA,UAAA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,UAAA;MACA,OAAAC,IAAA,CAAAE,kBAAA;QACAC,IAAA;QACAC,KAAA;QACAC,GAAA;QACAC,IAAA;QACAC,MAAA;MACA;IACA;IAEAC,iBAAAC,OAAA;MACA,KAAAC,MAAA,CAAAC,MAAA,CAAAC,OAAA;QACAC,KAAA;QACAC,OAAA,kCAAAL,OAAA,CAAAjC,IAAA;QACAuC,WAAA;QACAC,UAAA;QACAC,IAAA;QACAC,OAAA;QACAC,SAAA,EAAAA,CAAA;UACA,KAAAvC,QAAA;;UAEA;UACAL,UAAA;YACA6C,MAAA;YACAC,IAAA,wBAAAZ,OAAA,CAAAa,EAAA;UACA,GACAC,IAAA,CAAAC,SAAA;YACA,KAAA5C,QAAA;YACA,IAAA4C,SAAA,IAAAA,SAAA,CAAAC,MAAA,WAAAD,SAAA,CAAAC,MAAA;cACA,KAAAf,MAAA,CAAAgB,KAAA,CAAAC,IAAA;gBACAb,OAAA;gBACAG,IAAA;cACA;cACA,KAAArB,yBAAA;cACA;cACA,KAAAgC,KAAA;YACA;cACA,KAAAlB,MAAA,CAAAgB,KAAA,CAAAC,IAAA;gBACAb,OAAA;gBACAG,IAAA;cACA;YACA;UACA,GACAY,KAAA,CAAAC,KAAA;YACAC,OAAA,CAAAD,KAAA,gCAAAA,KAAA;YACA,KAAAlD,QAAA;YACA,KAAA8B,MAAA,CAAAgB,KAAA,CAAAC,IAAA;cACAb,OAAA;cACAG,IAAA;YACA;UACA;QACA;MACA;IACA;IAEArB,0BAAA;MACA,KAAAhB,QAAA;;MAEA;MACAL,UAAA;QACA6C,MAAA;QACAC,IAAA;MACA,GACAE,IAAA,CAAAS,SAAA;QACA,KAAApD,QAAA;QACAmD,OAAA,CAAAE,GAAA,4BAAAD,SAAA;;QAEA;QACA,IAAAA,SAAA,IAAAE,KAAA,CAAAC,OAAA,CAAAH,SAAA,CAAAtD,IAAA;UACA,KAAAC,kBAAA,GAAAqD,SAAA,CAAAtD,IAAA;QACA;UACA,KAAAC,kBAAA;UACAoD,OAAA,CAAAD,KAAA,qCAAAE,SAAA;QACA;MACA,GACAH,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,0CAAAA,KAAA;QACA,KAAAnD,kBAAA;QACA,KAAAC,QAAA;QACA,KAAA8B,MAAA,CAAAgB,KAAA,CAAAC,IAAA;UACAb,OAAA;UACAG,IAAA;QACA;MACA;IACA;IAEAmB,UAAAC,SAAA,EAAAC,aAAA;MACA,KAAA1D,QAAA;MACA,KAAAY,mBAAA,GAAA6C,SAAA;MACA,KAAA5C,yBAAA,GAAA6C,aAAA;MACA,KAAA5C,kBAAA;MAEAnB,UAAA;QACA6C,MAAA;QACAC,IAAA,iCAAAgB,SAAA;MACA,GACAd,IAAA,CAAAS,SAAA;QACA,KAAApD,QAAA;QAEA,IAAAoD,SAAA,IAAAA,SAAA,CAAAtD,IAAA,IAAAwD,KAAA,CAAAC,OAAA,CAAAH,SAAA,CAAAtD,IAAA;UACA;UACA,MAAA6D,aAAA,GAAAP,SAAA,CAAAtD,IAAA,CAAA8D,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAnB,EAAA,KAAAe,SAAA;;UAEA;UACA,IAAAE,aAAA,IAAAA,aAAA,CAAAG,UAAA,aAAAH,aAAA,CAAAG,UAAA;YACA,KAAAnD,aAAA,GAAAgD,aAAA;YACA,KAAA7C,kBAAA;UACA;YACA;YACA,KAAAH,aAAA;cAAA+B,EAAA,EAAAe,SAAA;cAAAK,UAAA;YAAA;YACA,KAAAhD,kBAAA;UACA;QACA;UACA;UACA,KAAAH,aAAA;YAAA+B,EAAA,EAAAe,SAAA;YAAAK,UAAA;UAAA;UACA,KAAAhD,kBAAA;QACA;QAEA,KAAAJ,mBAAA;MACA,GACAuC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,yCAAAA,KAAA;QACA,KAAAlD,QAAA;QACA,KAAAW,aAAA;UAAA+B,EAAA,EAAAe,SAAA;UAAAK,UAAA;QAAA;QACA,KAAAhD,kBAAA;QACA,KAAAgB,MAAA,CAAAgB,KAAA,CAAAC,IAAA;UACAb,OAAA;UACAG,IAAA;QACA;QACA,KAAA3B,mBAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}