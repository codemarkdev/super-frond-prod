{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport MensajeInicial from '../Extras/MensajeInicial';\nimport apiRequest from '../../Servicios/HttpService';\nexport default {\n  name: \"ProductosEliminados\",\n  components: {\n    MensajeInicial\n  },\n  data: () => ({\n    productosEliminados: [],\n    cargando: false,\n    isPaginated: true,\n    isPaginationSimple: false,\n    isPaginationRounded: true,\n    paginationPosition: 'bottom',\n    defaultSortDirection: 'asc',\n    sortIcon: 'arrow-up',\n    sortIconSize: 'is-medium',\n    currentPage: 1,\n    perPage: 10,\n    totalProductosEliminados: 0,\n    totalPages: 1,\n    totalValorEliminados: 0\n  }),\n  mounted() {\n    this.obtenerProductosEliminados();\n  },\n  methods: {\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('es-MX', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    restaurarInventario(producto) {\n      this.$buefy.dialog.confirm({\n        title: 'Restaurar al inventario',\n        message: `¿Deseas restaurar el producto ${producto.name} al inventario?`,\n        confirmText: 'Sí, restaurar',\n        cancelText: 'Cancelar',\n        type: 'is-success',\n        hasIcon: true,\n        onConfirm: () => {\n          this.cargando = true;\n\n          // Cambiamos el método y la ruta para usar el nuevo endpoint\n          apiRequest({\n            method: 'POST',\n            path: `products/activate-product/${producto.id}`\n          }).then(resultado => {\n            this.cargando = false;\n            if (resultado) {\n              this.$buefy.toast.open({\n                message: 'Producto restaurado al inventario correctamente',\n                type: 'is-success'\n              });\n              this.obtenerProductosEliminados();\n              // Emitimos un evento para que el componente padre sepa que debe actualizar el inventario\n              this.$emit('producto-restaurado');\n            } else {\n              this.$buefy.toast.open({\n                message: 'Error al restaurar el producto',\n                type: 'is-danger'\n              });\n            }\n          });\n        }\n      });\n    },\n    eliminarPermanente(idProducto) {\n      this.$buefy.dialog.confirm({\n        title: 'Eliminar permanentemente',\n        message: 'Esta acción eliminará permanentemente el producto. ¿Deseas continuar?',\n        confirmText: 'Sí, eliminar',\n        cancelText: 'Cancelar',\n        type: 'is-danger',\n        hasIcon: true,\n        onConfirm: () => {\n          this.cargando = true;\n          apiRequest({\n            method: 'DELETE',\n            path: `products/${idProducto}/permanent`\n          }).then(resultado => {\n            this.cargando = false;\n            if (resultado) {\n              this.$buefy.toast.open({\n                message: 'Producto eliminado permanentemente',\n                type: 'is-success'\n              });\n              this.obtenerProductosEliminados();\n            } else {\n              this.$buefy.toast.open({\n                message: 'Error al eliminar el producto',\n                type: 'is-danger'\n              });\n            }\n          });\n        }\n      });\n    },\n    obtenerProductosEliminados() {\n      this.cargando = true;\n      apiRequest({\n        method: \"GET\",\n        path: `products/findDeleted?page=${this.currentPage}&limit=${this.perPage}`\n      }).then(respuesta => {\n        if (respuesta && respuesta.data) {\n          this.productosEliminados = respuesta.data.data || [];\n          this.totalProductosEliminados = respuesta.data.total || 0;\n          this.totalPages = respuesta.data.totalPages || 1;\n\n          // Calcular el valor total de los productos eliminados\n          let valorTotal = 0;\n          if (this.productosEliminados && this.productosEliminados.length > 0) {\n            this.productosEliminados.forEach(producto => {\n              if (producto.purchasePrice && producto.stock) {\n                valorTotal += producto.purchasePrice * producto.stock;\n              }\n            });\n          }\n          this.totalValorEliminados = valorTotal;\n        } else {\n          // Si no hay datos, inicializar con arrays vacíos\n          this.productosEliminados = [];\n          this.totalProductosEliminados = 0;\n          this.totalPages = 1;\n          this.totalValorEliminados = 0;\n        }\n        this.cargando = false;\n      }).catch(error => {\n        console.error(\"Error al obtener productos eliminados:\", error);\n        this.cargando = false;\n        this.productosEliminados = [];\n        this.totalProductosEliminados = 0;\n        this.totalPages = 1;\n        this.totalValorEliminados = 0;\n        this.$buefy.toast.open({\n          message: 'Error al cargar los productos eliminados',\n          type: 'is-danger'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["MensajeInicial","apiRequest","name","components","data","productosEliminados","cargando","isPaginated","isPaginationSimple","isPaginationRounded","paginationPosition","defaultSortDirection","sortIcon","sortIconSize","currentPage","perPage","totalProductosEliminados","totalPages","totalValorEliminados","mounted","obtenerProductosEliminados","methods","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","restaurarInventario","producto","$buefy","dialog","confirm","title","message","confirmText","cancelText","type","hasIcon","onConfirm","method","path","id","then","resultado","toast","open","$emit","eliminarPermanente","idProducto","respuesta","total","valorTotal","length","forEach","purchasePrice","stock","catch","error","console"],"sources":["src/components/Inventario/Productos-Eliminados.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <mensaje-inicial :titulo=\"'No se han encontrado productos eliminados'\"\r\n            :subtitulo=\"'Los productos eliminados aparecerán aquí'\" v-if=\"!productosEliminados || productosEliminados.length < 1\" />\r\n    \r\n        <div class=\"\" v-if=\"productosEliminados && productosEliminados.length > 0\">\r\n            <!-- Quitamos la clase table-container que añade scrollbar -->\r\n            <div>\r\n                <b-table class=\"box\" :data=\"productosEliminados\" :per-page=\"perPage\"\r\n                    :current-page.sync=\"currentPage\" :pagination-simple=\"isPaginationSimple\"\r\n                    :pagination-position=\"paginationPosition\" :default-sort-direction=\"defaultSortDirection\"\r\n                    :pagination-rounded=\"isPaginationRounded\" :sort-icon=\"sortIcon\" :sort-icon-size=\"sortIconSize\"\r\n                    default-sort=\"user.first_name\" aria-next-label=\"Next page\" aria-previous-label=\"Previous page\"\r\n                    aria-page-label=\"Page\" aria-current-label=\"Current page\"\r\n                    :sticky-header=\"false\" :height=\"null\">\r\n                    <b-table-column label=\"ID\" sortable v-slot=\"props\">\r\n                        {{ props.row.id }}\r\n                    </b-table-column>\r\n                    <b-table-column field=\"code\" label=\"Código de barras\" sortable searchable v-slot=\"props\">\r\n                        {{ props.row.code }}\r\n                    </b-table-column>\r\n    \r\n                    <b-table-column field=\"name\" label=\"Nombre\" sortable searchable v-slot=\"props\">\r\n                        {{ props.row.name }}\r\n                    </b-table-column>\r\n    \r\n                    <b-table-column field=\"precioCompra\" label=\"Precio compra\" sortable v-slot=\"props\">\r\n                        ${{ props.row.purchasePrice }}\r\n                    </b-table-column>\r\n    \r\n                    <b-table-column field=\"precioVenta\" label=\"Precio venta\" sortable v-slot=\"props\">\r\n                        ${{ props.row.salePrice }}\r\n                    </b-table-column>\r\n    \r\n                    <b-table-column field=\"precioTurista\" label=\"Precio turista\" sortable v-slot=\"props\">\r\n                        ${{ props.row.touristPrice }}\r\n                    </b-table-column>\r\n    \r\n                    <b-table-column field=\"ganancia\" label=\"Ganancia\" sortable v-slot=\"props\">\r\n                        <b>${{ (props.row.salePrice - props.row.purchasePrice).toFixed(2) }}</b>\r\n                    </b-table-column>\r\n                    <b-table-column field=\"ganancia\" label=\"Ganancia turista\" sortable v-slot=\"props\">\r\n                        <b>${{ (props.row.touristPrice - props.row.purchasePrice).toFixed(2)}}</b>\r\n                    </b-table-column>\r\n    \r\n                    <b-table-column field=\"vendidoMayoreo\" label=\"¿Mayoreo?\" sortable v-slot=\"props\">\r\n                        <b-tag type=\"is-danger\" v-if=\"!props.row.wholesaleSale\">No</b-tag>\r\n    \r\n                        <div v-if=\"props.row.wholesaleSale\">\r\n                            <b>Precio: </b>${{ props.row.wholesalePrice }}<br>\r\n                            <b>A partir de: </b>{{ parseInt(props.row.wholesaleQuantity) }}\r\n                        </div>\r\n                    </b-table-column>\r\n    \r\n                    <b-table-column field=\"deletedAt\" label=\"Fecha eliminación\" sortable v-slot=\"props\">\r\n                        {{ formatDate(props.row.deletedAt) }}\r\n                    </b-table-column>\r\n    \r\n                    <b-table-column field=\"brand.brandName\" label=\"Marca\" sortable searchable v-slot=\"props\">\r\n                        {{ props.row.brand ? props.row.brand.brandName : '' }}\r\n                    </b-table-column>\r\n    \r\n                    <b-table-column field=\"category.categoryName\" label=\"Categoría\" sortable searchable v-slot=\"props\">\r\n                        {{ props.row.category ? props.row.category.categoryName : '' }}\r\n                    </b-table-column>\r\n    \r\n                    <b-table-column field=\"acciones\" label=\"Acciones\" centered v-slot=\"props\">\r\n                        <div class=\"buttons is-centered\">\r\n                            <b-tooltip label=\"Restaurar al inventario\" position=\"is-top\">\r\n                                <b-button class=\"btn-primary\" @click=\"restaurarInventario(props.row)\">\r\n                                    <b-icon icon=\"restore\" />\r\n                                </b-button>\r\n                            </b-tooltip>\r\n                            <b-tooltip label=\"Eliminar permanentemente\" position=\"is-top\">\r\n                                <b-button class=\"btn-link\" @click=\"eliminarPermanente(props.row.id)\">\r\n                                    <b-icon icon=\"delete-forever\" />\r\n                                </b-button>\r\n                            </b-tooltip>\r\n                        </div>\r\n                    </b-table-column>\r\n                </b-table>\r\n                <b-pagination\r\n                    v-if=\"totalPages > 1\"\r\n                    :total=\"totalProductosEliminados\"\r\n                    :current.sync=\"currentPage\"\r\n                    :per-page=\"perPage\"\r\n                    :rounded=\"isPaginationRounded\"\r\n                    :simple=\"isPaginationSimple\"\r\n                    :position=\"paginationPosition\"\r\n                    @change=\"obtenerProductosEliminados\"\r\n                ></b-pagination>\r\n            </div>\r\n        </div>\r\n        \r\n        <b-loading :is-full-page=\"false\" v-model=\"cargando\" :can-cancel=\"false\"></b-loading>\r\n    </div>\r\n</template>\r\n    \r\n<script>\r\nimport MensajeInicial from '../Extras/MensajeInicial'\r\nimport apiRequest from '../../Servicios/HttpService';\r\n\r\nexport default {\r\n    name: \"ProductosEliminados\",\r\n    components: { MensajeInicial },\r\n    \r\n    data: () => ({\r\n        productosEliminados: [],\r\n        cargando: false,\r\n        isPaginated: true,\r\n        isPaginationSimple: false,\r\n        isPaginationRounded: true,\r\n        paginationPosition: 'bottom',\r\n        defaultSortDirection: 'asc',\r\n        sortIcon: 'arrow-up',\r\n        sortIconSize: 'is-medium',\r\n        currentPage: 1,\r\n        perPage: 10,\r\n        totalProductosEliminados: 0,\r\n        totalPages: 1,\r\n        totalValorEliminados: 0\r\n    }),\r\n    \r\n    mounted() {\r\n        this.obtenerProductosEliminados();\r\n    },\r\n    \r\n    methods: {\r\n        formatDate(dateString) {\r\n            if (!dateString) return ''\r\n            const date = new Date(dateString)\r\n            return date.toLocaleDateString('es-MX', { \r\n                year: 'numeric', \r\n                month: 'long', \r\n                day: 'numeric',\r\n                hour: '2-digit',\r\n                minute: '2-digit'\r\n            })\r\n        },\r\n    \r\n        restaurarInventario(producto) {\r\n            this.$buefy.dialog.confirm({\r\n                title: 'Restaurar al inventario',\r\n                message: `¿Deseas restaurar el producto ${producto.name} al inventario?`,\r\n                confirmText: 'Sí, restaurar',\r\n                cancelText: 'Cancelar',\r\n                type: 'is-success',\r\n                hasIcon: true,\r\n                onConfirm: () => {\r\n                    this.cargando = true\r\n                    \r\n                    // Cambiamos el método y la ruta para usar el nuevo endpoint\r\n                    apiRequest({\r\n                        method: 'POST',\r\n                        path: `products/activate-product/${producto.id}`\r\n                    })\r\n                    .then(resultado => {\r\n                        this.cargando = false\r\n                        if (resultado) {\r\n                            this.$buefy.toast.open({\r\n                                message: 'Producto restaurado al inventario correctamente',\r\n                                type: 'is-success'\r\n                            })\r\n                            this.obtenerProductosEliminados()\r\n                            // Emitimos un evento para que el componente padre sepa que debe actualizar el inventario\r\n                            this.$emit('producto-restaurado')\r\n                        } else {\r\n                            this.$buefy.toast.open({\r\n                                message: 'Error al restaurar el producto',\r\n                                type: 'is-danger'\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        },\r\n    \r\n        eliminarPermanente(idProducto) {\r\n            this.$buefy.dialog.confirm({\r\n                title: 'Eliminar permanentemente',\r\n                message: 'Esta acción eliminará permanentemente el producto. ¿Deseas continuar?',\r\n                confirmText: 'Sí, eliminar',\r\n                cancelText: 'Cancelar',\r\n                type: 'is-danger',\r\n                hasIcon: true,\r\n                onConfirm: () => {\r\n                    this.cargando = true\r\n                    \r\n                    apiRequest({\r\n                        method: 'DELETE',\r\n                        path: `products/${idProducto}/permanent`\r\n                    })\r\n                    .then(resultado => {\r\n                        this.cargando = false\r\n                        if (resultado) {\r\n                            this.$buefy.toast.open({\r\n                                message: 'Producto eliminado permanentemente',\r\n                                type: 'is-success'\r\n                            })\r\n                            this.obtenerProductosEliminados()\r\n                        } else {\r\n                            this.$buefy.toast.open({\r\n                                message: 'Error al eliminar el producto',\r\n                                type: 'is-danger'\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        },\r\n    \r\n        obtenerProductosEliminados() {\r\n            this.cargando = true\r\n            \r\n            apiRequest({\r\n                method: \"GET\",\r\n                path: `products/findDeleted?page=${this.currentPage}&limit=${this.perPage}`\r\n            })\r\n            .then(respuesta => {\r\n                if (respuesta && respuesta.data) {\r\n                    this.productosEliminados = respuesta.data.data || [];\r\n                    this.totalProductosEliminados = respuesta.data.total || 0;\r\n                    this.totalPages = respuesta.data.totalPages || 1;\r\n                    \r\n                    // Calcular el valor total de los productos eliminados\r\n                    let valorTotal = 0;\r\n                    if (this.productosEliminados && this.productosEliminados.length > 0) {\r\n                        this.productosEliminados.forEach(producto => {\r\n                            if (producto.purchasePrice && producto.stock) {\r\n                                valorTotal += producto.purchasePrice * producto.stock;\r\n                            }\r\n                        });\r\n                    }\r\n                    this.totalValorEliminados = valorTotal;\r\n                } else {\r\n                    // Si no hay datos, inicializar con arrays vacíos\r\n                    this.productosEliminados = [];\r\n                    this.totalProductosEliminados = 0;\r\n                    this.totalPages = 1;\r\n                    this.totalValorEliminados = 0;\r\n                }\r\n                \r\n                this.cargando = false;\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error al obtener productos eliminados:\", error);\r\n                this.cargando = false;\r\n                this.productosEliminados = [];\r\n                this.totalProductosEliminados = 0;\r\n                this.totalPages = 1;\r\n                this.totalValorEliminados = 0;\r\n                \r\n                this.$buefy.toast.open({\r\n                    message: 'Error al cargar los productos eliminados',\r\n                    type: 'is-danger'\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}