{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiRequest from '@/Servicios/HttpService';\nimport FormUsuario from './FormUsuario';\nexport default {\n  name: \"EditarUsuario\",\n  components: {\n    FormUsuario\n  },\n  data: () => ({\n    datosUsuario: null,\n    cargando: false\n  }),\n  async mounted() {\n    this.cargando = true;\n    // const usuario = await HttpService.obtenerConConsultas('usuarios.php', {\n    //     accion: 'obtener_por_id',\n    //     id: this.$route.params.id\n    // }) \n\n    const usuario = await apiRequest({\n      method: \"get\",\n      path: `users/${this.$route.params.id}`\n    });\n    this.datosUsuario = usuario.data;\n    this.cargando = false;\n  },\n  methods: {\n    async onEditar(datosUsuario) {\n      this.cargando = true;\n      // const resultado = await HttpService.editar('usuarios.php',{\n      //     accion: 'editar',\n      //     usuario: datosUsuario\n      // })\n\n      const resultado = await apiRequest({\n        method: 'PUT',\n        path: `users/${this.$route.params.id}`,\n        data: datosUsuario\n      });\n      if (resultado.data) {\n        this.cargando = false;\n        this.$buefy.toast.open({\n          type: 'is-info',\n          message: 'Información de usuario actualizada con éxito.'\n        });\n        this.$router.push({\n          name: 'UsuariosComponent'\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiRequest","FormUsuario","name","components","data","datosUsuario","cargando","mounted","usuario","method","path","$route","params","id","methods","onEditar","resultado","$buefy","toast","open","type","message","$router","push"],"sources":["src/components/Usuarios/EditarUsuario.vue"],"sourcesContent":["<template>\r\n    <section>\r\n        <h1 class=\"title is-1\">Editar usuario</h1>\r\n         <b-breadcrumb\r\n            align=\"is-left\"\r\n        >\r\n            <b-breadcrumb-item tag='router-link' to=\"/\">Inicio</b-breadcrumb-item>\r\n            <b-breadcrumb-item tag='router-link' to=\"/usuarios\">Usuarios</b-breadcrumb-item>\r\n            <b-breadcrumb-item active>Editar usuario</b-breadcrumb-item>\r\n        </b-breadcrumb>\r\n        <form-usuario :usuario=\"datosUsuario\" @registrar=\"onEditar\" v-if=\"datosUsuario\"/>\r\n        <b-loading :is-full-page=\"true\" v-model=\"cargando\" :can-cancel=\"false\"></b-loading>\r\n    </section>\r\n</template>\r\n<script>\r\n\r\n    import apiRequest from '@/Servicios/HttpService';\r\nimport FormUsuario from './FormUsuario'\r\n\r\n    export default{\r\n        name: \"EditarUsuario\",\r\n        components: { FormUsuario },\r\n\r\n        data:()=>({\r\n            datosUsuario: null,\r\n            cargando: false\r\n        }),\r\n\r\n        async mounted(){\r\n            this.cargando = true\r\n            // const usuario = await HttpService.obtenerConConsultas('usuarios.php', {\r\n            //     accion: 'obtener_por_id',\r\n            //     id: this.$route.params.id\r\n            // }) \r\n\r\n            const usuario = await apiRequest({\r\n                method: \"get\", \r\n                path: `users/${this.$route.params.id}`\r\n            })\r\n            this.datosUsuario = usuario.data\r\n            this.cargando = false\r\n        },\r\n\r\n        methods: {\r\n            async onEditar(datosUsuario) {\r\n                this.cargando = true\r\n                // const resultado = await HttpService.editar('usuarios.php',{\r\n                //     accion: 'editar',\r\n                //     usuario: datosUsuario\r\n                // })\r\n\r\n                const resultado = await apiRequest({\r\n                    method: 'PUT', \r\n                    path: `users/${this.$route.params.id}`,\r\n                    data: datosUsuario\r\n                })\r\n\r\n                if(resultado.data) {\r\n                    this.cargando = false\r\n                    this.$buefy.toast.open({\r\n                         type: 'is-info',\r\n                         message: 'Información de usuario actualizada con éxito.'\r\n                    })\r\n                    this.$router.push({ name: 'UsuariosComponent'})\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"],"mappings":";AAgBA,OAAAA,UAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EAEAG,IAAA,EAAAA,CAAA;IACAC,YAAA;IACAC,QAAA;EACA;EAEA,MAAAC,QAAA;IACA,KAAAD,QAAA;IACA;IACA;IACA;IACA;;IAEA,MAAAE,OAAA,SAAAR,UAAA;MACAS,MAAA;MACAC,IAAA,gBAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA;IACA,KAAAR,YAAA,GAAAG,OAAA,CAAAJ,IAAA;IACA,KAAAE,QAAA;EACA;EAEAQ,OAAA;IACA,MAAAC,SAAAV,YAAA;MACA,KAAAC,QAAA;MACA;MACA;MACA;MACA;;MAEA,MAAAU,SAAA,SAAAhB,UAAA;QACAS,MAAA;QACAC,IAAA,gBAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;QACAT,IAAA,EAAAC;MACA;MAEA,IAAAW,SAAA,CAAAZ,IAAA;QACA,KAAAE,QAAA;QACA,KAAAW,MAAA,CAAAC,KAAA,CAAAC,IAAA;UACAC,IAAA;UACAC,OAAA;QACA;QACA,KAAAC,OAAA,CAAAC,IAAA;UAAArB,IAAA;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}