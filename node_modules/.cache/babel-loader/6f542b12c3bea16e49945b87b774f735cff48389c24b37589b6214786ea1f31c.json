{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiRequest from '../../Servicios/HttpService';\nimport FormCliente from './FormCliente';\nexport default {\n  name: \"EditaCliente\",\n  components: {\n    FormCliente\n  },\n  data: () => ({\n    cargando: false,\n    datosCliente: null\n  }),\n  async mounted() {\n    this.cargando = true;\n    // const cliente = await HttpService.obtenerConConsultas('clientes.php', {\n    //     accion: 'obtener_por_id',\n    //     id: this.$route.params.id\n    // })\n    apiRequest({\n      method: 'GET',\n      path: `customers/${this.$route.params.id}`\n    }).then(cliente => {\n      this.datosCliente = cliente.data;\n      this.cargando = false;\n    });\n  },\n  methods: {\n    async onEditar(datosCliente) {\n      this.cargando = true;\n      // const resultado = await HttpService.editar('clientes.php',{\n      //     accion: 'editar',\n      //     cliente: datosCliente\n      // })\n\n      apiRequest({\n        method: 'PUT',\n        path: `customers/${this.$route.params.id}`,\n        data: datosCliente\n      }).then(resultado => {\n        if (!resultado) {\n          this.$buefy.toast.open('Error al editar');\n          this.cargando = false;\n          return;\n        } else {\n          this.cargando = false;\n          this.$buefy.toast.open({\n            type: 'is-info',\n            message: 'Información de cliente actualizada con éxito.'\n          });\n          this.$router.push({\n            name: 'ClientesComponent'\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["apiRequest","FormCliente","name","components","data","cargando","datosCliente","mounted","method","path","$route","params","id","then","cliente","methods","onEditar","resultado","$buefy","toast","open","type","message","$router","push"],"sources":["src/components/Clientes/EditarCliente.vue"],"sourcesContent":["<template>\r\n    <section>\r\n        <h1 class=\"title is-1\">Editar cliente</h1>\r\n        <b-breadcrumb\r\n            align=\"is-left\"\r\n        >\r\n            <b-breadcrumb-item tag='router-link' to=\"/\">Inicio</b-breadcrumb-item>\r\n            <b-breadcrumb-item tag='router-link' to=\"/cientes\">Clientes</b-breadcrumb-item>\r\n            <b-breadcrumb-item active>Editar cliente</b-breadcrumb-item>\r\n        </b-breadcrumb>\r\n        <form-cliente :cliente=\"datosCliente\" @registrar=\"onEditar\" v-if=\"datosCliente\" />\r\n        <b-loading :is-full-page=\"true\" v-model=\"cargando\" :can-cancel=\"false\"></b-loading>\r\n    </section>\r\n</template>\r\n<script>\r\n    import apiRequest from '../../Servicios/HttpService';\r\n    import FormCliente from './FormCliente'\r\n\r\n    export default{\r\n        name: \"EditaCliente\",\r\n        components: { FormCliente },\r\n\r\n        data:()=>({\r\n            cargando: false,\r\n            datosCliente: null\r\n        }),\r\n\r\n        async mounted(){\r\n            this.cargando = true    \r\n            // const cliente = await HttpService.obtenerConConsultas('clientes.php', {\r\n            //     accion: 'obtener_por_id',\r\n            //     id: this.$route.params.id\r\n            // })\r\n            apiRequest({\r\n                method: 'GET',\r\n            path: `customers/${this.$route.params.id}`\r\n            }).then(cliente => {\r\n                this.datosCliente = cliente.data\r\n                this.cargando = false\r\n            })\r\n        },\r\n\r\n        methods: {\r\n            async onEditar(datosCliente){\r\n                this.cargando = true\r\n                // const resultado = await HttpService.editar('clientes.php',{\r\n                //     accion: 'editar',\r\n                //     cliente: datosCliente\r\n                // })\r\n\r\n                apiRequest({\r\n                    method: 'PUT',\r\n                    path: `customers/${this.$route.params.id}`,\r\n                    data: datosCliente\r\n                }).then(resultado => {\r\n                    if(!resultado) {\r\n                        this.$buefy.toast.open('Error al editar')\r\n                        this.cargando = false\r\n                        return\r\n                    }\r\n                    else{\r\n                        this.cargando = false\r\n                        this.$buefy.toast.open({\r\n                            type: 'is-info',\r\n                            message: 'Información de cliente actualizada con éxito.'\r\n                        })\r\n                        this.$router.push({ name: 'ClientesComponent'})\r\n                    }\r\n                })\r\n\r\n            }\r\n        }\r\n    }\r\n</script>"],"mappings":";AAeA,OAAAA,UAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EAEAG,IAAA,EAAAA,CAAA;IACAC,QAAA;IACAC,YAAA;EACA;EAEA,MAAAC,QAAA;IACA,KAAAF,QAAA;IACA;IACA;IACA;IACA;IACAL,UAAA;MACAQ,MAAA;MACAC,IAAA,oBAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA,GAAAC,IAAA,CAAAC,OAAA;MACA,KAAAR,YAAA,GAAAQ,OAAA,CAAAV,IAAA;MACA,KAAAC,QAAA;IACA;EACA;EAEAU,OAAA;IACA,MAAAC,SAAAV,YAAA;MACA,KAAAD,QAAA;MACA;MACA;MACA;MACA;;MAEAL,UAAA;QACAQ,MAAA;QACAC,IAAA,oBAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;QACAR,IAAA,EAAAE;MACA,GAAAO,IAAA,CAAAI,SAAA;QACA,KAAAA,SAAA;UACA,KAAAC,MAAA,CAAAC,KAAA,CAAAC,IAAA;UACA,KAAAf,QAAA;UACA;QACA,OACA;UACA,KAAAA,QAAA;UACA,KAAAa,MAAA,CAAAC,KAAA,CAAAC,IAAA;YACAC,IAAA;YACAC,OAAA;UACA;UACA,KAAAC,OAAA,CAAAC,IAAA;YAAAtB,IAAA;UAAA;QACA;MACA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}