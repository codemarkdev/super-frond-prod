{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiRequest from '../../Servicios/HttpService';\nimport FormProducto from './FormProducto';\nexport default {\n  name: \"EditarProducto\",\n  components: {\n    FormProducto\n  },\n  data: () => ({\n    cargando: false,\n    datosProducto: null\n  }),\n  watch: {\n    productoProp(newVal) {\n      this.producto = {\n        ...newVal\n      };\n      this.setSelectedValues();\n    }\n  },\n  async mounted() {\n    this.cargando = true;\n    const producto = await apiRequest({\n      method: 'GET',\n      path: `products/${this.$route.params.id}`\n    });\n    this.datosProducto = producto.data;\n    this.cargando = false;\n    this.$nextTick(() => {\n      this.$refs.formProducto.setSelectedValues();\n    });\n  },\n  methods: {\n    async onEditar(datosProducto) {\n      this.cargando = true;\n      console.log('price', datosProducto);\n      const stock = Number(datosProducto.stock);\n      const {\n        status\n      } = await apiRequest({\n        method: 'PATCH',\n        path: `products/${this.$route.params.id}`,\n        data: {\n          code: datosProducto.code,\n          name: datosProducto.name,\n          purchasePrice: datosProducto.purchasePrice,\n          salePrice: datosProducto.salePrice,\n          stock: stock,\n          reservedStock: 0,\n          wholesaleSale: datosProducto.wholesaleSale,\n          touristPrice: datosProducto.touristPrice,\n          wholesalePrice: datosProducto.wholesalePrice,\n          wholesaleQuantity: datosProducto.wholesaleQuantity,\n          brandId: datosProducto.brandId,\n          categoryId: datosProducto.categoryId\n        }\n      });\n      if (status == 200) {\n        this.cargando = false;\n        this.$buefy.toast.open({\n          type: 'is-info',\n          message: 'Información de producto actualizada con éxito.'\n        });\n        this.$router.push({\n          name: 'ProductosComponent'\n        });\n      } else {\n        this.cargando = false;\n        this.$buefy.toast.open({\n          type: 'is-danger',\n          message: 'Información de producto fallo al actualizar.'\n        });\n        this.$router.push({\n          name: 'ProductosComponent'\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiRequest","FormProducto","name","components","data","cargando","datosProducto","watch","productoProp","newVal","producto","setSelectedValues","mounted","method","path","$route","params","id","$nextTick","$refs","formProducto","methods","onEditar","console","log","stock","Number","status","code","purchasePrice","salePrice","reservedStock","wholesaleSale","touristPrice","wholesalePrice","wholesaleQuantity","brandId","categoryId","$buefy","toast","open","type","message","$router","push"],"sources":["src/components/Inventario/EditarProducto.vue"],"sourcesContent":["<template>\r\n    <section>\r\n        <h1 class=\"title is-1\">Editar producto</h1>\r\n        <b-breadcrumb align=\"is-left\">\r\n            <b-breadcrumb-item tag='router-link' to=\"/\">Inicio</b-breadcrumb-item>\r\n            <b-breadcrumb-item tag='router-link' to=\"/inventario\">Inventario</b-breadcrumb-item>\r\n            <b-breadcrumb-item active>Editar producto</b-breadcrumb-item>\r\n        </b-breadcrumb>\r\n        <form-producto :productoProp=\"datosProducto\" @registrado=\"onEditar\" v-if=\"datosProducto\" ref=\"formProducto\" />\r\n    </section>\r\n</template>\r\n<script>\r\nimport apiRequest from '../../Servicios/HttpService';\r\nimport FormProducto from './FormProducto'\r\nexport default {\r\n    name: \"EditarProducto\",\r\n    components: { FormProducto },\r\n\r\n    data: () => ({\r\n        cargando: false,\r\n        datosProducto: null\r\n    }),\r\n    watch: {\r\n        productoProp(newVal) {\r\n            this.producto = { ...newVal };\r\n            this.setSelectedValues(); \r\n        }\r\n    },\r\n\r\n    async mounted() {\r\n        this.cargando = true\r\n        const producto = await apiRequest({\r\n            method: 'GET',\r\n            path: `products/${this.$route.params.id}`\r\n        })\r\n        this.datosProducto = producto.data\r\n        this.cargando = false\r\n        this.$nextTick(() => {\r\n            this.$refs.formProducto.setSelectedValues();\r\n        });\r\n    },\r\n\r\n    methods: {\r\n        async onEditar(datosProducto) {\r\n            this.cargando = true\r\n\t\t\tconsole.log('price', datosProducto)\r\n            const stock = Number(datosProducto.stock)\r\n            const { status } = await apiRequest({\r\n                method: 'PATCH',\r\n                path: `products/${this.$route.params.id}`,\r\n                data: {\r\n                    code: datosProducto.code,\r\n                    name: datosProducto.name,\r\n                    purchasePrice: datosProducto.purchasePrice,\r\n                    salePrice: datosProducto.salePrice,\r\n                    stock: stock,\r\n                    reservedStock: 0,\r\n                    wholesaleSale: datosProducto.wholesaleSale,\r\n                    touristPrice: datosProducto.touristPrice,\r\n                    wholesalePrice: datosProducto.wholesalePrice,\r\n                    wholesaleQuantity: datosProducto.wholesaleQuantity,\r\n                    brandId: datosProducto.brandId,\r\n                    categoryId: datosProducto.categoryId\r\n                }\r\n            })\r\n\r\n            if (status == 200) {\r\n                this.cargando = false\r\n                this.$buefy.toast.open({\r\n                    type: 'is-info',\r\n                    message: 'Información de producto actualizada con éxito.'\r\n                })\r\n                this.$router.push({ name: 'ProductosComponent' })\r\n            } else {\r\n                this.cargando = false\r\n                this.$buefy.toast.open({\r\n                    type: 'is-danger',\r\n                    message: 'Información de producto fallo al actualizar.'\r\n                })\r\n                this.$router.push({ name: 'ProductosComponent' })\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";AAYA,OAAAA,UAAA;AACA,OAAAC,YAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EAEAG,IAAA,EAAAA,CAAA;IACAC,QAAA;IACAC,aAAA;EACA;EACAC,KAAA;IACAC,aAAAC,MAAA;MACA,KAAAC,QAAA;QAAA,GAAAD;MAAA;MACA,KAAAE,iBAAA;IACA;EACA;EAEA,MAAAC,QAAA;IACA,KAAAP,QAAA;IACA,MAAAK,QAAA,SAAAV,UAAA;MACAa,MAAA;MACAC,IAAA,mBAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA;IACA,KAAAX,aAAA,GAAAI,QAAA,CAAAN,IAAA;IACA,KAAAC,QAAA;IACA,KAAAa,SAAA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAT,iBAAA;IACA;EACA;EAEAU,OAAA;IACA,MAAAC,SAAAhB,aAAA;MACA,KAAAD,QAAA;MACAkB,OAAA,CAAAC,GAAA,UAAAlB,aAAA;MACA,MAAAmB,KAAA,GAAAC,MAAA,CAAApB,aAAA,CAAAmB,KAAA;MACA;QAAAE;MAAA,UAAA3B,UAAA;QACAa,MAAA;QACAC,IAAA,mBAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;QACAb,IAAA;UACAwB,IAAA,EAAAtB,aAAA,CAAAsB,IAAA;UACA1B,IAAA,EAAAI,aAAA,CAAAJ,IAAA;UACA2B,aAAA,EAAAvB,aAAA,CAAAuB,aAAA;UACAC,SAAA,EAAAxB,aAAA,CAAAwB,SAAA;UACAL,KAAA,EAAAA,KAAA;UACAM,aAAA;UACAC,aAAA,EAAA1B,aAAA,CAAA0B,aAAA;UACAC,YAAA,EAAA3B,aAAA,CAAA2B,YAAA;UACAC,cAAA,EAAA5B,aAAA,CAAA4B,cAAA;UACAC,iBAAA,EAAA7B,aAAA,CAAA6B,iBAAA;UACAC,OAAA,EAAA9B,aAAA,CAAA8B,OAAA;UACAC,UAAA,EAAA/B,aAAA,CAAA+B;QACA;MACA;MAEA,IAAAV,MAAA;QACA,KAAAtB,QAAA;QACA,KAAAiC,MAAA,CAAAC,KAAA,CAAAC,IAAA;UACAC,IAAA;UACAC,OAAA;QACA;QACA,KAAAC,OAAA,CAAAC,IAAA;UAAA1C,IAAA;QAAA;MACA;QACA,KAAAG,QAAA;QACA,KAAAiC,MAAA,CAAAC,KAAA,CAAAC,IAAA;UACAC,IAAA;UACAC,OAAA;QACA;QACA,KAAAC,OAAA,CAAAC,IAAA;UAAA1C,IAAA;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}