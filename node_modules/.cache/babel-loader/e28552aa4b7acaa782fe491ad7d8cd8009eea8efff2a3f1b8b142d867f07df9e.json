{"ast":null,"code":"export default {\n  name: \"TablaProductos\",\n  props: [\"listaProductos\"],\n  data: () => ({}),\n  methods: {\n    quitar(id) {\n      this.$emit(\"quitar\", id);\n    },\n    aumentar(producto) {\n      this.$emit(\"aumentar\", producto);\n    },\n    // Método para calcular el subtotal con precisión\n    calcularSubtotal(producto) {\n      return parseFloat((producto.precio * producto.cantidad).toFixed(2));\n    },\n    // Método para formatear precios y evitar problemas de precisión\n    formatPrice(value) {\n      // Asegurarse de que value sea un número\n      const num = typeof value === 'string' ? parseFloat(value) : value;\n      // Usar toFixed(2) para obtener 2 decimales exactos\n      return parseFloat(num).toFixed(2);\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","methods","quitar","id","$emit","aumentar","producto","calcularSubtotal","parseFloat","precio","cantidad","toFixed","formatPrice","value","num"],"sources":["src/components/Ventas/TablaProductos.vue"],"sourcesContent":["<template>\r\n\t<b-table\r\n\t\t:data=\"listaProductos\">\r\n\t\t\t<b-table-column field=\"codigo\" label=\"Código\" v-slot=\"props\">\r\n\t\t\t\t{{ props.row.codigo }}\r\n\t\t\t</b-table-column>\r\n\r\n\t\t\t<b-table-column field=\"nombre\" label=\"Nombre\" v-slot=\"props\">\r\n\t\t\t\t{{ props.row.nombre }}\r\n\t\t\t</b-table-column>\r\n\r\n\t\t\t<b-table-column field=\"precio\" label=\"Precio\" v-slot=\"props\">\r\n\t\t\t\t${{ formatPrice(props.row.precio) }}\r\n\t\t\t</b-table-column>\r\n\r\n\t\t\t<b-table-column field=\"cantidad\" label=\"Cantidad\" v-slot=\"props\">\r\n\t\t\t\t<b-field>\r\n\t\t\t\t\t<b-numberinput @input=\"aumentar(props.row)\" min=\"1\" :max=\"props.row.existencia\" v-model=\"props.row.cantidad\" style=\"width: 13em\">\r\n\t\t\t\t\t</b-numberinput>\r\n\t\t\t\t</b-field>\r\n\t\t\t</b-table-column>\r\n\r\n\t\t\t<b-table-column field=\"subtotal\" label=\"Subtotal\" v-slot=\"props\">\r\n\t\t\t\t<b>${{ formatPrice(calcularSubtotal(props.row)) }}</b>\r\n\t\t\t</b-table-column>\r\n\r\n\t\t\t<b-table-column field=\"quitar\" label=\"Quitar\" v-slot=\"props\">\r\n\t\t\t\t<b-button icon-left=\"delete\" type=\"is-danger\" @click=\"quitar(props.row.id)\">\r\n\t\t\t\t\tQuitar\r\n\t\t\t\t</b-button>\r\n\t\t\t</b-table-column>\r\n\r\n\r\n\t\t</b-table>\r\n</template>\r\n<script>\r\n\texport default {\r\n\t\tname: \"TablaProductos\",\r\n\t\tprops: [\"listaProductos\"],\r\n\r\n\t\tdata:()=>({\r\n\r\n\t\t}),\r\n\r\n\t\tmethods: {\r\n\t\t\tquitar(id){\r\n\t\t\t\tthis.$emit(\"quitar\", id)\r\n\t\t\t},\r\n\r\n\t\t\taumentar(producto){\r\n\t\t\t\tthis.$emit(\"aumentar\", producto)\r\n\t\t\t},\r\n            \r\n            // Método para calcular el subtotal con precisión\r\n            calcularSubtotal(producto) {\r\n                return parseFloat((producto.precio * producto.cantidad).toFixed(2));\r\n            },\r\n            \r\n            // Método para formatear precios y evitar problemas de precisión\r\n            formatPrice(value) {\r\n                // Asegurarse de que value sea un número\r\n                const num = typeof value === 'string' ? parseFloat(value) : value;\r\n                // Usar toFixed(2) para obtener 2 decimales exactos\r\n                return parseFloat(num).toFixed(2);\r\n            }\r\n\t\t}\r\n\t}\r\n</script>"],"mappings":"AAoCA;EACAA,IAAA;EACAC,KAAA;EAEAC,IAAA,EAAAA,CAAA,OAEA;EAEAC,OAAA;IACAC,OAAAC,EAAA;MACA,KAAAC,KAAA,WAAAD,EAAA;IACA;IAEAE,SAAAC,QAAA;MACA,KAAAF,KAAA,aAAAE,QAAA;IACA;IAEA;IACAC,iBAAAD,QAAA;MACA,OAAAE,UAAA,EAAAF,QAAA,CAAAG,MAAA,GAAAH,QAAA,CAAAI,QAAA,EAAAC,OAAA;IACA;IAEA;IACAC,YAAAC,KAAA;MACA;MACA,MAAAC,GAAA,UAAAD,KAAA,gBAAAL,UAAA,CAAAK,KAAA,IAAAA,KAAA;MACA;MACA,OAAAL,UAAA,CAAAM,GAAA,EAAAH,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}