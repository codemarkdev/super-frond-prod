{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport apiRequest from '@/Servicios/HttpService';\nimport AyudanteSesion from '@/Servicios/AyudanteSesion';\nimport '@/components/stilos/order-details.css';\nimport DetailsEliminados from '../OrdenesDetalles/Details-eliminados.vue';\nimport BuscarDetails from './BusacarDetails.vue';\nimport CreateOrden from './CreateOrden.vue';\nimport Ordenes from './Ordenes.vue';\nimport OrdenesLista from './OrdenesLista.vue';\nimport OrderDelets from './OrderDelets.vue';\nexport default {\n  name: 'OrderDetails',\n  components: {\n    DetailsEliminados,\n    BuscarDetails,\n    CreateOrden,\n    Ordenes,\n    OrdenesLista,\n    OrderDelets\n  },\n  data() {\n    return {\n      activeTab: 'activos',\n      ordenActual: {\n        invoiceNumber: '',\n        products: []\n      },\n      enviando: false,\n      error: null,\n      exitoso: false,\n      categorias: [],\n      marcas: [],\n      productosDisponibles: [],\n      // A√±adido para almacenar la lista de productos\n      cargandoCategorias: false,\n      cargandoMarcas: false,\n      cargandoProductos: false,\n      // A√±adido para controlar el estado de carga de productos\n      esAdmin: false,\n      ordenesDisponibles: [],\n      cargandoOrdenes: false,\n      paginaActual: 1,\n      totalPaginas: 1,\n      limite: 100 // Usar un l√≠mite alto para obtener m√°s productos de una vez\n    };\n  },\n  computed: {\n    ordenValida() {\n      if (this.ordenActual.products.length === 0) return false;\n      return this.ordenActual.invoiceNumber && this.ordenActual.products.every(p => {\n        if (p.esExistente) {\n          return p.productId && p.quantity && p.purchasePrice;\n        } else {\n          return p.code && p.name && p.purchasePrice && p.salePrice && p.touristPrice && p.quantity && p.brandId && p.categoryId;\n        }\n      });\n    }\n  },\n  created() {\n    this.cargarCategorias();\n    this.cargarMarcas();\n    this.cargarProductos(); // A√±adido para cargar la lista de productos al inicio\n    this.verificarAdmin();\n\n    // üëá Tambi√©n lo cargamos aqu√≠ por si el tab inicial es 'activos'\n    if (this.activeTab === 'activos') {\n      this.ordenActual.invoiceNumber = '';\n      this.cargarOrdenesDisponibles();\n    }\n  },\n  methods: {\n    // M√©todo actualizado para usar la estructura correcta de la API\n    async cargarProductos() {\n      this.cargandoProductos = true;\n      try {\n        // Usar los par√°metros de paginaci√≥n correctos\n        const response = await apiRequest({\n          method: 'GET',\n          path: `products?page=${this.paginaActual}&limit=${this.limite}`\n        });\n        if (response.status === 200) {\n          // Extraer los datos seg√∫n la estructura de respuesta proporcionada\n          if (response.data && response.data.data && Array.isArray(response.data.data)) {\n            this.productosDisponibles = response.data.data;\n            this.totalPaginas = response.data.totalPages || 1;\n\n            // Si hay m√°s p√°ginas y necesitamos cargar m√°s productos\n            if (this.totalPaginas > 1 && this.paginaActual < this.totalPaginas) {\n              this.cargarMasProductos();\n            }\n          } else {\n            console.warn('Estructura de respuesta inesperada:', response.data);\n            this.productosDisponibles = [];\n          }\n        } else {\n          console.error('Error al cargar productos:', response.status);\n          this.productosDisponibles = [];\n        }\n      } catch (err) {\n        console.error('Error al cargar productos:', err);\n        this.$buefy.toast.open({\n          message: `Error al cargar productos: ${err.message || 'Error desconocido'}`,\n          type: 'is-danger'\n        });\n        this.productosDisponibles = [];\n      } finally {\n        this.cargandoProductos = false;\n      }\n    },\n    // M√©todo para cargar m√°s productos si hay paginaci√≥n\n    async cargarMasProductos() {\n      if (this.paginaActual >= this.totalPaginas) return;\n      this.paginaActual++;\n      this.cargandoProductos = true;\n      try {\n        const response = await apiRequest({\n          method: 'GET',\n          path: `products?page=${this.paginaActual}&limit=${this.limite}`\n        });\n        if (response.status === 200 && response.data && response.data.data) {\n          // A√±adir los nuevos productos a la lista existente\n          this.productosDisponibles = [...this.productosDisponibles, ...response.data.data];\n\n          // Verificar si hay m√°s p√°ginas para cargar\n          if (this.paginaActual < response.data.totalPages) {\n            this.cargarMasProductos(); // Cargar la siguiente p√°gina recursivamente\n          }\n        }\n      } catch (err) {\n        console.error('Error al cargar m√°s productos:', err);\n      } finally {\n        this.cargandoProductos = false;\n      }\n    },\n    // ‚úÖ Este m√©todo recarga las √≥rdenes solo cuando se entra al tab de 'activos'\n    cambiarTab(tab) {\n      if ((tab === 'eliminados' || tab === 'pedidosEliminados') && !this.esAdmin) {\n        this.$buefy.toast.open({\n          message: 'No tiene permisos para acceder a esta secci√≥n',\n          type: 'is-danger'\n        });\n        return;\n      }\n      this.activeTab = tab;\n      if (tab === 'activos') {\n        this.ordenActual.invoiceNumber = '';\n        this.cargarOrdenesDisponibles();\n\n        // Asegurarse de que tenemos productos cargados cuando entramos a este tab\n        if (this.productosDisponibles.length === 0 && !this.cargandoProductos) {\n          this.cargarProductos();\n        }\n      }\n    },\n    async cargarOrdenesDisponibles() {\n      this.cargandoOrdenes = true;\n      try {\n        const response = await apiRequest({\n          method: 'GET',\n          path: 'orders/findActive'\n        });\n        if (response.status === 200) {\n          this.ordenesDisponibles = response.data;\n        } else {\n          console.error('Error al cargar √≥rdenes disponibles:', response.status);\n        }\n      } catch (err) {\n        console.error('Error al cargar √≥rdenes disponibles:', err);\n        this.$buefy.toast.open({\n          message: `Error al cargar √≥rdenes disponibles: ${err.message || 'Error desconocido'}`,\n          type: 'is-danger'\n        });\n      } finally {\n        this.cargandoOrdenes = false;\n      }\n    },\n    verificarAdmin() {\n      const datosUsuario = AyudanteSesion.obtenerDatosSesion();\n      this.esAdmin = datosUsuario.rol === 'Admin';\n      if (!this.esAdmin && (this.activeTab === 'eliminados' || this.activeTab === 'pedidosEliminados')) {\n        this.activeTab = 'activos';\n      }\n    },\n    onDetalleRestaurado() {\n      this.$buefy.toast.open({\n        message: 'Detalle restaurado correctamente',\n        type: 'is-success'\n      });\n    },\n    onOrdenRestaurada() {\n      this.$buefy.toast.open({\n        message: 'Pedido restaurado correctamente',\n        type: 'is-success'\n      });\n    },\n    async cargarCategorias() {\n      this.cargandoCategorias = true;\n      try {\n        const response = await apiRequest({\n          method: 'GET',\n          path: 'categories'\n        });\n        if (response.status === 200) this.categorias = response.data;\n      } catch (err) {\n        console.error('Error al cargar categor√≠as:', err);\n      } finally {\n        this.cargandoCategorias = false;\n      }\n    },\n    async cargarMarcas() {\n      this.cargandoMarcas = true;\n      try {\n        const response = await apiRequest({\n          method: 'GET',\n          path: 'brands'\n        });\n        if (response.status === 200) this.marcas = response.data;\n      } catch (err) {\n        console.error('Error al cargar marcas:', err);\n      } finally {\n        this.cargandoMarcas = false;\n      }\n    },\n    obtenerNombreCategoria(categoriaId) {\n      if (!categoriaId) return '';\n      const catId = parseInt(categoriaId);\n      const categoria = this.categorias.find(c => c.id === catId);\n      if (!categoria) {\n        if (this.categorias.length === 0 || this.cargandoCategorias) {\n          if (!this.cargandoCategorias) this.cargarCategorias();\n          return 'Cargando...';\n        }\n        return `Categor√≠a ID: ${catId}`;\n      }\n      return categoria.categoryName;\n    },\n    obtenerNombreMarca(marcaId) {\n      if (!marcaId) return '';\n      const brandId = parseInt(marcaId);\n      const marca = this.marcas.find(m => m.id === brandId);\n      if (!marca) {\n        if (this.marcas.length === 0 || this.cargandoMarcas) {\n          if (!this.cargandoMarcas) this.cargarMarcas();\n          return 'Cargando...';\n        }\n        return `Marca ID: ${brandId}`;\n      }\n      return marca.brandName;\n    },\n    agregarProductoALista() {\n      // Asegurarse de que tenemos productos cargados cuando agregamos un nuevo producto\n      if (this.productosDisponibles.length === 0 && !this.cargandoProductos) {\n        this.cargarProductos();\n      }\n      this.ordenActual.products.push({\n        esExistente: true,\n        productId: null,\n        code: '',\n        name: '',\n        purchasePrice: null,\n        salePrice: null,\n        touristPrice: null,\n        quantity: null,\n        reservedStock: 0,\n        brandId: null,\n        categoryId: null,\n        wholesaleSale: false,\n        wholesalePrice: null,\n        wholesaleQuantity: null,\n        cargando: false,\n        error: null,\n        encontrado: false,\n        activeTab: 'info'\n      });\n    },\n    eliminarProducto(index) {\n      this.ordenActual.products.splice(index, 1);\n    },\n    async buscarProducto(index) {\n      const producto = this.ordenActual.products[index];\n      if (!producto.productId) return;\n      producto.cargando = true;\n      producto.error = null;\n      try {\n        const response = await apiRequest({\n          method: 'GET',\n          path: `products/${producto.productId}`\n        });\n        if (response.status === 200) {\n          const productoData = response.data;\n          producto.code = productoData.code;\n          producto.name = productoData.name;\n          producto.purchasePrice = parseFloat(productoData.purchasePrice);\n          producto.salePrice = parseFloat(productoData.salePrice);\n          producto.touristPrice = parseFloat(productoData.touristPrice);\n          producto.stock = productoData.stock;\n          producto.reservedStock = productoData.reservedStock || 0;\n          producto.brand = productoData.brand;\n          producto.category = productoData.category;\n          producto.brandId = productoData.brand.id;\n          producto.categoryId = productoData.category.id;\n          producto.wholesaleSale = productoData.wholesaleSale || false;\n          producto.wholesalePrice = parseFloat(productoData.wholesalePrice) || 0;\n          producto.wholesaleQuantity = parseInt(productoData.wholesaleQuantity) || 10;\n          producto.encontrado = true;\n        } else {\n          producto.error = `Error ${response.status}: No se pudo encontrar el producto`;\n          producto.encontrado = false;\n        }\n      } catch (err) {\n        producto.error = err.message || 'Error al buscar el producto';\n        producto.encontrado = false;\n      } finally {\n        producto.cargando = false;\n      }\n    },\n    async registrarDetalle() {\n      this.enviando = true;\n      this.error = null;\n      this.exitoso = false;\n      try {\n        const invoiceNumber = this.ordenActual.invoiceNumber.trim();\n        if (!invoiceNumber) {\n          this.error = \"Debe seleccionar una factura v√°lida\";\n          this.enviando = false;\n          return;\n        }\n        if (this.ordenActual.products.length === 0) {\n          this.error = \"Debe agregar al menos un producto a la orden\";\n          this.enviando = false;\n          return;\n        }\n        const productos = [...this.ordenActual.products];\n        const respuestas = [];\n        let hayError = false;\n        for (let i = 0; i < productos.length; i++) {\n          const p = productos[i];\n          let productoData;\n          if (p.esExistente) {\n            productoData = {\n              productId: parseInt(p.productId),\n              quantity: parseInt(p.quantity),\n              purchasePrice: parseFloat(p.purchasePrice)\n            };\n          } else {\n            productoData = {\n              code: p.code,\n              name: p.name,\n              purchasePrice: parseFloat(p.purchasePrice),\n              salePrice: parseFloat(p.salePrice),\n              touristPrice: parseFloat(p.touristPrice),\n              quantity: parseInt(p.quantity),\n              brandId: parseInt(p.brandId),\n              categoryId: parseInt(p.categoryId),\n              wholesaleSale: p.wholesaleSale\n            };\n            if (p.wholesaleSale) {\n              productoData.wholesalePrice = parseFloat(p.wholesalePrice) || parseFloat(p.salePrice) * 0.9;\n              productoData.wholesaleQuantity = parseInt(p.wholesaleQuantity) || 10;\n            }\n          }\n          const ordenData = {\n            invoiceNumber,\n            isActive: true,\n            products: [productoData]\n          };\n          try {\n            const response = await apiRequest({\n              method: 'POST',\n              path: 'order-details',\n              data: ordenData\n            });\n            if (response.status === 201 || response.status === 200) {\n              respuestas.push(response.data[0]);\n            } else {\n              hayError = true;\n              this.error = `Error ${response.status} en producto ${i + 1}`;\n              break;\n            }\n          } catch (err) {\n            hayError = true;\n            this.error = `Error en producto ${i + 1}: ${err.message || 'Error al conectar con el servidor'}`;\n            break;\n          }\n        }\n        if (!hayError) {\n          this.exitoso = true;\n          this.cargarOrdenesDisponibles();\n          setTimeout(() => this.limpiarFormulario(), 2000);\n        }\n      } catch (err) {\n        this.error = err.message || 'Error al conectar con el servidor';\n      } finally {\n        this.enviando = false;\n      }\n    },\n    limpiarFormulario() {\n      this.ordenActual = {\n        invoiceNumber: '',\n        products: []\n      };\n      this.error = null;\n      this.exitoso = false;\n    },\n    formatearMoneda(valor) {\n      if (!valor || isNaN(valor)) return '$0.00';\n      return new Intl.NumberFormat('es-SV', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 2\n      }).format(valor);\n    },\n    calcularIVAEstimado(precio) {\n      if (!precio || isNaN(precio)) return 0;\n      return parseFloat(precio) * 0.13;\n    },\n    calcularTotalConIVA(producto) {\n      const precio = parseFloat(producto.purchasePrice) || 0;\n      const cantidad = parseInt(producto.quantity) || 0;\n      const iva = this.calcularIVAEstimado(precio);\n      return (precio + iva) * cantidad;\n    }\n  }\n};","map":{"version":3,"names":["apiRequest","AyudanteSesion","DetailsEliminados","BuscarDetails","CreateOrden","Ordenes","OrdenesLista","OrderDelets","name","components","data","activeTab","ordenActual","invoiceNumber","products","enviando","error","exitoso","categorias","marcas","productosDisponibles","cargandoCategorias","cargandoMarcas","cargandoProductos","esAdmin","ordenesDisponibles","cargandoOrdenes","paginaActual","totalPaginas","limite","computed","ordenValida","length","every","p","esExistente","productId","quantity","purchasePrice","code","salePrice","touristPrice","brandId","categoryId","created","cargarCategorias","cargarMarcas","cargarProductos","verificarAdmin","cargarOrdenesDisponibles","methods","response","method","path","status","Array","isArray","totalPages","cargarMasProductos","console","warn","err","$buefy","toast","open","message","type","cambiarTab","tab","datosUsuario","obtenerDatosSesion","rol","onDetalleRestaurado","onOrdenRestaurada","obtenerNombreCategoria","categoriaId","catId","parseInt","categoria","find","c","id","categoryName","obtenerNombreMarca","marcaId","marca","m","brandName","agregarProductoALista","push","reservedStock","wholesaleSale","wholesalePrice","wholesaleQuantity","cargando","encontrado","eliminarProducto","index","splice","buscarProducto","producto","productoData","parseFloat","stock","brand","category","registrarDetalle","trim","productos","respuestas","hayError","i","ordenData","isActive","setTimeout","limpiarFormulario","formatearMoneda","valor","isNaN","Intl","NumberFormat","style","currency","minimumFractionDigits","format","calcularIVAEstimado","precio","calcularTotalConIVA","cantidad","iva"],"sources":["src/components/OrdenesDetalles/OrderDatails.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-details\">\r\n    <div class=\"page-header\">\r\n      <i class=\"fas fa-boxes header-icon\"></i>\r\n      <h2>Detalles de Orden</h2>\r\n    </div>\r\n\r\n    <!-- Implementando tabs de Bulma -->\r\n    <div class=\"tabs is-boxed mb-4\">\r\n      <ul>\r\n\r\n        <li :class=\"{ 'is-active': activeTab === 'crear' }\">\r\n          <a @click=\"cambiarTab('crear')\">\r\n            <span class=\"icon is-small\"><i class=\"fas fa-plus-circle\"></i></span>\r\n            <span>Crear Orden</span>\r\n          </a>\r\n        </li>\r\n        <li :class=\"{ 'is-active': activeTab === 'activos' }\">\r\n          <a @click=\"cambiarTab('activos')\">\r\n            <span class=\"icon is-small\"><i class=\"fas fa-file-invoice\"></i></span>\r\n            <span>Registrar Orden</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li :class=\"{ 'is-active': activeTab === 'ordenes' }\">\r\n          <a @click=\"cambiarTab('ordenes')\">\r\n            <span class=\"icon is-small\"><i class=\"fas fa-list-alt\"></i></span>\r\n            <span>Listado de √ìrdenes</span>\r\n          </a>\r\n        </li>\r\n        <li :class=\"{ 'is-active': activeTab === 'ordenesLista' }\">\r\n          <a @click=\"cambiarTab('ordenesLista')\">\r\n            <span class=\"icon is-small\"><i class=\"fas fa-clipboard-list\"></i></span>\r\n            <span>√ìrdenes Registradas</span>\r\n          </a>\r\n        </li>\r\n        <li :class=\"{ 'is-active': activeTab === 'buscar' }\">\r\n          <a @click=\"cambiarTab('buscar')\">\r\n            <span class=\"icon is-small\"><i class=\"fas fa-search\"></i></span>\r\n            <span>Buscar Orden</span>\r\n          </a>\r\n        </li>\r\n        <!-- Solo mostrar la pesta√±a de √ìrdenes Eliminadas si el usuario es admin -->\r\n        <li v-if=\"esAdmin\" :class=\"{ 'is-active': activeTab === 'eliminados' }\">\r\n          <a @click=\"cambiarTab('eliminados')\">\r\n            <span class=\"icon is-small\"><i class=\"fas fa-archive\"></i></span>\r\n            <span>√ìrdenes Eliminadas</span>\r\n          </a>\r\n        </li>\r\n        <!-- Solo mostrar la pesta√±a de PListado de √ìrdenes eliminados si el usuario es admin -->\r\n        <li v-if=\"esAdmin\" :class=\"{ 'is-active': activeTab === 'pedidosEliminados' }\">\r\n          <a @click=\"cambiarTab('pedidosEliminados')\">\r\n            <span class=\"icon is-small\"><i class=\"fas fa-trash-restore\"></i></span>\r\n            <span>Listado de √ìrdenes eliminados</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Contenido de la pesta√±a activa -->\r\n    <div v-if=\"activeTab === 'activos'\">\r\n      <div class=\"layout-container\">\r\n        <!-- Columna √∫nica: Formulario de Registro -->\r\n        <div class=\"full-column\">\r\n          <div class=\"section\">\r\n            <div class=\"section-header\">\r\n              <div class=\"header-left\">\r\n                <i class=\"fas fa-plus-circle section-icon\"></i>\r\n                <h3>Registrar Detalle de Orden</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"section-content\">\r\n              <form @submit.prevent=\"registrarDetalle\" class=\"form\">\r\n                <!-- N√∫mero de factura (como select) -->\r\n                <div class=\"form-group\">\r\n                  <label for=\"invoiceNumber\">\r\n                    <i class=\"fas fa-file-invoice label-icon\"></i> N√∫mero de factura:\r\n                  </label>\r\n                  <div class=\"input-wrapper\">\r\n                    <select id=\"invoiceNumber\" v-model=\"ordenActual.invoiceNumber\" class=\"form-control\" required>\r\n                      <option value=\"\" disabled>Seleccione una factura</option>\r\n                      <option v-for=\"orden in ordenesDisponibles\" :key=\"orden.id\" :value=\"orden.invoiceNumber\">\r\n                        {{ orden.invoiceNumber }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Lista de productos en la orden -->\r\n                <div class=\"products-list-section\">\r\n                  <div class=\"section-subheader\">\r\n                    <h4><i class=\"fas fa-list\"></i> Productos en esta orden</h4>\r\n                    <button type=\"button\" @click=\"agregarProductoALista\" class=\"btn btn-add\">\r\n                      <i class=\"fas fa-plus\"></i> Agregar producto\r\n                    </button>\r\n                  </div>\r\n\r\n                  <!-- Mensaje si no hay productos -->\r\n                  <div v-if=\"ordenActual.products.length === 0\" class=\"message\">\r\n                    <i class=\"fas fa-info-circle message-icon\"></i>\r\n                    <span>No hay productos agregados a esta orden. Haga clic en \"Agregar producto\" para\r\n                      comenzar.</span>\r\n                  </div>\r\n\r\n                  <!-- Lista de productos agregados -->\r\n                  <div v-else class=\"products-list\">\r\n                    <div v-for=\"(producto, index) in ordenActual.products\" :key=\"index\" class=\"product-item\">\r\n                      <div class=\"product-item-header\">\r\n                        <h5>\r\n                          <i class=\"fas fa-box\"></i>\r\n                          {{ producto.name || (producto.productId ? `Producto ID:\r\n                          ${producto.productId}` : `Producto #${index + 1}`) }}\r\n                        </h5>\r\n                        <button type=\"button\" @click=\"eliminarProducto(index)\" class=\"btn-remove\">\r\n                          <i class=\"fas fa-times\"></i>\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div class=\"product-item-body\">\r\n                        <!-- Si es producto existente o nuevo -->\r\n                        <div class=\"form-group checkbox-group\">\r\n                          <label class=\"switch-label\">Tipo de producto:</label>\r\n                          <div class=\"switch-options\">\r\n                            <label class=\"switch-option\" :class=\"{ 'active': producto.esExistente }\">\r\n                              <input type=\"radio\" :name=\"`tipoProducto_${index}`\" :value=\"true\"\r\n                                v-model=\"producto.esExistente\">\r\n                              <i class=\"fas fa-database\"></i> Existente\r\n                            </label>\r\n                            <label class=\"switch-option\" :class=\"{ 'active': !producto.esExistente }\">\r\n                              <input type=\"radio\" :name=\"`tipoProducto_${index}`\" :value=\"false\"\r\n                                v-model=\"producto.esExistente\">\r\n                              <i class=\"fas fa-plus-circle\"></i> Nuevo\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <!-- Si es producto existente -->\r\n                        <div v-if=\"producto.esExistente\" class=\"form-row\">\r\n                          <div class=\"form-group product-id-group\">\r\n                            <label :for=\"`productId_${index}`\">\r\n                              <i class=\"fas fa-hashtag label-icon\"></i> Producto:\r\n                            </label>\r\n                            <div class=\"input-wrapper product-id-wrapper\">\r\n                              <select :id=\"`productId_${index}`\" v-model=\"producto.productId\" class=\"form-control\" required>\r\n                                <option value=\"\" disabled>Seleccione un producto</option>\r\n                                <option v-for=\"prod in productosDisponibles\" :key=\"prod.id\" :value=\"prod.id\">\r\n                                  {{ prod.name }} ({{ prod.code }})\r\n                                </option>\r\n                              </select>\r\n                              <button type=\"button\" @click=\"buscarProducto(index)\" class=\"btn btn-search\"\r\n                                :disabled=\"!producto.productId || producto.cargando\">\r\n                                <i class=\"fas\" :class=\"producto.cargando ? 'fa-spinner fa-spin' : 'fa-search'\"></i>\r\n                                {{ producto.cargando ? 'Buscando...' : 'Buscar' }}\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <!-- Mensaje de error si no se encuentra el producto -->\r\n                        <div v-if=\"producto.error\" class=\"message error product-error\">\r\n                          <i class=\"fas fa-exclamation-circle message-icon\"></i>\r\n                          <span>{{ producto.error }}</span>\r\n                        </div>\r\n\r\n                        <!-- Si es producto nuevo o si se encontr√≥ el producto existente -->\r\n                        <div v-if=\"!producto.esExistente || (producto.esExistente && producto.encontrado)\">\r\n                          <!-- Informaci√≥n del producto encontrado -->\r\n                          <div v-if=\"producto.esExistente && producto.encontrado\" class=\"product-found-info\">\r\n                            <div class=\"product-info-header\">\r\n                              <i class=\"fas fa-info-circle\"></i> Informaci√≥n del producto\r\n                              encontrado\r\n                            </div>\r\n                            <div class=\"product-info-content\">\r\n                              <div class=\"info-row\">\r\n                                <span class=\"info-label\">C√≥digo:</span>\r\n                                <span class=\"info-value\">{{ producto.code }}</span>\r\n                              </div>\r\n                              <div class=\"info-row\">\r\n                                <span class=\"info-label\">Nombre:</span>\r\n                                <span class=\"info-value\">{{ producto.name }}</span>\r\n                              </div>\r\n                              <div class=\"info-row\">\r\n                                <span class=\"info-label\">Categor√≠a:</span>\r\n                                <span class=\"info-value\">\r\n                                  {{ producto.category ? producto.category.categoryName : 'No especificada' }}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"info-row\">\r\n                                <span class=\"info-label\">Marca:</span>\r\n                                <span class=\"info-value\">\r\n                                  {{ producto.brand ? producto.brand.brandName : 'No especificada' }}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"info-row\">\r\n                                <span class=\"info-label\">Stock actual:</span>\r\n                                <span class=\"info-value\">{{ producto.stock }}\r\n                                  unidades</span>\r\n                              </div>\r\n                              <div class=\"info-row\">\r\n                                <span class=\"info-label\">Precio de venta:</span>\r\n                                <span class=\"info-value\">{{\r\n                                  formatearMoneda(producto.salePrice) }}</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <!-- Tabs para organizar la informaci√≥n del producto -->\r\n                          <div class=\"product-tabs\">\r\n                            <div class=\"tab-headers\">\r\n                              <div class=\"tab-header\" :class=\"{ 'active': producto.activeTab === 'info' }\"\r\n                                @click=\"producto.activeTab = 'info'\">\r\n                                <i class=\"fas fa-info-circle\"></i> Informaci√≥n\r\n                              </div>\r\n                              <div class=\"tab-header\" :class=\"{ 'active': producto.activeTab === 'prices' }\"\r\n                                @click=\"producto.activeTab = 'prices'\">\r\n                                <i class=\"fas fa-tag\"></i> Precios\r\n                              </div>\r\n                              <div class=\"tab-header\" :class=\"{ 'active': producto.activeTab === 'wholesale' }\"\r\n                                @click=\"producto.activeTab = 'wholesale'\">\r\n                                <i class=\"fas fa-truck\"></i> Mayoreo\r\n                              </div>\r\n                              <div class=\"tab-header\" :class=\"{ 'active': producto.activeTab === 'tax' }\"\r\n                                @click=\"producto.activeTab = 'tax'\">\r\n                                <i class=\"fas fa-percentage\"></i> Impuestos\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"tab-content\">\r\n                              <!-- Tab: Informaci√≥n B√°sica -->\r\n                              <div v-show=\"producto.activeTab === 'info'\" class=\"tab-pane\">\r\n                                <div v-if=\"!producto.esExistente\" class=\"form-row\">\r\n                                  <div class=\"form-group half\">\r\n                                    <label :for=\"`code_${index}`\">\r\n                                      <i class=\"fas fa-barcode label-icon\"></i>\r\n                                      C√≥digo:\r\n                                    </label>\r\n                                    <div class=\"input-wrapper\">\r\n                                      <input type=\"text\" :id=\"`code_${index}`\" v-model=\"producto.code\"\r\n                                        class=\"form-control\" placeholder=\"Ej: PROD123\" required />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"form-group half\">\r\n                                    <label :for=\"`name_${index}`\">\r\n                                      <i class=\"fas fa-tag label-icon\"></i> Nombre:\r\n                                    </label>\r\n                                    <div class=\"input-wrapper\">\r\n                                      <input type=\"text\" :id=\"`name_${index}`\" v-model=\"producto.name\"\r\n                                        class=\"form-control\" placeholder=\"Ej: Laptop Gamer\" required />\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div v-if=\"!producto.esExistente\" class=\"form-row\">\r\n                                  <div class=\"form-group half\">\r\n                                    <label :for=\"`brandId_${index}`\">\r\n                                      <i class=\"fas fa-copyright label-icon\"></i>\r\n                                      Marca:\r\n                                    </label>\r\n                                    <div class=\"input-wrapper\">\r\n                                      <select :id=\"`brandId_${index}`\" v-model=\"producto.brandId\" class=\"form-control\"\r\n                                        required>\r\n                                        <option value=\"\" disabled>Seleccione una\r\n                                          marca</option>\r\n                                        <option v-for=\"marca in marcas\" :key=\"marca.id\" :value=\"marca.id\">\r\n                                          {{ marca.brandName }}\r\n                                        </option>\r\n                                      </select>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"form-group half\">\r\n                                    <label :for=\"`categoryId_${index}`\">\r\n                                      <i class=\"fas fa-folder label-icon\"></i>\r\n                                      Categor√≠a:\r\n                                    </label>\r\n                                    <div class=\"input-wrapper\">\r\n                                      <select :id=\"`categoryId_${index}`\" v-model=\"producto.categoryId\"\r\n                                        class=\"form-control\" required>\r\n                                        <option value=\"\" disabled>Seleccione una\r\n                                          categor√≠a</option>\r\n                                        <option v-for=\"categoria in categorias\" :key=\"categoria.id\"\r\n                                          :value=\"categoria.id\">\r\n                                          {{ categoria.categoryName }}\r\n                                        </option>\r\n                                      </select>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                  <label :for=\"`quantity_${index}`\">\r\n                                    <i class=\"fas fa-sort-numeric-up label-icon\"></i>\r\n                                    Cantidad:\r\n                                  </label>\r\n                                  <div class=\"input-wrapper\">\r\n                                    <input type=\"number\" :id=\"`quantity_${index}`\" v-model=\"producto.quantity\"\r\n                                      class=\"form-control\" placeholder=\"Ej: 10\" min=\"1\" required />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <!-- Tab: Precios -->\r\n                              <div v-show=\"producto.activeTab === 'prices'\" class=\"tab-pane\">\r\n                                <div class=\"form-row\">\r\n                                  <div class=\"form-group half\">\r\n                                    <label :for=\"`purchasePrice_${index}`\">\r\n                                      <i class=\"fas fa-shopping-cart label-icon\"></i>\r\n                                      Precio de compra:\r\n                                    </label>\r\n                                    <div class=\"input-wrapper\">\r\n                                      <input type=\"number\" :id=\"`purchasePrice_${index}`\"\r\n                                        v-model=\"producto.purchasePrice\" class=\"form-control\" placeholder=\"Ej: 1200\"\r\n                                        step=\"0.01\" min=\"0\" required />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div v-if=\"!producto.esExistente\" class=\"form-group half\">\r\n                                    <label :for=\"`salePrice_${index}`\">\r\n                                      <i class=\"fas fa-tag label-icon\"></i> Precio de\r\n                                      venta:\r\n                                    </label>\r\n                                    <div class=\"input-wrapper\">\r\n                                      <input type=\"number\" :id=\"`salePrice_${index}`\" v-model=\"producto.salePrice\"\r\n                                        class=\"form-control\" placeholder=\"Ej: 1500\" step=\"0.01\" min=\"0\" required />\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div v-if=\"!producto.esExistente\" class=\"form-row\">\r\n                                  <div class=\"form-group\">\r\n                                    <label :for=\"`touristPrice_${index}`\">\r\n                                      <i class=\"fas fa-plane label-icon\"></i> Precio turista:\r\n                                    </label>\r\n                                    <div class=\"input-wrapper\">\r\n                                      <input type=\"number\" :id=\"`touristPrice_${index}`\" v-model=\"producto.touristPrice\"\r\n                                        class=\"form-control\" placeholder=\"Ej: 1500\" step=\"0.01\" min=\"0\" required />\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <!-- Tab: Mayoreo -->\r\n                              <div v-show=\"producto.activeTab === 'wholesale'\" class=\"tab-pane\">\r\n                                <div class=\"form-group checkbox-group\">\r\n                                  <label class=\"switch-label\">\r\n                                    <i class=\"fas fa-truck label-icon\"></i> Esta opci√≥n permite al usuario poner los\r\n                                    productos con precio para mayorista:\r\n                                  </label>\r\n                                  <div class=\"orden-switch-wrapper\">\r\n                                    <label class=\"orden-switch\">\r\n                                      <input type=\"checkbox\" v-model=\"producto.wholesaleSale\">\r\n                                      <span class=\"orden-slider round\"></span>\r\n                                    </label>\r\n                                    <span class=\"switch-text\">{{ producto.wholesaleSale ? 'Habilitado' : 'Deshabilitado'\r\n                                      }}</span>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <!-- Informaci√≥n de mayoreo -->\r\n                                <div class=\"wholesale-section\" v-if=\"producto.wholesaleSale\">\r\n                                  <div class=\"form-row\">\r\n                                    <div class=\"form-group half\">\r\n                                      <label :for=\"`wholesalePrice_${index}`\">\r\n                                        <i class=\"fas fa-money-bill-wave label-icon\"></i>\r\n                                        Precio mayorista:\r\n                                      </label>\r\n                                      <div class=\"input-wrapper\">\r\n                                        <input type=\"number\" :id=\"`wholesalePrice_${index}`\"\r\n                                          v-model=\"producto.wholesalePrice\" class=\"form-control\" placeholder=\"Ej: 1100\"\r\n                                          step=\"0.01\" min=\"0\" required />\r\n                                      </div>\r\n                                    </div>\r\n                                    <div class=\"form-group half\">\r\n                                      <label :for=\"`wholesaleQuantity_${index}`\">\r\n                                        <i class=\"fas fa-sort-amount-up label-icon\"></i>\r\n                                        Cantidad m√≠nima:\r\n                                      </label>\r\n                                      <div class=\"input-wrapper\">\r\n                                        <input type=\"number\" :id=\"`wholesaleQuantity_${index}`\"\r\n                                          v-model=\"producto.wholesaleQuantity\" class=\"form-control\" placeholder=\"Ej: 10\"\r\n                                          min=\"1\" required />\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <!-- Mensaje cuando est√° deshabilitado -->\r\n                                <div class=\"wholesale-info\" v-if=\"!producto.wholesaleSale\">\r\n                                  <i class=\"fas fa-info-circle\"></i>\r\n                                  <span>La venta al por mayor est√° deshabilitada para este producto.</span>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <!-- Tab: Impuestos -->\r\n                              <div v-show=\"producto.activeTab === 'tax'\" class=\"tab-pane\">\r\n                                <div class=\"tax-info\">\r\n                                  <div class=\"tax-header\">\r\n                                    <i class=\"fas fa-info-circle\"></i> Informaci√≥n de\r\n                                    impuestos\r\n                                  </div>\r\n                                  <div class=\"tax-content\">\r\n                                    <p>Los impuestos se calcular√°n autom√°ticamente en el\r\n                                      servidor basados en el precio de compra.</p>\r\n\r\n                                    <div class=\"tax-preview\">\r\n                                      <div class=\"tax-preview-row\">\r\n                                        <span class=\"tax-label\">Precio\r\n                                          unitario:</span>\r\n                                        <span class=\"tax-value\">{{\r\n                                          formatearMoneda(producto.purchasePrice)\r\n                                          }}</span>\r\n                                      </div>\r\n                                      <div class=\"tax-preview-row\">\r\n                                        <span class=\"tax-label\">IVA estimado\r\n                                          (13%):</span>\r\n                                        <span class=\"tax-value\">{{\r\n                                          formatearMoneda(calcularIVAEstimado(producto.purchasePrice))\r\n                                          }}</span>\r\n                                      </div>\r\n                                      <div class=\"tax-preview-row\">\r\n                                        <span class=\"tax-label\">Cantidad:</span>\r\n                                        <span class=\"tax-value\">{{ producto.quantity\r\n                                          || 0 }}</span>\r\n                                      </div>\r\n                                      <div class=\"tax-preview-row total-row\">\r\n                                        <span class=\"tax-label\">Total estimado con\r\n                                          IVA:</span>\r\n                                        <span class=\"tax-value total-value\">{{\r\n                                          formatearMoneda(calcularTotalConIVA(producto))\r\n                                          }}</span>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Botones de acci√≥n -->\r\n                <div class=\"form-actions\">\r\n                  <button type=\"button\" @click=\"limpiarFormulario\" class=\"btn btn-secondary\">\r\n                    <i class=\"fas fa-times\"></i> Cancelar\r\n                  </button>\r\n                  <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"enviando || !ordenValida\">\r\n                    <i class=\"fas fa-save\"></i> {{ enviando ? 'Registrando...' : 'Registrar Orden' }}\r\n                  </button>\r\n                </div>\r\n\r\n                <!-- Mensajes de error y √©xito -->\r\n                <div v-if=\"error\" class=\"message error\">\r\n                  <i class=\"fas fa-exclamation-circle message-icon\"></i>\r\n                  <span>{{ error }}</span>\r\n                </div>\r\n\r\n                <div v-if=\"exitoso\" class=\"message success\">\r\n                  <i class=\"fas fa-check-circle message-icon\"></i>\r\n                  <span>Orden registrada exitosamente.</span>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Componente CreateOrden -->\r\n    <create-orden v-else-if=\"activeTab === 'crear'\" />\r\n\r\n    <!-- Componente Ordenes -->\r\n    <ordenes v-else-if=\"activeTab === 'ordenes'\" />\r\n\r\n    <!-- Componente OrdenesLista -->\r\n    <ordenes-lista v-else-if=\"activeTab === 'ordenesLista'\" />\r\n\r\n    <!-- Componente BuscarDetails -->\r\n    <buscar-details v-else-if=\"activeTab === 'buscar'\" />\r\n\r\n    <!-- Componente Details-eliminados (solo si el usuario es admin) -->\r\n    <details-eliminados v-else-if=\"activeTab === 'eliminados' && esAdmin\" @detalle-restaurado=\"onDetalleRestaurado\" />\r\n\r\n    <!-- Componente OrderDelets (solo si el usuario es admin) -->\r\n    <order-delets v-else-if=\"activeTab === 'pedidosEliminados' && esAdmin\" @orden-restaurada=\"onOrdenRestaurada\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiRequest from '@/Servicios/HttpService';\r\nimport AyudanteSesion from '@/Servicios/AyudanteSesion';\r\nimport '@/components/stilos/order-details.css';\r\nimport DetailsEliminados from '../OrdenesDetalles/Details-eliminados.vue';\r\nimport BuscarDetails from './BusacarDetails.vue';\r\nimport CreateOrden from './CreateOrden.vue';\r\nimport Ordenes from './Ordenes.vue';\r\nimport OrdenesLista from './OrdenesLista.vue';\r\nimport OrderDelets from './OrderDelets.vue';\r\n\r\nexport default {\r\n  name: 'OrderDetails',\r\n  components: {\r\n    DetailsEliminados,\r\n    BuscarDetails,\r\n    CreateOrden,\r\n    Ordenes,\r\n    OrdenesLista,\r\n    OrderDelets\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      activeTab: 'activos',\r\n      ordenActual: {\r\n        invoiceNumber: '',\r\n        products: []\r\n      },\r\n      enviando: false,\r\n      error: null,\r\n      exitoso: false,\r\n      categorias: [],\r\n      marcas: [],\r\n      productosDisponibles: [], // A√±adido para almacenar la lista de productos\r\n      cargandoCategorias: false,\r\n      cargandoMarcas: false,\r\n      cargandoProductos: false, // A√±adido para controlar el estado de carga de productos\r\n      esAdmin: false,\r\n      ordenesDisponibles: [],\r\n      cargandoOrdenes: false,\r\n      paginaActual: 1,\r\n      totalPaginas: 1,\r\n      limite: 100 // Usar un l√≠mite alto para obtener m√°s productos de una vez\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ordenValida() {\r\n      if (this.ordenActual.products.length === 0) return false;\r\n      return this.ordenActual.invoiceNumber &&\r\n        this.ordenActual.products.every(p => {\r\n          if (p.esExistente) {\r\n            return p.productId && p.quantity && p.purchasePrice;\r\n          } else {\r\n            return p.code && p.name && p.purchasePrice && p.salePrice &&\r\n              p.touristPrice && p.quantity && p.brandId && p.categoryId;\r\n          }\r\n        });\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.cargarCategorias();\r\n    this.cargarMarcas();\r\n    this.cargarProductos(); // A√±adido para cargar la lista de productos al inicio\r\n    this.verificarAdmin();\r\n\r\n    // üëá Tambi√©n lo cargamos aqu√≠ por si el tab inicial es 'activos'\r\n    if (this.activeTab === 'activos') {\r\n      this.ordenActual.invoiceNumber = '';\r\n      this.cargarOrdenesDisponibles();\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // M√©todo actualizado para usar la estructura correcta de la API\r\n    async cargarProductos() {\r\n      this.cargandoProductos = true;\r\n      try {\r\n        // Usar los par√°metros de paginaci√≥n correctos\r\n        const response = await apiRequest({\r\n          method: 'GET',\r\n          path: `products?page=${this.paginaActual}&limit=${this.limite}`\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          // Extraer los datos seg√∫n la estructura de respuesta proporcionada\r\n          if (response.data && response.data.data && Array.isArray(response.data.data)) {\r\n            this.productosDisponibles = response.data.data;\r\n            this.totalPaginas = response.data.totalPages || 1;\r\n            \r\n            // Si hay m√°s p√°ginas y necesitamos cargar m√°s productos\r\n            if (this.totalPaginas > 1 && this.paginaActual < this.totalPaginas) {\r\n              this.cargarMasProductos();\r\n            }\r\n          } else {\r\n            console.warn('Estructura de respuesta inesperada:', response.data);\r\n            this.productosDisponibles = [];\r\n          }\r\n        } else {\r\n          console.error('Error al cargar productos:', response.status);\r\n          this.productosDisponibles = [];\r\n        }\r\n      } catch (err) {\r\n        console.error('Error al cargar productos:', err);\r\n        this.$buefy.toast.open({\r\n          message: `Error al cargar productos: ${err.message || 'Error desconocido'}`,\r\n          type: 'is-danger'\r\n        });\r\n        this.productosDisponibles = [];\r\n      } finally {\r\n        this.cargandoProductos = false;\r\n      }\r\n    },\r\n\r\n    // M√©todo para cargar m√°s productos si hay paginaci√≥n\r\n    async cargarMasProductos() {\r\n      if (this.paginaActual >= this.totalPaginas) return;\r\n      \r\n      this.paginaActual++;\r\n      this.cargandoProductos = true;\r\n      \r\n      try {\r\n        const response = await apiRequest({\r\n          method: 'GET',\r\n          path: `products?page=${this.paginaActual}&limit=${this.limite}`\r\n        });\r\n\r\n        if (response.status === 200 && response.data && response.data.data) {\r\n          // A√±adir los nuevos productos a la lista existente\r\n          this.productosDisponibles = [...this.productosDisponibles, ...response.data.data];\r\n          \r\n          // Verificar si hay m√°s p√°ginas para cargar\r\n          if (this.paginaActual < response.data.totalPages) {\r\n            this.cargarMasProductos(); // Cargar la siguiente p√°gina recursivamente\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Error al cargar m√°s productos:', err);\r\n      } finally {\r\n        this.cargandoProductos = false;\r\n      }\r\n    },\r\n\r\n    // ‚úÖ Este m√©todo recarga las √≥rdenes solo cuando se entra al tab de 'activos'\r\n    cambiarTab(tab) {\r\n      if ((tab === 'eliminados' || tab === 'pedidosEliminados') && !this.esAdmin) {\r\n        this.$buefy.toast.open({\r\n          message: 'No tiene permisos para acceder a esta secci√≥n',\r\n          type: 'is-danger'\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.activeTab = tab;\r\n\r\n      if (tab === 'activos') {\r\n        this.ordenActual.invoiceNumber = '';\r\n        this.cargarOrdenesDisponibles();\r\n        \r\n        // Asegurarse de que tenemos productos cargados cuando entramos a este tab\r\n        if (this.productosDisponibles.length === 0 && !this.cargandoProductos) {\r\n          this.cargarProductos();\r\n        }\r\n      }\r\n    },\r\n\r\n    async cargarOrdenesDisponibles() {\r\n      this.cargandoOrdenes = true;\r\n      try {\r\n        const response = await apiRequest({\r\n          method: 'GET',\r\n          path: 'orders/findActive'\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          this.ordenesDisponibles = response.data;\r\n        } else {\r\n          console.error('Error al cargar √≥rdenes disponibles:', response.status);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error al cargar √≥rdenes disponibles:', err);\r\n        this.$buefy.toast.open({\r\n          message: `Error al cargar √≥rdenes disponibles: ${err.message || 'Error desconocido'}`,\r\n          type: 'is-danger'\r\n        });\r\n      } finally {\r\n        this.cargandoOrdenes = false;\r\n      }\r\n    },\r\n\r\n    verificarAdmin() {\r\n      const datosUsuario = AyudanteSesion.obtenerDatosSesion();\r\n      this.esAdmin = datosUsuario.rol === 'Admin';\r\n\r\n      if (!this.esAdmin && (this.activeTab === 'eliminados' || this.activeTab === 'pedidosEliminados')) {\r\n        this.activeTab = 'activos';\r\n      }\r\n    },\r\n\r\n    onDetalleRestaurado() {\r\n      this.$buefy.toast.open({\r\n        message: 'Detalle restaurado correctamente',\r\n        type: 'is-success'\r\n      });\r\n    },\r\n\r\n    onOrdenRestaurada() {\r\n      this.$buefy.toast.open({\r\n        message: 'Pedido restaurado correctamente',\r\n        type: 'is-success'\r\n      });\r\n    },\r\n\r\n    async cargarCategorias() {\r\n      this.cargandoCategorias = true;\r\n      try {\r\n        const response = await apiRequest({ method: 'GET', path: 'categories' });\r\n        if (response.status === 200) this.categorias = response.data;\r\n      } catch (err) {\r\n        console.error('Error al cargar categor√≠as:', err);\r\n      } finally {\r\n        this.cargandoCategorias = false;\r\n      }\r\n    },\r\n\r\n    async cargarMarcas() {\r\n      this.cargandoMarcas = true;\r\n      try {\r\n        const response = await apiRequest({ method: 'GET', path: 'brands' });\r\n        if (response.status === 200) this.marcas = response.data;\r\n      } catch (err) {\r\n        console.error('Error al cargar marcas:', err);\r\n      } finally {\r\n        this.cargandoMarcas = false;\r\n      }\r\n    },\r\n\r\n    obtenerNombreCategoria(categoriaId) {\r\n      if (!categoriaId) return '';\r\n      const catId = parseInt(categoriaId);\r\n      const categoria = this.categorias.find(c => c.id === catId);\r\n      if (!categoria) {\r\n        if (this.categorias.length === 0 || this.cargandoCategorias) {\r\n          if (!this.cargandoCategorias) this.cargarCategorias();\r\n          return 'Cargando...';\r\n        }\r\n        return `Categor√≠a ID: ${catId}`;\r\n      }\r\n      return categoria.categoryName;\r\n    },\r\n\r\n    obtenerNombreMarca(marcaId) {\r\n      if (!marcaId) return '';\r\n      const brandId = parseInt(marcaId);\r\n      const marca = this.marcas.find(m => m.id === brandId);\r\n      if (!marca) {\r\n        if (this.marcas.length === 0 || this.cargandoMarcas) {\r\n          if (!this.cargandoMarcas) this.cargarMarcas();\r\n          return 'Cargando...';\r\n        }\r\n        return `Marca ID: ${brandId}`;\r\n      }\r\n      return marca.brandName;\r\n    },\r\n\r\n    agregarProductoALista() {\r\n      // Asegurarse de que tenemos productos cargados cuando agregamos un nuevo producto\r\n      if (this.productosDisponibles.length === 0 && !this.cargandoProductos) {\r\n        this.cargarProductos();\r\n      }\r\n      \r\n      this.ordenActual.products.push({\r\n        esExistente: true,\r\n        productId: null,\r\n        code: '',\r\n        name: '',\r\n        purchasePrice: null,\r\n        salePrice: null,\r\n        touristPrice: null,\r\n        quantity: null,\r\n        reservedStock: 0,\r\n        brandId: null,\r\n        categoryId: null,\r\n        wholesaleSale: false,\r\n        wholesalePrice: null,\r\n        wholesaleQuantity: null,\r\n        cargando: false,\r\n        error: null,\r\n        encontrado: false,\r\n        activeTab: 'info'\r\n      });\r\n    },\r\n\r\n    eliminarProducto(index) {\r\n      this.ordenActual.products.splice(index, 1);\r\n    },\r\n\r\n    async buscarProducto(index) {\r\n      const producto = this.ordenActual.products[index];\r\n      if (!producto.productId) return;\r\n      producto.cargando = true;\r\n      producto.error = null;\r\n\r\n      try {\r\n        const response = await apiRequest({\r\n          method: 'GET',\r\n          path: `products/${producto.productId}`\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          const productoData = response.data;\r\n          producto.code = productoData.code;\r\n          producto.name = productoData.name;\r\n          producto.purchasePrice = parseFloat(productoData.purchasePrice);\r\n          producto.salePrice = parseFloat(productoData.salePrice);\r\n          producto.touristPrice = parseFloat(productoData.touristPrice);\r\n          producto.stock = productoData.stock;\r\n          producto.reservedStock = productoData.reservedStock || 0;\r\n          producto.brand = productoData.brand;\r\n          producto.category = productoData.category;\r\n          producto.brandId = productoData.brand.id;\r\n          producto.categoryId = productoData.category.id;\r\n          producto.wholesaleSale = productoData.wholesaleSale || false;\r\n          producto.wholesalePrice = parseFloat(productoData.wholesalePrice) || 0;\r\n          producto.wholesaleQuantity = parseInt(productoData.wholesaleQuantity) || 10;\r\n          producto.encontrado = true;\r\n        } else {\r\n          producto.error = `Error ${response.status}: No se pudo encontrar el producto`;\r\n          producto.encontrado = false;\r\n        }\r\n      } catch (err) {\r\n        producto.error = err.message || 'Error al buscar el producto';\r\n        producto.encontrado = false;\r\n      } finally {\r\n        producto.cargando = false;\r\n      }\r\n    },\r\n\r\n    async registrarDetalle() {\r\n      this.enviando = true;\r\n      this.error = null;\r\n      this.exitoso = false;\r\n\r\n      try {\r\n        const invoiceNumber = this.ordenActual.invoiceNumber.trim();\r\n        if (!invoiceNumber) {\r\n          this.error = \"Debe seleccionar una factura v√°lida\";\r\n          this.enviando = false;\r\n          return;\r\n        }\r\n\r\n        if (this.ordenActual.products.length === 0) {\r\n          this.error = \"Debe agregar al menos un producto a la orden\";\r\n          this.enviando = false;\r\n          return;\r\n        }\r\n\r\n        const productos = [...this.ordenActual.products];\r\n        const respuestas = [];\r\n        let hayError = false;\r\n\r\n        for (let i = 0; i < productos.length; i++) {\r\n          const p = productos[i];\r\n          let productoData;\r\n\r\n          if (p.esExistente) {\r\n            productoData = {\r\n              productId: parseInt(p.productId),\r\n              quantity: parseInt(p.quantity),\r\n              purchasePrice: parseFloat(p.purchasePrice)\r\n            };\r\n          } else {\r\n            productoData = {\r\n              code: p.code,\r\n              name: p.name,\r\n              purchasePrice: parseFloat(p.purchasePrice),\r\n              salePrice: parseFloat(p.salePrice),\r\n              touristPrice: parseFloat(p.touristPrice),\r\n              quantity: parseInt(p.quantity),\r\n              brandId: parseInt(p.brandId),\r\n              categoryId: parseInt(p.categoryId),\r\n              wholesaleSale: p.wholesaleSale\r\n            };\r\n            if (p.wholesaleSale) {\r\n              productoData.wholesalePrice = parseFloat(p.wholesalePrice) || parseFloat(p.salePrice) * 0.9;\r\n              productoData.wholesaleQuantity = parseInt(p.wholesaleQuantity) || 10;\r\n            }\r\n          }\r\n\r\n          const ordenData = {\r\n            invoiceNumber,\r\n            isActive: true,\r\n            products: [productoData]\r\n          };\r\n\r\n          try {\r\n            const response = await apiRequest({\r\n              method: 'POST',\r\n              path: 'order-details',\r\n              data: ordenData\r\n            });\r\n\r\n            if (response.status === 201 || response.status === 200) {\r\n              respuestas.push(response.data[0]);\r\n            } else {\r\n              hayError = true;\r\n              this.error = `Error ${response.status} en producto ${i + 1}`;\r\n              break;\r\n            }\r\n          } catch (err) {\r\n            hayError = true;\r\n            this.error = `Error en producto ${i + 1}: ${err.message || 'Error al conectar con el servidor'}`;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!hayError) {\r\n          this.exitoso = true;\r\n          this.cargarOrdenesDisponibles();\r\n          setTimeout(() => this.limpiarFormulario(), 2000);\r\n        }\r\n      } catch (err) {\r\n        this.error = err.message || 'Error al conectar con el servidor';\r\n      } finally {\r\n        this.enviando = false;\r\n      }\r\n    },\r\n\r\n    limpiarFormulario() {\r\n      this.ordenActual = {\r\n        invoiceNumber: '',\r\n        products: []\r\n      };\r\n      this.error = null;\r\n      this.exitoso = false;\r\n    },\r\n\r\n    formatearMoneda(valor) {\r\n      if (!valor || isNaN(valor)) return '$0.00';\r\n      return new Intl.NumberFormat('es-SV', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 2\r\n      }).format(valor);\r\n    },\r\n\r\n    calcularIVAEstimado(precio) {\r\n      if (!precio || isNaN(precio)) return 0;\r\n      return parseFloat(precio) * 0.13;\r\n    },\r\n\r\n    calcularTotalConIVA(producto) {\r\n      const precio = parseFloat(producto.purchasePrice) || 0;\r\n      const cantidad = parseInt(producto.quantity) || 0;\r\n      const iva = this.calcularIVAEstimado(precio);\r\n      return (precio + iva) * cantidad;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.orden-switch {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 42px;\r\n  height: 22px;\r\n}\r\n\r\n.orden-switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.orden-slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #ccc;\r\n  transition: .4s;\r\n  border-radius: 24px;\r\n}\r\n\r\n.orden-slider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 16px;\r\n  width: 16px;\r\n  left: 3px;\r\n  bottom: 3px;\r\n  background-color: white;\r\n  transition: .4s;\r\n  border-radius: 50%;\r\n}\r\n\r\n.orden-switch input:checked+.orden-slider {\r\n  background-color: #2196F3;\r\n}\r\n\r\n.orden-switch input:checked+.orden-slider:before {\r\n  transform: translateX(20px);\r\n}\r\n\r\n.orden-switch-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.switch-text {\r\n  font-weight: 500;\r\n  font-size: 15px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}